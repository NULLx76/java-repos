<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.marw</groupId>
  <artifactId>de.marw.sshj.osgi.tests</artifactId>
  <version>1.0.0</version>
  <packaging>eclipse-test-plugin</packaging>

  <!--
    <parent>
    <groupId>de.marw</groupId>
    <artifactId>parent</artifactId>
    <version>1.0.0</version>
    <relativePath>../../releng/poms/parent</relativePath>
    </parent>
  -->

  <description>Tests whether sshj can be used by a running OSGI framework (dependencies, classloading).
  These tests need to run inside an OSGI framework.</description>
  <url>https://github.com/15knots/sshj.osgi.tests</url>
  <inceptionYear>2017</inceptionYear>

  <issueManagement>
    <url>https://github.com/15knots/sshj.osgi.tests/issues</url>
  </issueManagement>

  <properties>
    <!-- the version of sshj that we are going to test -->
    <sshj.version>0.19.1</sshj.version>
    <tycho-version>0.22.0</tycho-version>
  </properties>

  <repositories>
    <!-- add Mars repository to resolve dependencies -->
    <repository>
      <id>Mars</id>
      <layout>p2</layout>
      <url>http://download.eclipse.org/releases/mars/</url>
    </repository>
    <repository>
      <id>orbit</id>
      <layout>p2</layout>
      <url>http://download.eclipse.org/tools/orbit/downloads/drops/R20160221192158/repository/</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>com.hierynomus</groupId>
      <artifactId>sshj</artifactId>
      <version>${sshj.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin><!-- enable tycho build extension -->
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-maven-plugin</artifactId>
        <version>${tycho-version}</version>
        <extensions>true</extensions>
      </plugin>

      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>target-platform-configuration</artifactId>
        <version>${tycho-version}</version>
        <configuration>
          <pomDependencies>consider</pomDependencies>
        </configuration>
      </plugin>

      <plugin><!-- surefire runs our tests -->
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-surefire-plugin</artifactId>
        <version>${tycho-version}</version>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
 
          <dependencies>
            <dependency><!-- we are testing OSGi declarative services -->
              <artifactId>org.eclipse.equinox.ds</artifactId>
              <type>p2-installable-unit</type>
            </dependency>
          </dependencies>
        </configuration>
      </plugin>

      <!-- tell maven-jxr-plugin where to find the tests -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.testSourceDirectory}</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- generate source crossRef for test report -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <phase>post-integration-test</phase>
            <goals>
              <goal>test-jxr</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <!-- generate test report (goal surefire-report:report) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <showSuccess>true</showSuccess>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
</project>
