<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ChuangFa</groupId>
	<artifactId>chuangfa</artifactId>
	<version>1.0.0.0</version>
	<name>chuangfa</name>
	<packaging>war</packaging>

	<properties>
		<struts-version>2.1.8.1</struts-version>
	</properties>


	<!-- 包依赖 -->
	<dependencies>
		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring</artifactId>
			<version>2.5.6</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.6.2</version>
			<scope>runtime</scope>
		</dependency>
		<!-- spring over -->

		<!--
			quartz start <dependency> <groupId>opensymphony</groupId>
			<artifactId>quartz</artifactId> <version>1.6.3</version>
			</dependency>
		-->
		<!-- quartz end -->

		<!--
			hibernate <dependency> <groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>3.3.2.GA</version> </dependency> <dependency>
			<groupId>c3p0</groupId> <artifactId>c3p0</artifactId>
			<version>0.9.1</version> <scope>runtime</scope> </dependency>
		-->
		<!-- hibernate over -->

		<!-- struts -->
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-core</artifactId>
			<version>${struts-version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-json-plugin</artifactId>
			<version>${struts-version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-spring-plugin</artifactId>
			<version>${struts-version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-convention-plugin</artifactId>
			<version>${struts-version}</version>
			<scope>compile</scope>
		</dependency>
		<!-- struts over -->

		<!-- sitemesh -->
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>sitemesh</artifactId>
			<version>2.4.2</version>
			<scope>runtime</scope>
		</dependency>
		<!-- sitemesh over -->

		<!--
			mysql <dependency> <groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.10</version> <scope>runtime</scope> </dependency>
		-->
		<!-- mysql over -->

		<!--
			oracle <dependency> <groupId>com.oracle.jdbc</groupId>
			<artifactId>oraclejdbc</artifactId> <version>6</version>
			<scope>runtime</scope> </dependency>
		-->
		<!-- oracle over -->



		<!--
			testng <dependency> <groupId>org.testng</groupId>
			<artifactId>testng</artifactId> <version>6.2</version>
			<scope>test</scope> </dependency>
		-->
		<!-- testng over -->


		<!-- easymock -->
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.0</version>
			<scope>test</scope>
		</dependency>
		<!-- easymock end -->


		<!-- log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<type>jar</type>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- log4j over -->

		<!-- servlet -->
		<dependency>
			<groupId>tomcat</groupId>
			<artifactId>servlet</artifactId>
			<version>4.1.36</version>
			<scope>provided</scope>
		</dependency>
		<!-- servlet over -->

		<!-- slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-nop</artifactId>
			<version>1.5.8</version>
			<scope>compile</scope>
		</dependency>
		<!-- slf4j over -->



		<!-- commons-beantuils -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.8.0</version>
			<scope>compile</scope>
		</dependency>
		<!-- commons-beantuils over -->

		<!-- commons-collections  -->
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.1</version>
		</dependency>
		<!-- commons-collections  end -->



		<!-- bouncycastle -->
		<dependency>
			<groupId>bouncycastle</groupId>
			<artifactId>bcprov-jdk16</artifactId>
			<version>136</version>
			<scope>compile</scope>
		</dependency>
		<!-- bouncycastle end -->

		<!-- jaxen -->
		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
			<version>1.1.3</version>
			<type>jar</type>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<artifactId>xercesImpl</artifactId>
					<groupId>xerces</groupId>
				</exclusion>
				<exclusion>
					<artifactId>xom</artifactId>
					<groupId>xom</groupId>
				</exclusion>
				<exclusion>
					<artifactId>xml-apis</artifactId>
					<groupId>xml-apis</groupId>
				</exclusion>
				<exclusion>
					<artifactId>maven-cobertura-plugin</artifactId>
					<groupId>maven-plugins</groupId>
				</exclusion>
				<exclusion>
					<artifactId>maven-findbugs-plugin</artifactId>
					<groupId>maven-plugins</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- jaxen end -->

		<!--  dwr start -->
		<!--
			<dependency> <groupId>org.directwebremoting</groupId>
			<artifactId>dwr</artifactId> <version>3.0.M1</version> </dependency>
		-->
		<!--  dwr end -->

		<!-- httpclient start-->
		<!--
			<dependency> <groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId> <version>4.2</version>
			</dependency>
		-->
		<!-- httpclient end -->


		<!-- commons-fileupload-->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.1</version>
		</dependency>
		<!-- commons-fileupload end -->

		<!-- commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
		<!-- commons-fileupload end -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.4</version>
		</dependency>

	</dependencies>



	<build>
		<finalName>chuangfa</finalName>
		<outputDirectory>
			src/main/webapp/WEB-INF/classes
		</outputDirectory>
		<plugins>
			<!-- cargo自动部署web插件 -->
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.1.2</version>
				<configuration>
					<container>
						<containerId>tomcat5x</containerId>
						<home>E:/pack/java/apache-tomcat-5.5.25</home>
					</container>
					<configuration>
						<type>existing</type>
						<home>E:/pack/java/apache-tomcat-5.5.25</home>
					</configuration>
				</configuration>
			</plugin>


			<!-- tomcat日常开发测试插件 使用tomcat:run就可以运行了 -->
			<!--
				远程调试参数 (注意因为本来以下语句就是打开调试，所以不能再在eclipse用debug运行，只能用run) -Xdebug
				-Xnoagent -Djava.compiler=NONE
				-Xrunjdwp:transport=dt_socket,address=8787,suspend=n,server=y
				-Xms256m -Xmx512m -XX:MaxPermSize=128m
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<version>1.1</version>
				<configuration>
					<port>8080</port>
					<path>/chuangfa</path>
				</configuration>
			</plugin>


			<!--
				jetty日常开发测试插件 使用jetty:run就可以内试运行了 <plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.0.1.v20110908</version> <configuration>
				<scanIntervalSeconds>2</scanIntervalSeconds> <webAppConfig>
				<contextPath>/chuangfa</contextPath> </webAppConfig>
				</configuration> </plugin>
			-->

			<!-- 源代码拷贝的时候编码 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- 源代码编译的时候编码 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- testng 测试配置 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7.1</version>
				<configuration>
					<skipTests>false</skipTests>
					<suiteXmlFiles>
						<!-- 基于根目录 -->
						<suiteXmlFile>
							src/test/resources/testng.xml
						</suiteXmlFile>
					</suiteXmlFiles>
				</configuration>
			</plugin>

			<!-- 代码测试覆盖率插件 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- eclipse插件生成Myeclipse -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<jeeversion>5.0</jeeversion>
					<projectnatures>
						<java.lang.String>
							com.genuitec.eclipse.j2eedt.core.webnature
						</java.lang.String>
						<java.lang.String>
							org.eclipse.jdt.core.javanature
						</java.lang.String>
					</projectnatures>
					<buildOutputDirectory>
						src/main/webapp/WEB-INF/classes
					</buildOutputDirectory>
				</configuration>
			</plugin>
		</plugins>

	</build>

	<!--解决Missing artifact com.sun:tools:jar:1.5.0:system 问题 必须配置环境变量-->
	<profiles>
		<profile>
			<id>default-tools.jar</id>
			<activation>
				<property>
					<name>java.vendor</name>
					<value>Sun Microsystems Inc.</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.sun</groupId>
					<artifactId>tools</artifactId>
					<version>1.6.0</version>
					<scope>system</scope>
					<systemPath>${JAVA_HOME}/lib/tools.jar</systemPath>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

	<!--
		配置仓库 私服 <repositories> <repository> <id>archiva</id>
		<name>archiva</name> <url>
		http://localhost:8080/archiva/repository/internal/ </url> <releases>
		<enabled>true</enabled> </releases> <snapshots>
		<enabled>false</enabled> </snapshots> </repository> </repositories>
	-->
</project>
