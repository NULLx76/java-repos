<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>springtest</groupId>
  <artifactId>springtest</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
   <properties>
       <spring.version>4.0.2.RELEASE</spring.version>
        <!-- log4j日志文件管理包版本  -->
        <log4j.version>1.2.17</log4j.version>  
       <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
   </properties>
  <dependencies>
  
  <!-- webmvc -->
  <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring.version}</version>
    </dependency>
  <!-- web -->
   <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
    </dependency>
  <!-- spring 核心框架  -->
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
    </dependency>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
    </dependency>
     <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
    </dependency>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${spring.version}</version>
    </dependency>
       <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-expression</artifactId>
        <version>${spring.version}</version>
    </dependency>
    <!-- servlet 包 -->
    <dependency> 
   		<groupId>javax.servlet</groupId> 
  		<artifactId>servlet-api</artifactId> 
   		<version>2.5</version>  
    <scope>provided</scope> 
	</dependency> 
	<!-- 返回json需要的包 -->
	<dependency>
		<groupId>org.codehaus.jackson</groupId>
		<artifactId>jackson-mapper-asl</artifactId>
		<version>1.9.12</version> 
	</dependency>
  <!--  <dependency>
		<groupId>org.codehaus.jackson</groupId>
		<artifactId>jackson-core-asl</artifactId>
		<version>1.9.12</version> 
	</dependency> --> 
   <!-- aop 切面 -->
   <dependency>
		<groupId>org.aspectj</groupId>
		<artifactId>aspectjweaver</artifactId>
		<version>1.7.4</version>
   </dependency>
   <!-- 如题 -->
   <dependency>
	<groupId>org.mybatis</groupId>
	<artifactId>mybatis</artifactId>
	<version>3.2.8</version>
   </dependency>
    <dependency>
	    	<groupId>mysql</groupId>
	    	<artifactId>mysql-connector-java</artifactId>
	    	<version>5.1.30</version>
	</dependency>
	<dependency>  
    <groupId>org.slf4j</groupId>  
    <artifactId>slf4j-log4j12</artifactId>  
    <version>1.7.2</version>  
	</dependency>  
	<!-- 读取properties文件 -->
	<dependency>
  		<groupId>commons-configuration</groupId>
		<artifactId>commons-configuration</artifactId>
		<version>1.10</version>
  	</dependency>
  	<dependency>
	    	<groupId>c3p0</groupId>
	    	<artifactId>c3p0</artifactId>
	    	<version>0.9.1.2</version>
    </dependency>
    <!-- 数据连接配置 -->
    <dependency>
		<groupId>commons-dbcp</groupId>
		<artifactId>commons-dbcp</artifactId>
		<version>1.4</version>
	</dependency>
	 <!-- mybatis/spring整合包 -->  
    <dependency>  
            <groupId>org.mybatis</groupId>  
            <artifactId>mybatis-spring</artifactId>  
            <version>1.2.2</version>  
    </dependency>
    <dependency>  
            <groupId>junit</groupId>  
            <artifactId>junit</artifactId>  
            <version>4.11</version>  
            <!-- 表示开发的时候引入，发布的时候不会加载此包 -->  
            <scope>test</scope>  
    </dependency>  
    <dependency>  
            <groupId>log4j</groupId>  
            <artifactId>log4j</artifactId>  
            <version>${log4j.version}</version>  
      </dependency>   
        <dependency>
    		<groupId>javax.annotation</groupId>
    		<artifactId>javax.annotation-api</artifactId>
    	<version>1.2</version>
</dependency>
        
  </dependencies>
  
 <!-- 使用JETTY配置 -->
  <build>
		<finalName>springtest</finalName>
		<plugins>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.0.0.M3</version>
				<configuration>
					<scanIntervalSeconds>3</scanIntervalSeconds>
					<connectors>
						<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
							<port>80</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>
					<webAppConfig>
						<contextPath>/</contextPath>
					</webAppConfig>
				</configuration>
			</plugin>
		     <!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
				  <webResources>
				    <resource>
				       <directory>src/main/webapp</directory>
				       <filtering>false</filtering>
				    </resource>
				  </webResources>
				  <source>7</source>  
			          <target>7</target> 
				  <encoding>UTF-8</encoding>
				</configuration>
	      	</plugin> -->
	    <!--   	<plugin>  
			      <groupId>org.apache.maven.plugins</groupId>  
			      <artifactId>maven-compiler-plugin</artifactId>  
				  <version>2.1</version>
			      <configuration>  
			        <source>7</source>  
			        <target>7</target>  
			        <encoding>UTF-8</encoding>  
			      </configuration>  
		    </plugin> -->
		   <!-- 资源管理插件 -->
		   <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>resources-plugin</artifactId>
				<version>2.2.3</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
		   </plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，不处理如下配置中包含的资源类型（剔除下如下配置中包含的资源类型）     -->
				<excludes>
					<exclude>config/**</exclude>
				</excludes>
				 <!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，只处理如下配置中包含的资源类型     
                <includes>    
                    <include>*.xml</include>    
                </includes>    
                 --> 
                     <!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，是否对主资源目录开启资源过滤(也就是说对里面的内容进行替换处理) -->       
				<filtering>true</filtering>
			</resource>
		</resources>
		
		<filters>
			<filter>src/main/resources/config/config.${env}.properties</filter>
			<filter>src/main/resources/config/memcached.${env}.properties</filter>
			<filter>src/main/resources/config/mongodb.${env}.properties</filter>
		</filters> 
    </build>
    <!-- 配置三套环境，测试环境 开发环境和线上环境 -->
    <profiles>
    	<!-- 开发环境 -->
    	<profile>
    		<id>dev</id>
    		<!-- 默认是本地环境 -->
    		<activation>
    			<activeByDefault>true</activeByDefault>
    		</activation>
    		<properties>
    			<env>dev</env>
    		</properties>
    	</profile>
    	<!-- 生产环境 -->
    	<profile>
    		<id>online</id>
    		<properties>
    			<env>online</env>
    		</properties>
    	</profile>
    	<!-- 测试环境 -->
    	<profile>
    		<id>test</id>
    		<properties>
    			<env>test</env>
    		</properties>
    	</profile>
    </profiles>
</project>