<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.abel.demo</groupId>
  <artifactId>spark-standalone</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <dependencies>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_2.10</artifactId>
      <version>1.6.2</version>
    </dependency>

    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming_2.10</artifactId>
      <version>1.6.2</version>
    </dependency>

    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming-kafka_2.10</artifactId>
      <version>1.6.2</version>
    </dependency>

  </dependencies>


  <build>
    <!--<resources>-->
    <!--<resource>-->
    <!--&lt;!&ndash; 根据参数指定资源目录 &ndash;&gt;-->
    <!--<directory>src/main/resources/${profiles.active}</directory>-->
    <!--&lt;!&ndash; 指定编译后的目录即生成文件位置（默认为WEB-INF/class） &ndash;&gt;-->
    <!--<targetPath>conf</targetPath>-->
    <!--</resource>-->
    <!--<resource>-->
    <!--<directory>src/main/resources</directory>-->
    <!--<excludes>-->
    <!--<exclude>dev/*</exclude>-->
    <!--<exclude>rhino/*</exclude>-->
    <!--</excludes>-->
    <!--<filtering>true</filtering>-->
    <!--</resource>-->
    <!--</resources>-->

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.4.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>reference.conf</resource>
                </transformer>
                <!--<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">-->
                <!--<resource>META-INF/spring.handlers</resource>-->
                <!--</transformer>-->
                <!--<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">-->
                <!--<resource>META-INF/spring.schemas</resource>-->
                <!--</transformer>-->
              </transformers>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <shadedClassifierName>jar-with-dependencies</shadedClassifierName>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.0</version>
      </plugin>
      <!-- 编译插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.1</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
          <encoding>utf-8</encoding>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.8</version>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <!--<plugin>-->
      <!---->
      <!--<groupId>org.apache.maven.plugins</groupId>-->
      <!--<artifactId>maven-release-plugin</artifactId>-->
      <!--<version>2.5.3</version>-->
      <!--<configuration>&lt;!&ndash; 这个很重要！！！！！！只有设置自动提交的属性才能发布成功 &ndash;&gt;-->
      <!--<pushChanges>true</pushChanges>       -->
      <!--</configuration>-->
      <!--</plugin>-->

      <!-- copy dependency -->
      <!--<plugin>-->
      <!--<groupId>org.apache.maven.plugins</groupId>-->
      <!--<artifactId>maven-dependency-plugin</artifactId>-->
      <!--<executions>-->
      <!--<execution>-->
      <!--<id>copy-dependencies</id>-->
      <!--<phase>package</phase>-->
      <!--<goals>-->
      <!--<goal>copy-dependencies</goal>-->
      <!--</goals>-->
      <!--<configuration>-->
      <!--<outputDirectory>${project.build.directory}/lib</outputDirectory>-->
      <!--<overWriteReleases>false</overWriteReleases>-->
      <!--<overWriteSnapshots>false</overWriteSnapshots>-->
      <!--<overWriteIfNewer>true</overWriteIfNewer>-->
      <!--</configuration>-->
      <!--</execution>-->
      <!--</executions>-->
      <!--</plugin>-->

      <!-- copy resources -->
      <!--<plugin>-->
      <!--<groupId>org.apache.maven.plugins</groupId>-->
      <!--<artifactId>maven-resources-plugin</artifactId>-->
      <!--<version>2.3</version>-->
      <!--<configuration>-->
      <!--<nonFilteredFileExtensions>-->
      <!--<nonFilteredFileExtension>dat</nonFilteredFileExtension>-->
      <!--</nonFilteredFileExtensions>-->
      <!--</configuration>-->
      <!--<executions>-->
      <!--<execution>-->
      <!--<id>copy-excel</id>-->
      <!--<phase>package</phase>-->
      <!--<goals>-->
      <!--<goal>copy-resources</goal>-->
      <!--</goals>-->
      <!--<configuration>-->
      <!--<encoding>UTF-8</encoding>-->
      <!--<outputDirectory>${project.build.directory}/excel</outputDirectory>-->
      <!--<resources>-->
      <!--<resource>-->
      <!--<directory>src/main/resources/excel</directory>-->
      <!--<includes>-->
      <!--<include>*/*</include>-->
      <!--</includes>-->
      <!--&lt;!&ndash;<filtering>true</filtering>&ndash;&gt;-->
      <!--&lt;!&ndash;it's necessary to use Profiles &ndash;&gt;-->
      <!--</resource>-->
      <!--</resources>-->
      <!--</configuration>-->
      <!--</execution>-->
      <!--<execution>-->
      <!--<id>copy-resources</id>-->
      <!--<phase>package</phase>-->
      <!--<goals>-->
      <!--<goal>copy-resources</goal>-->
      <!--</goals>-->
      <!--<configuration>-->
      <!--<encoding>UTF-8</encoding>-->
      <!--<outputDirectory>${project.build.directory}/conf</outputDirectory>-->
      <!--<resources>-->
      <!--<resource>-->
      <!--<directory>src/main/resources/</directory>-->
      <!--<includes>-->
      <!--<include>*.xml</include>-->
      <!--<include>*.conf</include>-->
      <!--<include>*.txt</include>-->
      <!--<include>*.properties</include>-->
      <!--</includes>-->
      <!--&lt;!&ndash;<filtering>true</filtering>&ndash;&gt;-->
      <!--&lt;!&ndash;it's necessary to use Profiles &ndash;&gt;-->
      <!--</resource>-->
      <!--</resources>-->
      <!--</configuration>-->
      <!--</execution>-->
      <!--<execution>-->
      <!--<id>copy-shell</id>-->
      <!--<phase>package</phase>-->
      <!--<goals>-->
      <!--<goal>copy-resources</goal>-->
      <!--</goals>-->
      <!--<configuration>-->
      <!--<encoding>UTF-8</encoding>-->
      <!--<outputDirectory>${project.build.directory}/</outputDirectory>-->
      <!--&lt;!&ndash;  把配置文件拷到和jar包同一个路径下 &ndash;&gt;-->
      <!--<resources>-->
      <!--<resource>-->
      <!--<directory>src/main/bin/</directory>-->
      <!--<filtering>true</filtering>-->
      <!--</resource>-->
      <!--</resources>-->
      <!--</configuration>-->
      <!--</execution>-->
      <!--</executions>-->
      <!--</plugin>-->
    </plugins>
  </build>

</project>