<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.test</groupId>
  <artifactId>batch</artifactId>
  <version>0.0.1</version>

  <!-- Defines build definition for creating the jar -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.2.2.RELEASE</version>
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <mock-server.port>9999</mock-server.port>

    <cassandra.rpcPort>9160</cassandra.rpcPort>
    <cassandra.jmxPort>7199</cassandra.jmxPort>
    <cassandra.storagePort>7000</cassandra.storagePort>
    <cassandra.stopPort>8081</cassandra.stopPort>
  </properties>


  <dependencies>
    <!-- Commons -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.3.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>4.0</version>
    </dependency>
    

    <!-- Logging -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
    </dependency>

    <!-- Reference the Spring boot classes -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-batch</artifactId>
    </dependency>

    <!-- used to store the details of a spring batch job execution -->
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
    </dependency>

    <!-- For making restful calls to external services. -->
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-client</artifactId>
      <version>3.0.0-milestone1</version>
    </dependency>
    
    <!-- XML processing for cxf -->
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-core</artifactId>
      <version>2.2.11</version>
    </dependency>
    

    <!-- Access to the Cassandra datastore -->
    <dependency>
      <groupId>com.datastax.cassandra</groupId>
      <artifactId>cassandra-driver-core</artifactId>
      <version>2.1.4</version>
    </dependency>

    <!-- Contains interfaces for interacting with the mock web server. -->
    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-client</artifactId>
      <version>3.2</version>
      <scope>test</scope>
    </dependency>

    <!-- Junit -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  
    <!-- Spring test -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    
    <!-- 
    Needed to get spring boot to cooporeate with mock-sever
    https://github.com/spring-projects/spring-boot/issues/1801
     -->
    <!-- <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-config</artifactId>
        <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <scope>test</scope>
    </dependency> -->
    
    <!-- Hamcrest Matchers for complex assertions. -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
    
  </dependencies>

  <build>
    <plugins>

      <!-- Specify the Java version for compile and run. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <!-- plugin to create the executable jar -->
      <!-- <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>boot-application</id>
            <phase>integration-test</phase>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin> -->

      <!-- Manages the integration test dependencies through the maven lifecycle. -->
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <systemPropertyVariables>
            <org.mock-server.host>localhost</org.mock-server.host>
            <org.mock-server.port>${mock-server.port}</org.mock-server.port>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Starts and stops a cassandra nosql database. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cassandra-maven-plugin</artifactId>
        <version>2.0.0-1</version>
        <configuration>
          <startNativeTransport>true</startNativeTransport>
        </configuration>
        <executions>
          <execution>
            <id>cassandra-start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>cassandra-stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.10</version>
          </dependency>
        </dependencies>
      </plugin>
      
      <!-- Execute Command Line to interact with cqlsh for db init -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>init-cassandra</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <executable>"C:\Program Files\DataStax Community\apache-cassandra\bin\cqlsh.bat"</executable>
          <!-- optional -->
          <workingDirectory>${basedir}</workingDirectory>
          <arguments>
            <argument>--file="${basedir}/src/main/cassandra/001-init.cql"</argument>
          </arguments>
        </configuration>
      </plugin>

      <!-- Creates a mockable webserver. -->
      <plugin>
        <groupId>org.mock-server</groupId>
        <artifactId>mockserver-maven-plugin</artifactId>
        <version>3.9.1</version>
        <configuration>
          <serverPort>${mock-server.port}</serverPort>
          <pipeLogToConsole>true</pipeLogToConsole>
          <logLevel>DEBUG</logLevel>
          <initializationClass>com.test.batch.MockServerInit</initializationClass>
        </configuration>
        <executions>
          <execution>
            <id>mock-server-start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>runForked</goal>
            </goals>
          </execution>
          <execution>
            <id>mock-server-stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stopForked</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>

  </build>

</project>