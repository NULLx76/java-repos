<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>cz.unicorncollege.recommendation</groupId>
	<name>Recommendation bachelor project</name>
	<artifactId>recommendation</artifactId>
	<inceptionYear>2014</inceptionYear>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	
	<modules>
		<module>recommendation-bl</module>
		<module>recommendation-web</module>
		<module>recommendation-ear</module>
	</modules>
	
	<properties>
		<!-- Shared version number properties -->
		<org.springframework.version>4.1.2.RELEASE</org.springframework.version>
		<org.spring.social.version>1.1.0.RELEASE</org.spring.social.version>
		<javaee.api.version>7.0</javaee.api.version>
		<jaxb.version>2.1</jaxb.version>

		<!-- Logging -->
		<logback.version>1.0.13</logback.version>
		<slf4j.version>1.7.2</slf4j.version>
		<janino.version>2.5.10</janino.version>
		<commons.logging>1.1.1</commons.logging>
	</properties>

	<repositories>
		<repository>
			<id>central</id>
			<name>Maven Repository Switchboard</name>
			<layout>default</layout>
			<url>http://repo1.maven.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<url>http://repo.springsource.org/libs-milestone/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<name>Maven Plugin Repository</name>
			<url>http://repo1.maven.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<directory>${project.basedir}/target</directory>
		<outputDirectory>${project.build.directory}/classes</outputDirectory>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<testOutputDirectory>${project.build.directory}/test-classes</testOutputDirectory>
		<sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
		<!-- TODO: MNG-3731 maven-plugin-tools-api < 2.4.4 expect this to be relative... -->
		<scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
		<resources>
		  <resource>
			<directory>${project.basedir}/src/main/resources</directory>
		  </resource>
		</resources>
		<testResources>
		  <testResource>
			<directory>${project.basedir}/src/test/resources</directory>
		  </testResource>
		</testResources>

		<pluginManagement>
		   <plugins>
			 <plugin>
			   <artifactId>maven-assembly-plugin</artifactId>
			   <version>2.4.1</version>
			 </plugin>         
			 <plugin>
			   <artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
			 </plugin>
			 <plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
			 </plugin>
			 <plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
			 </plugin>
			 <plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
			 </plugin>
			 <plugin>
			   <artifactId>maven-ear-plugin</artifactId>
			   <version>2.9.1</version>
			 </plugin>
			 <plugin>
			   <artifactId>maven-install-plugin</artifactId>
			   <version>2.5.2</version>
			 </plugin>
			 <plugin>
			   <artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<artifactId>maven-plugin-plugin</artifactId>
				<version>3.3</version>
			 </plugin>
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.3</version>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
			 </plugin>
		   </plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
		  <id>release-profile</id>

		  <activation>
			<property>
			  <name>performRelease</name>
			  <value>true</value>
			</property>
		  </activation>

		  <build>
			<plugins>
			  <plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
				  <execution>
					<id>attach-sources</id>
					<goals>
					  <goal>jar</goal>
					</goals>
				  </execution>
				</executions>
			  </plugin>
			  <plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
				  <execution>
					<id>attach-javadocs</id>
					<goals>
					  <goal>jar</goal>
					</goals>
				  </execution>
				</executions>
			  </plugin>
			  <plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
				  <updateReleaseInfo>true</updateReleaseInfo>
				</configuration>
			  </plugin>
			</plugins>
		  </build>
		</profile>
	</profiles>
	
	<dependencyManagement>
		<dependencies>
			<!-- Project modules -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>recommendation-bl</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>recommendation-war</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>recommendation-ear</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- JavaEE API -->
			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>7.0</version>
			</dependency>

			<!--
				Core utilities used by other modules.
			-->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${org.springframework.version}</version>
				<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
			</dependency>

			<!-- Spring boot auto configuration. -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-autoconfigure</artifactId>
				<version>1.1.8.RELEASE</version>
			</dependency>

			<!--
				Expression Language (depends on spring-core).
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-expression</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>

			<!-- 
				Bean Factory and JavaBeans utilities (depends on spring-core).
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-beans</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>

			<!--
				Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans).
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-aop</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>

			<!--
				Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans).
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-context</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>

			<!--
				Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
				Define this if you need any of these integrations
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-context-support</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>

			<!--
				Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context)
				Define this if you use Spring Transactions or DAO Exception Hierarchy
				(org.springframework.transaction.*/org.springframework.dao.*)
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-tx</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>

			<!--
				JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx)
				Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*)
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-jdbc</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>

			<!--
				Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.
				(depends on spring-core, spring-beans, spring-context, spring-tx)
				Define this if you need ORM (org.springframework.orm.*)
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-orm</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>

			<!--
				Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans.
				(depends on spring-core, spring-beans, spring-context)
				Define this if you need OXM (org.springframework.oxm.*)
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-oxm</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>

			<!--
				Web application development utilities applicable to both Servlet and Portlet Environments
				(depends on spring-core, spring-beans, spring-context)
				Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-web</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>

			<!--
				Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
				Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-webmvc</artifactId>
			  <version>${org.springframework.version}</version>
			</dependency>

			<!--
				Support for testing Spring applications with tools such as JUnit and TestNG
				This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs
			-->
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-test</artifactId>
			  <version>${org.springframework.version}</version>
			  <scope>test</scope>
			</dependency>

			<!-- Logging -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>janino</groupId>
				<artifactId>janino</artifactId>
				<version>${janino.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<scope>test</scope>
				<version>${commons.logging}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

</project>