<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.karlhammar.ontometrics</groupId>
  <artifactId>slic</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>SPARQL command line interface</name>
  <description>Runs SPARQL queries against files, like jena-arq, but works.</description>
  <dependencies>
      <dependency>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.7.0.201403182114</version>
      </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.jena</groupId>
      <artifactId>apache-jena-libs</artifactId>
      <type>pom</type>
      <version>2.11.0</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <build>
    <plugins>
      <!-- Create a Jar with a Manifest -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <archive>
            <index>true</index>
	    <manifest>
              <mainClass>org.ontologyengineering.slic.Slic</mainClass>
	    </manifest>
            <manifestEntries>
              <mode>development</mode>
              <url>https://github.com/AidanDelaney/Slic</url>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <!-- shade the jar -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-shade-plugin</artifactId>
	<version>2.0</version>
	<executions>
	  <execution>
	    <phase>package</phase>
	    <goals>
	      <goal>shade</goal>
	    </goals>
	  </execution>
	</executions>
	<configuration>
	  <finalName>uber-${project.artifactId}-${project.version}</finalName>
	</configuration>
      </plugin>
      <!-- Allow mvn exec:java to execute the project -->
      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>exec-maven-plugin</artifactId>
	<version>1.2.1</version>
	<executions>
	  <execution>
            <goals>
              <goal>java</goal>
            </goals>
	  </execution>
	</executions>
	<configuration>
          <executable>java</executable>
          <mainClass>org.ontologyengineering.slic.Slic</mainClass>
	</configuration>
      </plugin>
      <!-- Run all tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.16</version>
	<dependencies>
	  <!-- Force use of JUnit rather than TestNG -->
	  <dependency>
	    <groupId>org.apache.maven.surefire</groupId>
	    <artifactId>surefire-junit47</artifactId>
	    <version>2.8</version>
	  </dependency>
	</dependencies>
        <configuration>
          <includes>
            <include>%regex[.*SlicTest.*]</include>
          </includes>
        </configuration>
      </plugin>

        <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.7.0.201403182114</version>
            <executions>
                <execution>
                    <id>jacoco-initialize</id>
                    <phase>initialize</phase>
                    <goals>
                        <goal>prepare-agent</goal>
                    </goals>
                </execution>
                <execution>
                    <id>jacoco-site</id>
                    <phase>package</phase>
                    <goals>
                        <goal>report</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>

    </plugins>
  </build>

</project>
