<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.tkc.autoprep</groupId>
    <artifactId>helloWorld</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>helloWorld</name>
    <description>Production Portal</description>

    <url>http://wildfly.org</url>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>
       
    <distributionManagement>
    
        <snapshotRepository>
            <id>appserver</id>
            <name>appserver-snapshots</name>
            <url>http://10.199.1.143:8081/artifactory/ext-snapshot-local</url>
        </snapshotRepository>
        
        <repository>
            <id>appserver</id>
            <name>appserver-releases</name>
            <url>http://10.199.1.143:8081/artifactory/ext-release-local</url>
        </repository>
        
    </distributionManagement>
    

    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following 
            message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
            resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JBoss dependency versions -->

        <version.wildfly.maven.plugin>1.0.1.Final</version.wildfly.maven.plugin>

        <version.jboss.spec.javaee.7.0>1.0.0.Final</version.jboss.spec.javaee.7.0>

        <version.jboss.bom>8.2.0.Final</version.jboss.bom>
        <!-- other plugin versions -->
        <version.compiler.plugin>3.1</version.compiler.plugin>
        <version.war.plugin>2.1.1</version.war.plugin>
        <version.org.jasypt>1.9.2</version.org.jasypt>

        <!-- maven-compiler-plugin -->
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <version.org.jasypt>1.9.2</version.org.jasypt>
        <stjs.version>3.3.0</stjs.version>
        
        <release.artifacts.version>1.4.0-SNAPSHOT</release.artifacts.version>
    </properties>
    
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.wildfly.bom</groupId>
                <artifactId>jboss-javaee-7.0-with-all</artifactId>
                <version>${version.jboss.bom}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
    
       <dependency>
            <groupId>org.st-js.bridge</groupId>
            <artifactId>html</artifactId>
            <version>5.0.bv3</version>
        </dependency>
        
        <dependency>
          <groupId>org.st-js</groupId>
          <artifactId>server</artifactId>
          <version>${stjs.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.st-js.bridge</groupId>
            <artifactId>jquery</artifactId>
            <version>1.11.3.bv1</version>
        </dependency>   
        
        <dependency>
            <groupId>org.st-js.bridge</groupId>
            <artifactId>jqueryui</artifactId>
            <version>1.10.3.bv2</version>
        </dependency>
        
        <dependency>
            <groupId>org.st-js</groupId>
            <artifactId>shared</artifactId>
            <version>${stjs.version}</version>
        </dependency>
         
        
        <dependency>
            <groupId>org.st-js</groupId>
            <artifactId>client-runtime</artifactId>
            <version>${stjs.version}</version>
        </dependency>
         
 
        <!-- Import the CDI API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <!-- Import the Servlet API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        
                <!-- Import the EJB API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        
              
        <dependency>
            <groupId>org.jfree</groupId>
            <artifactId>jfreechart</artifactId>
            <version>1.0.17</version>
        </dependency> 
        
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>jaxrs-api</artifactId>
            <scope>provided</scope>        
       </dependency>
        <!-- JSON-P API -->
        <dependency>
            <groupId>org.jboss.spec.javax.json</groupId>
            <artifactId>jboss-json-api_1.0_spec</artifactId>
            <scope>provided</scope>        
        </dependency>
        <!-- RESTEasy implementation of JAX-RS API -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <scope>provided</scope>        
        </dependency>
        <!-- RESTEasy implementation of JAX-RS Client API -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <scope>provided</scope>        
        </dependency>
        <!-- RESTEasy plugin to use JSON-P as a provider -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-json-p-provider</artifactId>
            <scope>provided</scope>        
        </dependency>
        
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson-provider</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.13</version>
        </dependency>
        
                
                        <!-- RESTEasy plugin to use JSON-P as a provider -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-multipart-provider</artifactId>
            <scope>provided</scope>        
        </dependency>

         <dependency>
            <groupId>org.picketbox</groupId>
            <artifactId>picketbox</artifactId>
            <version>4.0.21.Final</version>
            <scope>provided</scope>
        </dependency> 
        
       <dependency>
            <groupId>javax.websocket</groupId>
            <artifactId>javax.websocket-api</artifactId>
            <version>1.0</version>
        </dependency> 
                <!-- Import the JPA API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <scope>provided</scope>
        </dependency>

        
        <!-- JSR-303 (Bean Validation) Implementation -->
        <!-- Provides portable constraints such as @Email -->
        <!-- Hibernate Validator is shipped in JBoss WildFly -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3</version>
        </dependency>  
                
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <scope>provided</scope>
            <version>4.2.1</version>
        </dependency>
           
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>provided</scope>
            <version>4.2.1</version>
        </dependency>
                
                   
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <scope>provided</scope>
            <version>4.2.1</version>
        </dependency>
                
         
                
        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>1.1.1</version>
        </dependency> 
             
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>0.9.9</version>
        </dependency>
        
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.10-FINAL</version>
        </dependency>   
            
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <artifactId>xml-apis</artifactId>
                    <groupId>xml-apis</groupId>
                </exclusion>
            </exclusions>
            <optional>false</optional>
        </dependency>
        
       <dependency>
            <groupId>org.jasypt</groupId>
            <artifactId>jasypt</artifactId>
            <version>${version.org.jasypt}</version>
       </dependency>
       
        <dependency>
            <groupId>org.jasypt</groupId>
            <artifactId>jasypt-hibernate4</artifactId>
            <version>${version.org.jasypt}</version>
       </dependency>
       
       <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk16</artifactId>
            <version>1.46</version>
       </dependency>
       
    </dependencies>

    <build>
        <!-- Set the name of the war, used as the context root when the app 
            is deployed -->
        <finalName>${project.artifactId}</finalName>
        <plugins>
            
            <plugin>
                <groupId>org.st-js</groupId>
                <artifactId>stjs-maven-plugin</artifactId>
                <version>${stjs.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                            <goal>copy-js</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <generateSourceMap>true</generateSourceMap>
                    <includes>
                       <include>com/nov/isrv/js/**</include>
                    </includes>                
                </configuration>
            </plugin>
            
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.war.plugin}</version>
                <configuration>
                    <!-- Java EE 7 doesn't require web.xml, Maven needs to catch up! -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <!-- WildFly plugin to deploy war -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${version.wildfly.maven.plugin}</version>
            </plugin>
            <!-- Compiler plugin enforces Java 1.6 compatibility and activates 
                annotation processors -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.compiler.plugin}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
        </plugins>
        
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.st-js</groupId>
                                        <artifactId>stjs-maven-plugin</artifactId>
                                        <versionRange>[3.3.0,)</versionRange>
                                        <goals>
                                            <goal>generate</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        
    </build>

</project>
