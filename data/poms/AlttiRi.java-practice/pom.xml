<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ru.alttiri</groupId>
    <artifactId>homework</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging> <!-- http://java-online.ru/maven-inheritance.xhtml -->
     <!-- Для наследования зависимостей использовать тэг <parent> в дочерних pom'ах. См. модуль Examples. -->
     <!-- Пока что я не использую эту возможность, чтобы в одном месте сконцентрировать зависимости для удобства
     просмотра их в будущем. Проект-то учебный. -->

    <name>HomeWork</name>
    <url>https://github.com/AlttiRi/HomeWork</url>

    <modules> <!-- Для одновременного install/clean/.. всех модулей -->
        <module>Stepik</module>
        <module>CSC</module>
        <module>Examples</module>
        <module>SubModules/ServletExample</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <junit.version>4.13.1</junit.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>



    <dependencies>


        <!-- JUnit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!--  Обеспечивает "Fluent interface" при написании тестов -->
        <dependency> <!--  AssertJ - улучшенная версия FestAssert -->
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.6.2</version>
            <scope>test</scope>
        </dependency>

        <!-- Для создания объектов заглушек при тестировании -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.7.22</version>
            <scope>test</scope>
        </dependency>


        <!-- Для тестирования производительности -->
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-core</artifactId>
            <version>1.18</version>
            <!-- <scope>test</scope>-->
        </dependency>
        <!-- Примеры использования См. в External Libraries
             При запуске выбрать в меню (Use classpath or module) модуль (Название этого проекта)-->
         <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-samples</artifactId>
            <version>1.18</version>
        </dependency>
        <!-- - - - - - - - - - - - - - - - - - - -->


        <!-- Для просмотра того, как лежат обеъкты в памяти-->
        <dependency>
            <groupId>org.openjdk.jol</groupId>
            <artifactId>jol-core</artifactId>
            <version>0.8</version>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jol</groupId>
            <artifactId>jol-samples</artifactId>
            <version>0.8</version>
        </dependency>
        <!-- - - - - - - - - - - - - - - - - - - - - - - - -->


        <!--  Для работы с .class файлами (байткодом) -->
        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm</artifactId>
            <version>5.0.3</version>
        </dependency>


        <!-- NIO client server framework -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.1.42.Final</version>
        </dependency>


        <!--  -->
        <!-- for ru.alttiri.examples.youtube.parser_html_11 -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.10.2</version>
        </dependency>


        <!--  -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>21.0</version>
        </dependency>

        <!-- Commons Lang, a package of Java utility classes for the classes that are in java.lang's
             hierarchy, or are considered to be so standard as to justify existence in java.lang. -->
        <!--<dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>-->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.7</version>
        </dependency>


        <!-- A collection of various utility classes to ease working with strings, files, command lines, XML and more. -->
        <!-- <dependency>
             <groupId>org.codehaus.plexus</groupId>
             <artifactId>plexus-utils</artifactId>
             <version>3.0.24</version>
         </dependency>-->

    </dependencies>


    <build>
        <defaultGoal>install</defaultGoal>

        <plugins>

            <!-- Для проверки покрытия кода тестами -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.9</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- https://maven.apache.org/plugins/maven-resources-plugin/project-summary.html -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- Allows the example to be run via 'mvn compile exec:java' -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.5.0</version>
                <configuration>
                    <mainClass>ru.alttiri.Main</mainClass>
                    <includePluginDependencies>false</includePluginDependencies>
                </configuration>
                <executions>
                    <!--<execution>
                        <id>run-benchmarks</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <classpathScope>test</classpathScope>
                            <executable>java</executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>org.openjdk.jmh.Main</argument>
                                <argument>.*</argument>
                            </arguments>
                        </configuration>
                    </execution>-->
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>ru.alttiri.Main</mainClass>
                            <addClasspath>true</addClasspath>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>


            <!-- Плагин для автоматического анализа кода на предмет наличия "нехорошего кода". -->
            <!-- https://maven.apache.org/plugins/maven-pmd-plugin/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.7</version>
                <configuration>
                    <targetJdk>${maven.compiler.target}</targetJdk>
                    <verbose>true</verbose>
                    <linkXRef>false</linkXRef>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <!-- <goal>check</goal>  -->
                            <goal>cpd</goal>
                            <goal>pmd</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

           <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <inputEncoding>UTF-8</inputEncoding>
                    <outputEncoding>UTF-8</outputEncoding>
                    <generateReports>false</generateReports>
                </configuration>
            </plugin>

        </plugins>
    </build>


    <!-- Interesting plugins:      -->

    <!-- Apache Maven Shade Plugin -->
    <!-- https://maven.apache.org/plugins/maven-shade-plugin/index.html -->
    <!-- This plugin provides the capability to package the artifact in an uber-jar, including its dependencies
         and to shade - i.e. rename - the packages of some of the dependencies. -->

    <!--    -->
    <!--    -->

</project>

