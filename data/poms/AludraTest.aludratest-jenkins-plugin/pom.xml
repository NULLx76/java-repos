<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.aludratest.jenkins</groupId>
	<artifactId>aludratest</artifactId>
	<version>2.0-SNAPSHOT</version>
	<packaging>hpi</packaging>

	<parent>
		<groupId>org.jenkins-ci.plugins</groupId>
		<artifactId>plugin</artifactId>
		<version>2.25</version>
		<relativePath />
	</parent>
	
	<properties>
		<jenkins.version>2.52</jenkins.version>
	</properties>

	<name>AludraTest Jenkins Plugin</name>
	<description>AludraTest Plugin for Jenkins, enabling extended AludraTest reporting.</description>
	<url>https://wiki.jenkins-ci.org/display/JENKINS/aludratest+Plugin</url>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>
	<!-- If you want this to appear on the wiki page: -->
	<developers>
		<developer>
			<id>falbrech</id>
			<name>Florian Albrecht</name>
			<email>florian.albrecht@aludratest.org</email>
		</developer>
	</developers>

	<!-- Assuming you want to host on @jenkinsci: -->
	<scm>
		<connection>scm:git:git://github.com/jenkinsci/${project.artifactId}-plugin.git</connection>
		<developerConnection>scm:git:git@github.com:jenkinsci/${project.artifactId}-plugin.git</developerConnection>
		<url>http://github.com/jenkinsci/${project.artifactId}-plugin</url>
	</scm>

	<repositories>
		<repository>
			<id>repo.jenkins-ci.org</id>
			<url>http://repo.jenkins-ci.org/public/</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>repo.jenkins-ci.org</id>
			<url>http://repo.jenkins-ci.org/public/</url>
		</pluginRepository>
	</pluginRepositories>
	
	<dependencies>
		<!-- explicitly need this version, as previous versions cannot handle used jQuery code, and later versions
		are not compatible with Jenkins Plugin Parent POM. -->
		<dependency>
			<groupId>net.sourceforge.htmlunit</groupId>
			<artifactId>htmlunit</artifactId>
			<version>2.20</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<header>src/license/license-template.txt</header>
					<properties>
						<owner>Hamburg Sud and the contributors</owner>
						<year>2016</year>
					</properties>
					<includes>
						<include>src/main/java/**/*.java</include>
						<include>src/main/webapp/js/*.js</include>
						<include>src/main/webapp/css/*.css</include>
					</includes>
					<excludes>
						<exclude>src/main/webapp/css/*.min.css</exclude>
						<exclude>src/main/webapp/js/*.min.js</exclude>
						<exclude>src/main/webapp/js/every.polyfill.js</exclude>
					</excludes>
					<mapping>
						<java>SLASHSTAR_STYLE</java>
					</mapping>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>process-sources</phase>
					</execution>
				</executions>
			</plugin>
			
			<!-- download external resources like jQuery, jQuery UI, datatable etc. via webjars -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>download-webresources</id>
						<phase>generate-resources</phase>
						<goals><goal>unpack</goal></goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.webjars</groupId>
									<artifactId>d3js</artifactId>
									<version>3.5.16</version>
									<includes>**/d3*.min.js</includes>
								</artifactItem>
								<artifactItem>
									<groupId>org.webjars</groupId>
									<artifactId>jquery</artifactId>
									<version>1.12.3</version>
									<includes>**/jquery*.min.js</includes>
								</artifactItem>
								<artifactItem>
									<groupId>org.webjars</groupId>
									<artifactId>jquery-ui</artifactId>
									<version>1.11.4</version>
									<includes>**/jquery-ui.min.*</includes>
								</artifactItem>
								<artifactItem>
									<groupId>org.webjars</groupId>
									<artifactId>jquery-ui-themes</artifactId>
									<version>1.11.4</version>
									<includes>**/smoothness/theme.css,**/smoothness/images/*.*</includes>
								</artifactItem>
								<artifactItem>
									<groupId>org.webjars</groupId>
									<artifactId>font-awesome</artifactId>
									<version>4.5.0</version>
									<includes>**/*.min.css,**/fonts/*.*</includes>
								</artifactItem>
								<artifactItem>
									<groupId>org.webjars</groupId>
									<artifactId>datatables</artifactId>
									<version>1.10.11</version>
									<includes>**/jquery.dataTables.min.js,**/jquery.dataTables.min.css,**/images/*.*</includes>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/webjars</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- copy downloaded resources to target/external-resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-downloaded-resources</id>
						<phase>generate-resources</phase>
						<goals><goal>copy-resources</goal></goals>
						<configuration>
							<outputDirectory>${project.build.directory}/external-resources</outputDirectory>
							<resources>
								<resource>
									<targetPath>js</targetPath>
									<directory>${project.build.directory}/webjars/META-INF/resources/webjars/d3js/3.5.16</directory>
								</resource>
								<resource>
									<targetPath>js</targetPath>
									<directory>${project.build.directory}/webjars/META-INF/resources/webjars/jquery/1.12.3</directory>
								</resource>
								<resource>
									<targetPath>js</targetPath>
									<directory>${project.build.directory}/webjars/META-INF/resources/webjars/jquery-ui/1.11.4</directory>
									<includes>
										<include>*.js</include>
									</includes>
								</resource>
								<resource>
									<targetPath>css</targetPath>
									<directory>${project.build.directory}/webjars/META-INF/resources/webjars/jquery-ui/1.11.4</directory>
									<includes>
										<include>*.css</include>
										<include>**/images/*.*</include>
									</includes>
								</resource>
								<resource>
									<targetPath>css</targetPath>
									<directory>${project.build.directory}/webjars/META-INF/resources/webjars/jquery-ui-themes/1.11.4</directory>
								</resource>
								<resource>
									<directory>${project.build.directory}/webjars/META-INF/resources/webjars/font-awesome/4.5.0</directory>
								</resource>
								<resource>
									<directory>${project.build.directory}/webjars/META-INF/resources/webjars/datatables/1.10.11</directory>
									<excludes>
										<exclude>**/*.psd</exclude>
										<exclude>**/*.ico</exclude>
									</excludes>
								</resource>
								<!-- also copy existing resources to use them in the HPL for testing -->
								<resource>
									<directory>src/main/webapp</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- include downloaded resources in HPI -->
			<plugin>
				<groupId>org.jenkins-ci.tools</groupId>
				<artifactId>maven-hpi-plugin</artifactId>
				<configuration>
					<webResources>
						<webResource>
							<directory>${project.build.directory}/external-resources</directory>
							<filtering>false</filtering>
						</webResource>
					</webResources>
					<!-- for testing -->
					<warSourceDirectory>${project.build.directory}/external-resources</warSourceDirectory>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-javadoc-plugin</artifactId>
										<versionRange>[2.10.1,)</versionRange>
										<goals>
											<goal>javadoc</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.3.1,)</versionRange>
										<goals>
											<goal>display-info</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.gmaven</groupId>
										<artifactId>gmaven-plugin</artifactId>
										<versionRange>[1.5-jenkins-3,)</versionRange>
										<goals>
											<goal>generateTestStubs</goal>
											<goal>testCompile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>jacoco-maven-plugin</artifactId>
										<versionRange>[0.7.2.201409121644,)</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.mycila</groupId>
										<artifactId>license-maven-plugin</artifactId>
										<versionRange>[2.6,)</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.10,)</versionRange>
										<goals>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
