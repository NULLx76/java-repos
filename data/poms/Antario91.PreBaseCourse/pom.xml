<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>StartingBaseCourse</groupId>
    <artifactId>PreBaseCourse</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>PreBaseCourse Maven Webapp</name>
    <url>http://maven.apache.org</url>
    <dependencies>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>

        <!-- SPRING WS DEPENDENCIES  -->
        <!-- https://mvnrepository.com/artifact/org.springframework.ws/spring-ws-core -->
        <dependency>
            <groupId>org.springframework.ws</groupId>
            <artifactId>spring-ws-core</artifactId>
            <version>2.1.4.RELEASE</version> <!-- Надо использовать именно версию 2.1.4 RELEASE -->
        </dependency>


        <!-- Следующая зависимость нужна для того, чтобы определить в одной WSDL две и более схем XSD. -->
        <!-- https://mvnrepository.com/artifact/org.apache.ws.xmlschema/xmlschema-core -->
        <dependency>
            <groupId>org.apache.ws.xmlschema</groupId>
            <artifactId>xmlschema-core</artifactId>
            <version>2.2.1</version>
        </dependency>

        <!-- ORM DEPENDENCIES -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>3.3.2.GA</version>
        </dependency>

        <!-- Следующая штука - манипулятор байт-кода. Она нужна Hibernate, Spring Framework for AOP support, EJB и т.д.
         Но в данном случае эта зависимость нужна для Hibernate -->
        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.21.0-GA</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework/spring-orm -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>3.2.4.RELEASE</version>
        </dependency>

        <!-- Эта штука нужна для работы декларативных транзакций при настройке их через xml -->
        <!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.8.9</version>
        </dependency>

        <!-- DATABASE DEPENDENCIES -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
        </dependency>

        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc6</artifactId>
            <version>11.2.0</version>
        </dependency>

        <!-- SPRING DEPENDENCIES -->


        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.5.6</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-entitymanager -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>3.3.2.GA</version>
        </dependency>

    </dependencies>
    <build>
        <finalName>PreBaseCourse</finalName>

        <pluginManagement>
            <plugins>
                <!-- С помощью следующего плагина будем создавать Java классы из XSD схем. Эти классы - результат Request и Response.
                 Классы надо создавать до mvn clean install. Для того чтобы созадть Java классы из XSD схем: mvn jaxb2:xjc.
                 параметры ${schemaDirectory} и ${outputDirectory} берутся из локального settings.xml файла maven расположенного в
                 C:\Users\[user]\.m2\settings.xml -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>jaxb2-maven-plugin</artifactId>
                    <version>1.6</version>
                    <executions>
                        <execution>
                            <id>xjc</id>
                            <goals>
                                <goal>xjc</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <schemaDirectory>${schemaDirectory}</schemaDirectory>
                        <outputDirectory>${outputDirectory}</outputDirectory>
                        <clearOutputDir>false</clearOutputDir>
                    </configuration>
                    <!-- Запускать этот плагин надо не по команде mvn clean jaxb2:xjc, а по
                     mvn clean jaxb2:xjc -Djavax.xml.accessExternalSchema=all, именно с clean, иначе он не может получить
                     доступ к accessExternalSchema. Проблема только с Java 8, на Java 7 вроде такой проблемы нет. -->
                </plugin>

                <plugin>
                    <groupId>com.oracle.weblogic</groupId>
                    <artifactId>weblogic-maven-plugin</artifactId>
                    <version>10.3.4</version>
                    <configuration>
                        <adminurl>t3://localhost:7001</adminurl>
                        <user>Antario</user>
                        <password>nba777799779</password>
                        <upload>true</upload>
                        <action>deploy</action>
                        <remote>false</remote>
                        <verbose>true</verbose>
                        <source>D:/Projects/PreBaseCourse/target/PreBaseCourse.war</source>
                        <name>PreBaseCourse</name>
                        <targets>AdminServer</targets>
                    </configuration>
                    <!--
                    <executions>
                       <execution>
                          <phase>install</phase>
                            <goals>
                              <goal>deploy</goal>
                            </goals>
                       </execution>
                     </executions>
                     -->
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.6.0</version>
                    <configuration>
                        <source>1.6</source>
                        <target>1.6</target>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
