<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

	<groupId>com.amudhan</groupId>
  	<artifactId>caveatemptor</artifactId>
  	<version>0.0.1-SNAPSHOT</version>
  	<packaging>war</packaging>
  	
  	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.springframework.version>4.3.0.RELEASE</org.springframework.version>
		<org.springframework.security.version>4.1.1.RELEASE</org.springframework.security.version>
		<aspectj.version>1.7.4</aspectj.version>
		<slf4j.version>1.7.21</slf4j.version>
		<log4j-versionl>2.6.1</log4j-versionl>
		<testng-version>6.9.10</testng-version>
		<commons-logging.version>1.2</commons-logging.version>
		<mysql-version>5.1.39</mysql-version>
		<hibernate-entity-manager-version>5.2.1.Final</hibernate-entity-manager-version>
		<hibernate-validator-version>5.2.4.Final</hibernate-validator-version>
		<hikaricp-version>2.4.5</hikaricp-version>
		<liquibase-version>3.5.1</liquibase-version>
	</properties>

	<name>Caveat Emptor</name>
  	<url>http://maven.apache.org</url>
  	<description>Services that help selling and buying through auction method</description>
  	
  	<profiles>
  		<profile>
  			<id>dev</id>
  			<properties>
  				<env>dev</env>
  			</properties>
  		</profile>
  		<profile>
  			<id>test</id>
  			<activation>
            	<activeByDefault>true</activeByDefault>
        	</activation>
  			<properties>
  				<env>test</env>
  			</properties>
  		</profile>
  	</profiles>

	<dependencies>
		<!-- spring-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
		  	<groupId>org.springframework</groupId>
		  	<artifactId>spring-beans</artifactId>
		  	<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
		  	<groupId>org.springframework</groupId>
		  	<artifactId>spring-context</artifactId>
		  	<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
		  	<groupId>org.springframework</groupId>
		  	<artifactId>spring-tx</artifactId>
		  	<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-web</artifactId>
		    <version>${org.springframework.security.version}</version>
		</dependency>
		<dependency>
  			<groupId>mysql</groupId>
  			<artifactId>mysql-connector-java</artifactId>
  			<version>${mysql-version}</version>
	  	</dependency>
	  	<!--liquibase-core -->
		<dependency>
    		<groupId>org.liquibase</groupId>
    		<artifactId>liquibase-core</artifactId>
    		<version>${liquibase-version}</version>
		</dependency>
	  	<!-- Hibernate implementation of JPA -->
	  	<dependency>
	    	<groupId>org.hibernate</groupId>
	    	<artifactId>hibernate-entitymanager</artifactId>
	    	<version>${hibernate-entity-manager-version}</version>
		</dependency>
		<!-- Hibernate validation engine -->
		<dependency>
    		<groupId>org.hibernate</groupId>
    		<artifactId>hibernate-validator</artifactId>
    		<version>${hibernate-validator-version}</version>
		</dependency>
		<!-- HikariCP, connnection pool -->
		<dependency>
    		<groupId>com.zaxxer</groupId>
    		<artifactId>HikariCP</artifactId>
    		<version>${hikaricp-version}</version>
    		<scope>compile</scope>
		</dependency>
		<!-- logging -->
		<!-- SLF4J API -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!-- LOG4J implementation of SLF4J API -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j-versionl}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j-versionl}</version>
		</dependency>
		<!-- testng -->
		<dependency>
			<groupId>org.testng</groupId>
		    <artifactId>testng</artifactId>
		    <version>${testng-version}</version>
		</dependency>
	</dependencies>
  
  	<build>
		<plugins>
      		<plugin>
	    		<artifactId>maven-compiler-plugin</artifactId>
	      		<version>3.5.1</version>
		  		<configuration>
		    		<source>1.8</source>
		    		<target>1.8</target>
	      		</configuration>
      		</plugin>
      		<!-- To run this, -Denv=${profile} liquibase:update -->
      		<!-- Based on the selection of the profile, the value of the property 'env' would be 'dev' or 'test'. -->
      		<!-- The liquibase plugin should be run before deploying the build to create tables and populating data. -->
      		<!-- This is helpful when the code base is worked on multiple machines. Liquibase is version control for databases -->
      		<plugin>
      			<groupId>org.liquibase</groupId>
      			<artifactId>liquibase-maven-plugin</artifactId>
      			<version>${liquibase-version}</version>
      			<configuration>
      				<propertyFile>src/main/resources/liquibase/properties/liquibase_${env}.properties</propertyFile>
      			</configuration>
      			<executions>
      				<execution>
      					<goals>
      						<goal>update</goal>
      					</goals>
      				</execution>
      			</executions>
      		</plugin>
    	</plugins>
  	</build>
  	  	
</project>
