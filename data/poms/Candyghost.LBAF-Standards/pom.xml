<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>corp.airbus.helicopters.efactory.myApp</groupId>
	<version>0.0.1-SNAPSHOT</version>
	<artifactId>myApp</artifactId>
	<packaging>pom</packaging>
	<name>Eurocopter - eFactory - myApp</name>

	<properties>
		<gulp_target>dist:production</gulp_target>
		<profiles>package</profiles>
		<application.context>myApp</application.context>
		<jndi.name>jdbc/corp.airbus.helicopters.jdbc.myApp</jndi.name>
	</properties>
	<build>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>1.7</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>package</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<phase>generate-sources</phase>
								<configuration>
									<target name="building">
										<echo>
										</echo>
										<!-- Front-end building -->
										<echo> ============== Front-end building (1/5)
											================
										</echo>
										<exec executable="cmd" dir="${project.basedir}" osfamily="windows"
											failonerror="true">
											<arg
												line="/c mvn clean install -f front-end\pom.xml -P${profiles} -Dgulp_target=${gulp_target}" />
										</exec>
										<exec executable="bash" dir="${project.basedir}"
											osfamily="unix" failonerror="true">
											<arg
												line="-c 'mvn clean install -f front-end/pom.xml -P${profiles} -Dgulp_target=${gulp_target}'" />
										</exec>

										<!-- Copy front-end static to back-end -->
										<echo> ============== Copy front-end static to back-end (2/5)
											================
										</echo>
										<exec executable="cmd" dir="${project.basedir}" osfamily="windows"
											failonerror="true">
											<arg
												line="/c xcopy front-end\dist back-end\myApp-webapp\src\main\webapp-content /E /Y" />
										</exec>
										<exec executable="bash" dir="${project.basedir}"
											osfamily="unix" failonerror="true">
											<arg
												line="-c 'cp -rf front-end/dist/* back-end/myApp-webapp/src/main/webapp-content'" />
										</exec>

										<!-- Copy i18n front-end to back-end -->
										<echo> ============== Copy i18n front-end to back-end (3/5)
											================
										</echo>
										<exec executable="cmd" dir="${project.basedir}" osfamily="windows"
											failonerror="true">
											<arg
												line="/c xcopy front-end\dist\i18n back-end\myApp-webapp\src\main\resources\external\i18n /E /Y" />
										</exec>
										<exec executable="bash" dir="${project.basedir}"
											osfamily="unix" failonerror="true">
											<arg
												line="-c 'cp -rf front-end/dist/i18n/* back-end/myApp-webapp/src/main/resources/external/i18n'" />
										</exec>

										<!-- Back-end building -->
										<echo> ============== Back-end building (4/5) ================ </echo>
										<exec executable="cmd" dir="${project.basedir}" osfamily="windows"
											failonerror="true">
											<arg
												line="/c mvn clean install -DskipTests -f back-end\myApp-parent\pom.xml -P${profiles} -Dapplication.context=${application.context} -Djndi.name=${jndi.name}" />
										</exec>
										<exec executable="bash" dir="${project.basedir}"
											osfamily="unix" failonerror="true">
											<arg
												line="-c 'mvn clean install -DskipTests -f back-end/myApp-parent/pom.xml -P${profiles} -Dapplication.context=${application.context} -Djndi.name=${jndi.name}'" />
										</exec>

										<!-- Clean copy -->
										<echo> ============== Clean copy (5/5) ================ </echo>
										<exec executable="cmd" dir="${project.basedir}" osfamily="windows"
											failonerror="true">
											<arg
												line="/c rd back-end\myApp-webapp\src\main\webapp-content /S /Q" />
										</exec>
										<exec executable="bash" dir="${project.basedir}"
											osfamily="unix" failonerror="true">
											<arg
												line="-c 'rm -rf back-end/myApp-webapp/src/main/webapp-content/*'" />
										</exec>
										<exec executable="cmd" dir="${project.basedir}" osfamily="windows"
											failonerror="true">
											<arg line="/c md back-end\myApp-webapp\src\main\webapp-content" />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>scaffolding</id>
			<properties>
				<app>app</app>
			</properties>
			<build>
				<plugins>
					<plugin>
						<dependencies>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant-apache-regexp</artifactId>
								<version>1.9.4</version>
								<scope>runtime</scope>
							</dependency>
						</dependencies>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<move overwrite="true" todir="." enablemultiplemappings="true">
											<fileset dir=".">
												<include name="**/*" />
												<exclude name=".git" />
											</fileset>
											<regexpmapper from="(.*)myApp(.*)$$" to="\1${app}\2" />
										</move>
										<move overwrite="true" todir="." enablemultiplemappings="true">
											<fileset dir=".">
												<include name="**/*" />
												<exclude name=".git" />
											</fileset>
											<regexpmapper from="(.*)myApp(.*)$$" to="\1${app}\2" />
										</move>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>replacer</artifactId>
						<version>1.5.3</version>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<goals>
									<goal>replace</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<basedir>.</basedir>
							<includes>
								<include>**/*</include>
							</includes>
							<filesToExclude>.git/**/*</filesToExclude>
							<token>myApp</token>
							<value>${app}</value>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>

