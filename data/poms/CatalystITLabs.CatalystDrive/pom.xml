<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>CatalystDrive</groupId>
  <artifactId>CatalystDrive</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>${project.artifactId} Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <properties>
    <!-- Put the path to the embedded server here -->
    <embeddedServerPath>com/catalyst/drive/servers/EmbeddedJettyServer</embeddedServerPath>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jetty.version>8.0.4.v20111024</jetty.version>
    <spring.version>3.2.1.RELEASE</spring.version>
    <spring.security.version>3.1.4.RELEASE</spring.security.version>
    <jsf.version>1.2</jsf.version>
    <slf4j.version>1.6.6</slf4j.version>
  </properties>
  <repositories>
    <repository>
      <id>hibernate-persistence</id>
      <layout>default</layout>
      <name>Repository for library Library[hibernate-persistence]</name>
      <url>http://download.java.net/maven/2/</url>
    </repository>
    <repository>
      <id>springsource-repo</id>
      <name>SpringSource Repository</name>
      <url>http://repo.springsource.org/release</url>
    </repository>
    <repository>
      <id>codehaus</id>
      <url>http://repository.codehaus.org/org/codehaus</url>
    </repository>
    <repository>
      <id>java.net2</id>
      <name>Repository hosting the jee6 artifacts</name>
      <url>http://download.java.net/maven/glassfish</url>
    </repository>
  </repositories>
  <profiles>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <!-- For embedded Jetty Server -->
        <dependency>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-webapp</artifactId>
          <version>${jetty.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-server</artifactId>
          <version>${jetty.version}</version>
          <scope>provided</scope>
        </dependency>
        <!-- Needed for SSL with Jetty -->
        <dependency>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-security</artifactId>
          <version>${jetty.version}</version>
        </dependency>
        <!-- If using websockets or continuation -->
        <dependency>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-websocket</artifactId>
          <version>${jetty.version}</version>
        </dependency>
        <!--jsp support for jetty, add the following -->
        <dependency>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-jsp-2.1</artifactId>
          <version>7.5.4.v20111024</version>
        </dependency>
        <dependency>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jsp-2.1-glassfish</artifactId>
          <version>2.1.v20100127</version>
        </dependency>
        <!-- Used by Jetty for logging -->
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
          <version>${slf4j.version}</version>
        </dependency>
        <!-- Standard Servlet API -->
        <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
          <version>3.0.1</version>
        </dependency>
        <dependency>
          <groupId>javax.servlet.jsp</groupId>
          <artifactId>jsp-api</artifactId>
          <version>2.1</version>
        </dependency>
        <!-- Needed for Ajax -->
        <dependency>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-jaxrs</artifactId>
          <version>1.6.1</version>
    	</dependency>   
        <dependency>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-mapper-asl</artifactId>
          <version>1.9.9</version>
        </dependency>
        <dependency>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-core-asl</artifactId>
          <version>1.9.9</version>
	    </dependency>
        <!-- Spring(core, mvc, etc.) Use version 3.0.5 if using ldap -->
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-oxm</artifactId>
          <version>${spring.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-webmvc</artifactId>
          <version>${spring.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
          <version>${spring.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-test</artifactId>
          <version>${spring.version}</version>
          <type>jar</type>
          <scope>compile</scope>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-tx</artifactId>
          <version>${spring.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-orm</artifactId>
          <version>${spring.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
          <version>${spring.version}</version>
        </dependency>
        <!-- Spring Security including LDAP -->
        <dependency>
          <groupId>org.springframework.security</groupId>
          <artifactId>spring-security-core</artifactId>
          <version>${spring.security.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework.security</groupId>
          <artifactId>spring-security-web</artifactId>
          <version>${spring.security.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework.security</groupId>
          <artifactId>spring-security-config</artifactId>
          <version>${spring.security.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework.security</groupId>
          <artifactId>spring-security-taglibs</artifactId>
          <version>${spring.security.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework.security</groupId>
          <artifactId>spring-security-ldap</artifactId>
          <version>${spring.security.version}</version>
        </dependency>
        <!-- JSTL for static content -->
        <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>jstl</artifactId>
          <version>${jsf.version}</version>
        </dependency>
        <!-- Log4J -->
        <dependency>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
          <version>1.2.14</version>
        </dependency>
        <dependency>
          <groupId>log4j</groupId>
          <artifactId>apache-log4j-extras</artifactId>
          <version>1.0</version>
        </dependency>
        <!-- More Logging -->
        <!-- declare commons-logging in provided scope to force its exclusion from 
			dependencies -->
        <dependency>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
          <version>1.1.1</version>
          <scope>provided</scope>
        </dependency>
        <!-- Use slf4j as a logging facade -->
        <!-- <dependency> -->
        <!-- <groupId>org.slf4j</groupId> -->
        <!-- <artifactId>slf4j-api</artifactId> -->
        <!-- <version>${slf4j.version}</version> -->
        <!-- </dependency> -->
        <!-- Anything using commons-logging should defer to slf4j. -->
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
          <version>${slf4j.version}</version>
        </dependency>
        <!--use log4j through slf4j facade -->
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
          <version>${slf4j.version}</version>
        </dependency>
        <!-- Misc -->
        <dependency>
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpclient</artifactId>
          <version>4.2.1</version>
        </dependency>
        <!-- MySQL connector -->
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <version>5.1.5</version>
          <type>jar</type>
          <scope>compile</scope>
        </dependency>
        <!-- Java Mail -->
        <dependency>
          <groupId>javax.mail</groupId>
          <artifactId>mail</artifactId>
          <version>1.4.3</version>
        </dependency>
        <!-- Junit4 -->
        <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>4.8.1</version>
          <scope>test</scope>
        </dependency>
        <!-- Mockito for Mock Objects in Tests -->
        <dependency>
	      <groupId>org.mockito</groupId>
	      <artifactId>mockito-all</artifactId>
	      <version>1.9.5</version>
	      <scope>test</scope>
        </dependency>           
        <!-- Hibernate -->
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>ejb3-persistence</artifactId>
          <version>1.0.1.GA</version>
        </dependency>
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-entitymanager</artifactId>
          <version>3.3.2.GA</version>
        </dependency>
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate</artifactId>
          <version>3.2.5.ga</version>
          <exclusions>
            <exclusion>
              <groupId>asm</groupId>
              <artifactId>asm</artifactId>
            </exclusion>
            <exclusion>
              <groupId>asm</groupId>
              <artifactId>asm-attrs</artifactId>
            </exclusion>
            <exclusion>
              <groupId>cglib</groupId>
              <artifactId>cglib</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <!-- Used to keep data connection alive -->
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-c3p0</artifactId>
          <version>4.0.1.Final</version>
        </dependency>
        <!-- Helps with class loading -->
        <dependency>
          <groupId>asm</groupId>
          <artifactId>asm</artifactId>
          <version>3.2</version>
        </dependency>
        <dependency>
          <groupId>cglib</groupId>
          <artifactId>cglib-nodep</artifactId>
          <version>2.2</version>
        </dependency>
        <!-- AOP -->
        <dependency>
          <groupId>aopalliance</groupId>
          <artifactId>aopalliance</artifactId>
          <version>1.0</version>
        </dependency>
        <dependency>
          <groupId>org.aspectj</groupId>
          <artifactId>aspectjweaver</artifactId>
          <type>jar</type>
          <version>1.6.12</version>
        </dependency>
        <!-- Allows use of Master Pages -->
        <dependency>
          <groupId>commons-collections</groupId>
          <artifactId>commons-collections</artifactId>
          <version>3.0</version>
        </dependency>
        <dependency>
          <groupId>org.apache.tiles</groupId>
          <artifactId>tiles-extras</artifactId>
          <version>3.0.0</version>
        </dependency>
        <!-- For JUNIT Tests db sources -->
        <dependency>
          <groupId>javax.annotation</groupId>
          <artifactId>javax.annotation-api</artifactId>
          <version>1.2</version>
        </dependency>
        <!-- Apache Commons dependencies -->
        <dependency>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
          <version>2.4</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>externalContainer</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <!-- For embedded Jetty Server -->
        <dependency>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-webapp</artifactId>
          <version>${jetty.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-server</artifactId>
          <version>${jetty.version}</version>
          <scope>provided</scope>
        </dependency>
        <!-- Needed for SSL with Jetty -->
        <dependency>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-security</artifactId>
          <version>${jetty.version}</version>
        </dependency>
        <!-- If using websockets or continuation -->
        <dependency>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-websocket</artifactId>
          <version>${jetty.version}</version>
        </dependency>
        <!--jsp support for jetty, add the following -->
        <dependency>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-jsp-2.1</artifactId>
          <version>7.5.4.v20111024</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jsp-2.1-glassfish</artifactId>
          <version>2.1.v20100127</version>
          <scope>provided</scope>
        </dependency>
        <!-- Used by Jetty for logging -->
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
          <version>${slf4j.version}</version>
        </dependency>
        <!-- Standard Servlet API -->
        <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
          <version>3.0.1</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>javax.servlet.jsp</groupId>
          <artifactId>jsp-api</artifactId>
          <version>2.1</version>
          <scope>provided</scope>
        </dependency>
        <!-- Needed for Ajax -->
        <dependency>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-jaxrs</artifactId>
          <version>1.6.1</version>
    	</dependency>   
        <dependency>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-mapper-asl</artifactId>
          <version>1.9.9</version>
        </dependency>
        <dependency>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-core-asl</artifactId>
          <version>1.9.9</version>
	    </dependency>
        <!-- Spring(core, mvc, etc.) Use version 3.0.5 if using ldap -->
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-oxm</artifactId>
          <version>${spring.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-webmvc</artifactId>
          <version>${spring.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
          <version>${spring.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-test</artifactId>
          <version>${spring.version}</version>
          <type>jar</type>
          <scope>compile</scope>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-tx</artifactId>
          <version>${spring.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-orm</artifactId>
          <version>${spring.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
          <version>${spring.version}</version>
        </dependency>
        <!-- Spring Security including LDAP -->
        <dependency>
          <groupId>org.springframework.security</groupId>
          <artifactId>spring-security-core</artifactId>
          <version>${spring.security.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework.security</groupId>
          <artifactId>spring-security-web</artifactId>
          <version>${spring.security.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework.security</groupId>
          <artifactId>spring-security-config</artifactId>
          <version>${spring.security.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework.security</groupId>
          <artifactId>spring-security-taglibs</artifactId>
          <version>${spring.security.version}</version>
        </dependency>
        <dependency>
          <groupId>org.springframework.security</groupId>
          <artifactId>spring-security-ldap</artifactId>
          <version>${spring.security.version}</version>
        </dependency>
        <!-- JSTL for static content -->
        <!-- Different here than for embeddedAndDebug -->
        <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>jstl</artifactId>
          <version>1.2</version>
        </dependency>
        <!-- Log4J -->
        <dependency>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
          <version>1.2.14</version>
        </dependency>
        <dependency>
          <groupId>log4j</groupId>
          <artifactId>apache-log4j-extras</artifactId>
          <version>1.0</version>
        </dependency>
        <!-- More Logging -->
        <!-- declare commons-logging in provided scope to force its exclusion from 
			dependencies -->
        <dependency>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
          <version>1.1.1</version>
          <scope>provided</scope>
        </dependency>
        <!-- Use slf4j as a logging facade -->
        <!-- <dependency> -->
        <!-- <groupId>org.slf4j</groupId> -->
        <!-- <artifactId>slf4j-api</artifactId> -->
        <!-- <version>${slf4j.version}</version> -->
        <!-- </dependency> -->
        <!-- Anything using commons-logging should defer to slf4j. -->
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
          <version>${slf4j.version}</version>
        </dependency>
        <!--use log4j through slf4j facade -->
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
          <version>${slf4j.version}</version>
        </dependency>
        <!-- Misc -->
        <dependency>
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpclient</artifactId>
          <version>4.2.1</version>
        </dependency>
        <!-- MySQL connector -->
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <version>5.1.5</version>
          <type>jar</type>
          <scope>compile</scope>
        </dependency>
        <!-- Java Mail -->
        <dependency>
          <groupId>javax.mail</groupId>
          <artifactId>mail</artifactId>
          <version>1.4.3</version>
        </dependency>
        <!-- Junit4 -->
        <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>4.8.1</version>
          <scope>test</scope>
        </dependency>
        <!-- Mockito for Mock Objects in Tests -->
        <dependency>
	      <groupId>org.mockito</groupId>
	      <artifactId>mockito-all</artifactId>
	      <version>1.9.5</version>
	      <scope>test</scope>
        </dependency>       
        <!-- Hibernate -->
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>ejb3-persistence</artifactId>
          <version>1.0.1.GA</version>
        </dependency>
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-entitymanager</artifactId>
          <version>3.3.2.GA</version>
        </dependency>
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate</artifactId>
          <version>3.2.5.ga</version>
          <exclusions>
            <exclusion>
              <groupId>asm</groupId>
              <artifactId>asm</artifactId>
            </exclusion>
            <exclusion>
              <groupId>asm</groupId>
              <artifactId>asm-attrs</artifactId>
            </exclusion>
            <exclusion>
              <groupId>cglib</groupId>
              <artifactId>cglib</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <!-- Used to keep data connection alive -->
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-c3p0</artifactId>
          <version>4.0.1.Final</version>
        </dependency>
        <!-- Helps with class loading -->
        <dependency>
          <groupId>asm</groupId>
          <artifactId>asm</artifactId>
          <version>3.1</version>
        </dependency>
        <dependency>
          <groupId>cglib</groupId>
          <artifactId>cglib-nodep</artifactId>
          <version>2.2</version>
        </dependency>
        <!-- AOP -->
        <dependency>
          <groupId>aopalliance</groupId>
          <artifactId>aopalliance</artifactId>
          <version>1.0</version>
        </dependency>
        <dependency>
          <groupId>org.aspectj</groupId>
          <artifactId>aspectjweaver</artifactId>
          <type>jar</type>
          <version>1.6.12</version>
        </dependency>
        <!-- Allows use of Master Pages -->
        <dependency>
          <groupId>commons-collections</groupId>
          <artifactId>commons-collections</artifactId>
          <version>3.0</version>
        </dependency>
        <dependency>
          <groupId>org.apache.tiles</groupId>
          <artifactId>tiles-extras</artifactId>
          <version>3.0.0</version>
        </dependency>
        <!-- For JUNIT Tests db sources -->
        <dependency>
          <groupId>javax.annotation</groupId>
          <artifactId>javax.annotation-api</artifactId>
          <version>1.2</version>
        </dependency>
        <!-- Apache Commons dependencies -->
        <dependency>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
          <version>2.4</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <!-- log4j.xml is copied as a resource for EmbeddedJettyServer from WEB-INF/contexts -->
      <!-- It is originally in WEB-INF/contexts as defined in the web.xml -->
      <resource>
        <directory>src/main/webapp/WEB-INF/contexts</directory>
        <includes>
          <include>log4j.xml</include>
        </includes>
      </resource>
      <!-- Keystore file is copied as a resource for EmbeddedJettyServer -->
      <resource>
        <directory>keystore</directory>
        <includes>
          <include>*.jks</include>
        </includes>
      </resource>
    </resources>
    <!-- The following plugins allow for using the development jetty server 
			with jetty:run side by side with building an executable war via maven-install -->
    <plugins>
      <!-- Specifies the entry point main class (embedded server) of the executable 
				war -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <archive>
            <manifest>
              <mainClass>${embeddedServerPath}</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <!-- Moves the entry point main class, log4j config, and keystore (which 
				are copied as resources before this phase) to the root of the war -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>move-main-class</id>
            <phase>compile</phase>
            <configuration>
              <target>
                <move todir="${project.build.directory}/${project.artifactId}">
                  <fileset dir="${project.build.directory}/classes/">
                    <include name="${embeddedServerPath}.class" />
                    <include name="log4j.xml" />
                    <include name="*.jks" />
                  </fileset>
                </move>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Ensures dependencies are available to the embedded server in its 
				new location -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>jetty-classpath</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeGroupIds>org.eclipse.jetty,javax.servlet,log4j,org.slf4j</includeGroupIds>
              <excludeArtifactIds>jsp-api,jstl</excludeArtifactIds>
              <outputDirectory>${project.build.directory}/${project.artifactId}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Jetty debugging server setup -->
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jetty.version}</version>
        <configuration>
          <contextXml>${basedir}/src/main/webapp/WEB-INF/contexts/jetty-context.xml</contextXml>
          <scanIntervalSeconds>1</scanIntervalSeconds>
          <webAppConfig>
            <contextPath>/CatalystDrive</contextPath>
            <descriptor>${basedir}/src/main/webapp/web.xml</descriptor>
            <defaultsDescriptor>${basedir}/src/main/resources/webdefault.xml</defaultsDescriptor>
          </webAppConfig>
          <connectors>
            <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
              <forwarded>true</forwarded>
              <port>8080</port>
            </connector>
          </connectors>
        </configuration>
      </plugin>
      <!-- For compliance levels of project -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      <!-- Required for junit tests to run without error -->
      <plugin>
      	<groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.5.1</version>
        <configuration>
          <argLine>-XX:-UseSplitVerifier</argLine>
          <formats>
            <format>xml</format>
          </formats>
        </configuration>
            <executions>
                <execution>
                    <phase>test</phase>
                    <goals>
                        <goal>cobertura</goal>
                    </goals>
                </execution>
            </executions>
       </plugin>
    </plugins>
    <finalName>${project.artifactId}</finalName>
    <!-- This section eliminates warnings that would ordinarily appear for 
			a couple of the <execution> tags -->
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <versionRange>[1.7,)</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>