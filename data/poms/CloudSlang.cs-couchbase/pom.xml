<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>io.cloudslang.content</groupId>
    <artifactId>cs-couchbase</artifactId>
    <version>0.1.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>${project.groupId}:${project.artifactId}</name>
    <description>Content and Actions for Couchbase integration</description>
    <url>https://github.com/CloudSlang/cs-couchbase</url>

    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </reporting>

    <properties>
        <!--Maven versions-->
        <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
        <gitlog-maven-plugin.version>&gt;1.13.3</gitlog-maven-plugin.version>
        <cobertura-maven-plugin.version>2.7</cobertura-maven-plugin.version>
        <maven-javadoc-plugin.version>2.10.4</maven-javadoc-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-source-plugin.version>3.0.1</maven-source-plugin.version>
        <maven-license-plugin.version>3.0</maven-license-plugin.version>
        <nexus-staging-maven-plugin>1.6.8</nexus-staging-maven-plugin>
        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
        <!--Project dependencies-->
        <score-content-sdk.version>1.10.7</score-content-sdk.version>
        <commons-validator.version>1.6</commons-validator.version>
        <cs-http-client.version>0.1.73</cs-http-client.version>
        <cs-commons.version>0.0.6</cs-commons.version>
        <!--Testing dependencies-->
        <mockito-all.version>1.10.19</mockito-all.version>
        <powermock.version>1.7.4</powermock.version>
        <junit.version>4.12</junit.version>
        <!--Project properties-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
        <maven.sources.skip>true</maven.sources.skip>
        <custom.nexus>overwriten_by_ci</custom.nexus>
    </properties>

    <developers>
        <developer>
            <name>Mihail Cristian Tusa</name>
            <email>tusa.mihai@gmail.com</email>
            <organization>CloudSlang contributor</organization>
            <organizationUrl>http://www8.hp.com/us/en/software/enterprise-software.html</organizationUrl>
        </developer>
        <developer>
            <name>Sorin Moldovan</name>
            <email>sorin@hpe.com</email>
            <organization>HPE Software</organization>
            <organizationUrl>http://www8.hp.com/us/en/software/enterprise-software.html</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://CloudSlang/cs-couchbase.git</connection>
        <developerConnection>scm:git:git@github.com:CloudSlang/cs-couchbase.git</developerConnection>
        <url>https://github.com/CloudSlang/cs-couchbase.git</url>
        <tag>master</tag>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/CloudSlang/cs-couchbase/issues</url>
    </issueManagement>

    <distributionManagement>
        <repository>
            <id>ossrh</id>
            <name>Maven Central staging repository</name>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
        <snapshotRepository>
            <id>ossrh</id>
            <name>Maven Central snapshots repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <dependencies>
        <dependency>
            <groupId>com.hp.score.sdk</groupId>
            <artifactId>score-content-sdk</artifactId>
            <version>${score-content-sdk.version}</version>
        </dependency>
        <dependency>
            <groupId>io.cloudslang.content</groupId>
            <artifactId>cs-commons</artifactId>
            <version>${cs-commons.version}</version>
        </dependency>
        <dependency>
            <groupId>io.cloudslang.content</groupId>
            <artifactId>cs-http-client</artifactId>
            <version>${cs-http-client.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <version>${commons-validator.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito-all.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>copy-resources</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${basedir}/target/classes</outputDirectory>
                                <includeEmptyDirs>false</includeEmptyDirs>
                                <resources>
                                    <resource>
                                        <targetPath>slang</targetPath>
                                        <directory>/src/main/slang</directory>
                                        <filtering>false</filtering>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${maven-license-plugin.version}</version>
                <configuration>
                    <header>${project.basedir}/license.template</header>
                    <headerDefinitions>
                        <headerDefinition>${project.basedir}/header-definitions.xml</headerDefinition>
                    </headerDefinitions>
                    <includes>
                        <include>**/*.java</include>
                    </includes>
                    <!--Pass arguments using ${var} syntax in license.template file-->
                    <properties>
                        <copyright.year>2017</copyright.year>
                    </properties>
                    <mapping>
                        <java>cs-actions-java-header</java>
                    </mapping>
                </configuration>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>gpg</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven-gpg-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>deploy-internal</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <version>${maven-deploy-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>custom-deployment-to-nexus</id>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                                <phase>deploy</phase>
                                <configuration>
                                    <altDeploymentRepository>${custom.nexus}</altDeploymentRepository>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>