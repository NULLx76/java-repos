<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Project -->
    <groupId>com.example</groupId>
    <artifactId>jrestart</artifactId>
    <version>0.1.2-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>jRESTart</name>
    <description>jRESTart - A basic project providing a simple, yet sufficient example on how to
        implement and use RESTful web services in Java, thus reducing the time needed
        to have your application up and running. Requires Apache Maven to build, test or deploy.
    </description>
    <url>http://code.google.com/p/jrestart/</url>

    <!-- Organization -->
    <organization>
        <name>jRESTart</name>
        <url>http://code.google.com/p/jrestart/</url>
    </organization>

    <!-- Properties that may be used by the POM.XML scripts -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <log4j.version>1.2.16</log4j.version>
        <slf4j.version>1.6.1</slf4j.version>
        <junit.version>4.8.2</junit.version>
        <jetty.version>6.0.2</jetty.version>
        <!--<resteasy.version>2.1.0.GA</resteasy.version>-->
        <jersey.version>1.9.1</jersey.version>
        <glassfish.plugin.version>2.1</glassfish.plugin.version>
    </properties>

    <!-- Repositories and dependencies -->
    <repositories>
        <repository>
            <id>central</id>
            <name>Maven Central</name>
            <url>http://repo1.maven.org/maven2</url>
        </repository>
        <repository>
            <id>java.net.m2</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
        </repository>
        <repository>
            <id>jboss-maven2-release-repository</id>
            <name>JBoss</name>
            <url>http://repository.jboss.org/maven2/</url>
        </repository>
        <repository>
            <id>codehaus</id>
            <name>Ð¡odehaus</name>
            <url>http://repository.codehaus.org</url>
        </repository>
        <repository>
            <id>ibiblio.mirrors</id>
            <name>ibiblio.mirrors</name>
            <url>http://mirrors.ibiblio.org/pub/mirrors/maven2</url>
        </repository>
        <repository>
            <id>glassfish-repo-archive</id>
            <name>Nexus repository collection for Glassfish</name>
            <url>http://maven.glassfish.org/content/groups/glassfish</url>
        </repository>
        <repository>
            <id>Open.iona.com Releases</id>
            <name>FUSE</name>
            <url>http://repo.open.iona.com/maven2/</url>
        </repository>
        <repository>
            <id>sonatype</id>
            <name>Sonatype</name>
            <url>http://repository.sonatype.org/content/groups/public/</url>
        </repository>
        <!--
        <repository>
            <id>scannotation</id>
            <url>http://scannotation.sf.net/maven2</url>
        </repository>
        <repository>
            <id>EclipseLink Repository</id>
            <url>http://www.eclipse.org/downloads/download.php?r=1&amp;nf=1&amp;file=/rt/eclipselink/maven.repo</url>
        </repository>
        <repository>
            <id>Maven Repository</id>
            <url>https://maven-repository.dev.java.net/nonav/repository</url>
        </repository>
        <repository>
            <id>Maven Repository #2</id>
            <url>http://www.ibiblio.org/maven</url>
        </repository>
        <repository>
            <id>jboss-maven2-release-repository</id>
            <name>JBoss-brew</name>
            <url>http://repository.jboss.org/maven2-brew/</url>
        </repository>
-->
    </repositories>

    <dependencies>

        <!-- Logging dependencies -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>

        <!-- Unit test frameworks -->
        <!--
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.5</version>
        </dependency>
        -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>5.8</version>
            <scope>test</scope>
            <classifier>jdk15</classifier>
        </dependency>

        <!--Used by Maven "mvn site" command-->
        <dependency>
            <groupId>org.apache.maven.skins</groupId>
            <artifactId>maven-stylus-skin</artifactId>
            <version>1.1</version>
        </dependency>

        <!--Jetty server and servlet API for the test-->
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
            <version>${jetty.version}</version>
            <!--<type>jar</type>-->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-util</artifactId>
            <version>${jetty.version}</version>
            <!--<type>jar</type>-->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <!--<type>jar</type>-->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.1.2</version>
            <scope>test</scope>
        </dependency>

        <!--Jersey JAX-RS implementation-->
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <!--&lt;!&ndash; RestEasy core library: One important thing is that RestEasy has a dependency for slf4j-simple
        and it will cause binding problems for logging mechanism if you choose to use another binding.
        As we are now using slf4j-log4j binding, we need to tell maven to exclude the slf4j-simple dependency
        of RestEasy so application discovers and uses the one we want &ndash;&gt;
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <version>${resteasy.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-simple</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        &lt;!&ndash; Jax-rs for the annotations we need for our web service &ndash;&gt;
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>jaxrs-api</artifactId>
            <version>${resteasy.version}</version>
            <scope>compile</scope>
        </dependency>

        &lt;!&ndash; Few more dependencies we need to add to make our web service function properly &ndash;&gt;
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxb-provider</artifactId>
            <version>${resteasy.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-jaxrs</artifactId>
            <version>1.8.0</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <version>1.3</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jettison-provider</artifactId>
            <version>${resteasy.version}</version>
            <scope>compile</scope>
        </dependency>-->

    </dependencies>

    <build>
        <plugins>
            <!-- This plug-in is used to compile the project. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>

            <!-- This plug-in is used to generate the documentation site for your project. 
            This includes both transforming your custom xdoc documents into XHTML (see the xdoc plugin), 
            and running the designated reports for your project. 
            The result is then packaged or deployed in the form that you desire. 
            -->
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <locales>en</locales>
                </configuration>
                <version>2.0-beta-6</version>
            </plugin>

            <!-- This plug-in is used for TestNG suite XML files,
            allowing flexible configuration of the tests to be run.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <suiteXmlFiles>
                        <suiteXmlFile>src/test/java/testng.xml</suiteXmlFile>
                    </suiteXmlFiles>
                </configuration>
            </plugin>


            <!-- This plug-in provides the ability to generate either a deployed webapp or a webapp packaged as a WAR file.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Implementation-Build>1.0</Implementation-Build>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- Members and contributors -->
    <developers>
        <developer>
            <email>alex.irimiea@gmail.com</email>
            <id>alex.irimiea</id>
            <name>Alexandru Irimiea</name>
            <organization>jRESTart project</organization>
            <organizationUrl>http://code.google.com/p/jrestart</organizationUrl>
            <roles>
                <role>Developer</role>
                <role>Owner</role>
            </roles>
        </developer>
    </developers>
    <!--
    <contributors>
        <contributor>
            <email>Contributor's e-mail</email>
            <name>A contributor</name>
            <organization>jRESTart project</organization>
            <organizationUrl>http://code.google.com/p/jrestart</organizationUrl>
            <roles>
                <role>A role</role>
            </roles>
        </contributor>
    </contributors>
    -->

    <!-- Issue tracking -->
    <issueManagement>
        <system>Google project hosting</system>
        <url>http://code.google.com/p/jrestart/issues/list</url>
    </issueManagement>

    <!-- Mailing list -->
    <mailingLists>
        <mailingList>
            <name>Contact</name>
            <subscribe>alex.irimiea@gmail.com</subscribe>
            <unsubscribe>alex.irimiea@gmail.com</unsubscribe>
        </mailingList>
    </mailingLists>

    <!-- Project license -->
    <licenses>
        <license>
            <name>Project license</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <comments>Apache License (version 2.0)</comments>
        </license>
    </licenses>

    <!-- Source repository -->
    <scm>
        <url>http://code.google.com/p/jrestart/source/checkout</url>
        <connection>scm:svn:https://jrestart.googlecode.com/svn/trunk</connection>
        <developerConnection>scm:svn:https://jrestart.googlecode.com/svn/trunk</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <!-- Reporting -->
    <reporting>
        <plugins>

            <!--
            The plugin below is used to generate the Surefire report containing the
            output results of FindBugs - as part of the site generation.
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>2.0</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <xmlOutputDirectory>./target/findbugs</xmlOutputDirectory>
                </configuration>
            </plugin>

            <!--
            The plugin below is used to generate the Surefire report containing the
            output results of the TestNG unit tests - as part of the site generation.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.5</version>
                <!--
                <configuration>
                    <outputName>TestNG results</outputName>
                </configuration>
                -->
            </plugin>

            <!--
            Used to publish classes' javadoc.
            -->
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>

            <!--
            The plugin below is used to see the Failure Details section of the report.
            The link is available to redirect you to the source code that caused the failure.
            -->
            <!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.1</version>
            </plugin>
             -->

            <!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <configLocation>
                        src/main/config/checkstyle.xml
                    </configLocation>
                </configuration>
            </plugin>
            -->

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2-beta-2</version>
                <configuration>
                    <descriptor>src/main/assembly/dep.xml</descriptor>
                </configuration>
            </plugin>

        </plugins>

    </reporting>

</project>
