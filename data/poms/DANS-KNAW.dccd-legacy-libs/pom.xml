<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<artifactId>dccd-legacy-libs</artifactId>
	<groupId>nl.knaw.dans.common-legacy</groupId>
	<version>1.0</version>
	<modelVersion>4.0.0</modelVersion>
	<name>DCCD legacy libs (based on dans-commons 2.6)</name>
	<packaging>pom</packaging>

	<prerequisites>
		<maven>[3.0.3,)</maven>
	</prerequisites>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<source-code-version>1.6</source-code-version>
		<byte-code-version>1.6</byte-code-version>
		<jibx.version>1.2.5</jibx.version>
	</properties>

	<profiles>
		<!-- The two profiles with the ids 'maven.filter.values' and 'pom.specified.values' 
			essentially say -->
		<!-- If a file '${user.home}/.m2/maven-filter-values.properties' exists, 
			then -->
		<!-- use also property values specified in that file -->
		<!-- Otherwise -->
		<!-- use also property values specified in the profile element -->
		<profile>
			<id>maven.filter.values</id>
			<activation>
				<file>
					<exists>${user.home}/.m2/maven-filter-values.properties</exists>
				</file>
			</activation>
			<build>
				<filters>
					<filter>${user.home}/.m2/maven-filter-values.properties</filter>
				</filters>
			</build>
		</profile>
		<profile>
			<id>pom.specified.values</id>
			<activation>
				<file>
					<missing>${user.home}/.m2/maven-filter-values.properties</missing>
				</file>
			</activation>
			<properties>
				<evm.host.address>127.0.0.1</evm.host.address>
			</properties>
		</profile>
	</profiles>

	<modules>
		<module>lang</module>
		<module>jibx</module>
		<module>fedora</module>
		<module>dans-ldap</module>
		<module>dans-wicket</module>
		<module>solr</module>
	</modules>

	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.2</version>
		</dependency>
		<!-- Unit testing dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-easymock</artifactId>
			<version>1.4.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.4.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.9</version>
			<!-- Only for test scope. For run-time scope configure this in end-node-projects -->
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
				<version>2.5.1</version>
				<configuration>
					<source>${source-code-version}</source>
					<target>${byte-code-version}</target>
					<debug>true</debug>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.0-beta-3</version>
				<configuration>
					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>2.5.1</version>
						</plugin>
						<plugin>
							<artifactId>maven-jxr-plugin</artifactId>
							<configuration>
								<aggregate>true</aggregate>
							</configuration>
							<version>2.3</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-report-plugin</artifactId>
							<version>2.4.2</version>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>cobertura-maven-plugin</artifactId>
							<version>2.5.1</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-pmd-plugin</artifactId>
							<version>2.3</version>
							<configuration>
								<linkXref>true</linkXref>
								<targetJdk>1.6</targetJdk>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>2.8.1</version>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.3</version>
				<configuration>
					<!-- Give the forked vm some space. With the default PermGen space we 
						run out of memory -->
					<argLine>-Xms512m -Xmx1024m -XX:MaxPermSize=512m</argLine>
					<useFile>true</useFile>
					<systemProperties>
						<property>
							<name>net.sourceforge.cobertura.datafile</name>
							<value>${basedir}/target/cobertura/cobertura.ser</value>
						</property>
					</systemProperties>
					<excludes>
						<exclude>**/*OnlineTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>

			</plugins>
		</pluginManagement>
	</build>

	<repositories>
		<!-- Maven.org repositories -->
		<repository>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
			<id>maven-repository</id>
			<name>Maven Repository</name>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>

		<!-- Codehaus -->
		<repository>
			<id>codehaus</id>
			<name>Codehaus repository</name>
			<url>http://repository.codehaus.org</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
		</repository>
		<!-- jibx -->
		<repository>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>jibx.sf.net</id>
			<name>JiBX repository</name>
			<url>http://jibx.sf.net/maven2</url>
		</repository>

		<!-- for bcel, fixing JiBX on Java8 -->
		<repository>
			<id>apache.snapshots</id>
			<url>https://repository.apache.org/content/repositories/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>jibx.sf.net</id>
			<name>JiBX repository</name>
			<url>http://jibx.sf.net/maven2</url>
		</pluginRepository>
	</pluginRepositories>

</project>

