<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.lamzin.eshop</groupId>
	<artifactId>eshop</artifactId>
	<version>1.1-SNAPSHOT</version>
	<name>eshop</name>
	<modules>
		<module>eshop-aspect</module>
		<module>eshop-rest-api</module>
		<module>eshop-web</module>
		<module>eshop-model</module>
		<module>eshop-persist</module>
		<module>eshop-service-interface</module>
		<module>eshop-validation-api</module>
		<module>eshop-service-impl</module>
	</modules>
	<packaging>pom</packaging>

	<repositories>
		<repository>
			<id>eap</id>
			<url>http://maven.repository.redhat.com/techpreview/all</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>eap</id>
			<url>http://maven.repository.redhat.com/techpreview/all</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.2-1003-jdbc4</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.25</version>
		</dependency>     
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

		<!-- my dependencies-->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>4.2.4.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
		</dependency>

		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.5.1</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>junit</artifactId>
					<groupId>junit</groupId>
				</exclusion>
				<exclusion>
					<artifactId>org.slf4j</artifactId>
					<groupId>slf4j-api</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.github.springtestdbunit</groupId>
			<artifactId>spring-test-dbunit</artifactId>
			<version>1.2.1</version>
			<scope>test</scope>

		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.12</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>dev</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.7.7.201606060606</version>
						<executions>
							<!--
                                Prepares the property pointing to the JaCoCo runtime agent which
                                is passed as VM argument when Maven the Surefire plugin is executed.
                            -->
							<execution>
								<id>pre-unit-test</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<!-- Sets the path to the file which contains the execution data. -->
									<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
									<!--
                                        Sets the name of the property containing the settings
                                        for JaCoCo runtime agent.
                                    -->
									<propertyName>surefireArgLine</propertyName>
								</configuration>
							</execution>
							<!--
                                Ensures that the code coverage report for unit tests is created after
                                unit tests have been run.
                            -->
							<execution>
								<id>post-unit-test</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<!-- Sets the path to the file which contains the execution data. -->
									<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
									<!-- Sets the output directory for the code coverage report. -->
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
								</configuration>
							</execution>

							<execution>
								<id>pre-integration-test</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<!-- Sets the path to the file which contains the execution data. -->
									<destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
									<!--
                                        Sets the name of the property containing the settings
                                        for JaCoCo runtime agent.
                                    -->
									<propertyName>failsafeArgLine</propertyName>
								</configuration>
							</execution>
							<!--
                                Ensures that the code coverage report for integration tests after
                                integration tests have been run.
                            -->
							<execution>
								<id>post-integration-test</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<!-- Sets the path to the file which contains the execution data. -->
									<dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
									<!-- Sets the output directory for the code coverage report. -->
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>check</id>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
									<rules>
										<rule>
											<element>BUNDLE</element>
											<limits>
												<limit>
													<counter>INSTRUCTION</counter>
													<value>COVEREDRATIO</value>
													<minimum>0.80</minimum>
												</limit>
												<limit>
													<counter>CLASS</counter>
													<value>MISSEDCOUNT</value>
													<maximum>0</maximum>
												</limit>
											</limits>
										</rule>
									</rules>
								</configuration>
							</execution>

						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.15</version>
						<configuration>
							<!-- Sets the VM argument line used when unit tests are run. -->
							<argLine>${surefireArgLine}</argLine>
							<!-- Skips unit tests if the value of skip.unit.tests property is true -->
							<skipTests>${skip.unit.tests}</skipTests>
							<!-- Excludes integration tests when unit tests are run. -->
							<excludes>
								<exclude>**/IT*.java</exclude>
							</excludes>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.15</version>
						<executions>
							<!--
                                Ensures that both integration-test and verify goals of the Failsafe Maven
                                plugin are executed.
                            -->
							<execution>
								<id>integration-tests</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<!-- Sets the VM argument line used when integration tests are run. -->
									<argLine>${failsafeArgLine}</argLine>
									<!--
                                        Skips integration tests if the value of skip.integration.tests property
                                        is true
                                    -->
									<skipTests>${skip.integration.tests}</skipTests>
									<skipTests>${skip.integration.tests}</skipTests>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when 
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app 
				will need. -->
			<!-- By default that is to put the resulting archive into the 'webapps' 
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<build>
				<finalName>eshop-web</finalName>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<outputDirectory>webapps</outputDirectory>
							<warName>ROOT</warName>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
