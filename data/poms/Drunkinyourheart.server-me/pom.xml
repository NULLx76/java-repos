<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jerry</groupId>
    <artifactId>server-me</artifactId>
    <version>1.0-SNAPSHOT</version>

    <dependencies>


        <!-- netty -->

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty</artifactId>
            <version>3.9.0.Final</version>
            <scope>compile</scope>
        </dependency>

        <!-- util -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>16.0.1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.1</version>
        </dependency>

        <!-- log -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.6.1</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <!-- 数据平台 统一升级 1.7 -->
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>

<!-- mojo -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>appassembler-maven-plugin</artifactId>
                <version>1.10</version>
                <configuration>

                    <repositoryLayout>flat</repositoryLayout>
                    <repositoryName>lib</repositoryName>

                    <!-- Set the target configuration directory to be used in the bin scripts -->
                    <configurationDirectory>conf</configurationDirectory>
                    <configurationSourceDirectory>src/main/resources</configurationSourceDirectory>
                    <!-- Copy the contents from "/src/main/config" to the target
                         configuration directory in the assembled application -->

                    <copyConfigurationDirectory>true</copyConfigurationDirectory>
                    <!-- Include the target configuration directory in the beginning of
                         the classpath declaration in the bin scripts -->

                    <includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>

                    <!-- set alternative assemble directory -->
                    <assembleDirectory>${project.build.directory}/${project.artifactId}</assembleDirectory>

                    <!-- Extra JVM arguments that will be included in the bin scripts -->
                    <extraJvmArguments>-Xms128m</extraJvmArguments>
                    <!-- Generate bin scripts for windows and unix pr default -->
                    <binFileExtensions>
                        <unix>.sh</unix>
                    </binFileExtensions>
                    <platforms>
                        <platform>windows</platform>
                        <platform>unix</platform>
                    </platforms>
                    <programs>
                        <program>
                            <!-- 配置入口程序 -->
                            <mainClass>com.mycompany.app.UnixApp2</mainClass>
                            <id>app2</id>
                            <!-- Only generate unix shell script for this application -->
                            <platforms>
                                <platform>unix</platform>
                            </platforms>
                        </program>
                        <!--<program>-->
                            <!--<mainClass>com.mycompany.app.App3</mainClass>-->
                            <!--<commandLineArguments>-->
                                <!--&lt;!&ndash; Add two predefined command line arguments to the call of App3 &ndash;&gt;-->
                                <!--<commandLineArgument>arg1</commandLineArgument>-->
                                <!--<commandLineArgument>arg2</commandLineArgument>-->
                            <!--</commandLineArguments>-->
                            <!--<id>app3</id>-->
                        <!--</program>-->
                        <program>
                            <mainClass>com.mycompany.app.App4</mainClass>
                            <id>app4</id>
                        </program>
                    </programs>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>