<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.EstateManagement.learning</groupId>
  <artifactId>EstateManagement</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>EstateManagement Maven Webapp</name>
  <url>http://maven.apache.org</url>

  <!--环境配置-->
  <profiles>
    <profile>
      <id>development</id>
      <!--默认激活开发环境-->
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <!--配置对应的属性-->
        <profile>development</profile>
        <skipMinify>true</skipMinify>
        <password>root</password>
      </properties>
    </profile>

    <profile>
      <id>product</id>
      <properties>
        <skipMinify>false</skipMinify>
      </properties>
    </profile>
  </profiles>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <spring.version>4.2.5.RELEASE</spring.version>
    <hibernate.version>4.3.8.Final</hibernate.version>
    <jackson.version>2.5.0</jackson.version>
    <druid.version>1.0.11</druid.version>
    <spring-security.version>3.2.9.RELEASE</spring-security.version>
    <jetty.version>9.2.10.v20150310</jetty.version>
  </properties>

  <dependencies>
    <!--阿里巴巴数据库连接池-->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>${druid.version}</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>

    <!-- spring -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>

    <!--spring data JPA-->
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-jpa</artifactId>
      <version>1.10.1.RELEASE</version>
    </dependency>


    <!--spring-security-->
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
      <version>${spring-security.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
      <version>${spring-security.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
      <version>${spring-security.version}</version>
    </dependency>

    <!-- 使用SpringMVC需配置 -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- 关系型数据库整合时需配置 如hibernate jpa等 -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- hibernate -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>${hibernate.version}</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-ehcache</artifactId>
      <version>${hibernate.version}</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-proxool</artifactId>
      <version>${hibernate.version}</version>
    </dependency>

    <!--hibernate jpa-->
    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.1-api</artifactId>
      <version>1.0.0.Final</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <version>${hibernate.version}</version>
    </dependency>

    <!-- 二级缓存ehcache -->
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache</artifactId>
      <version>2.9.0</version>
    </dependency>

    <!-- log4j -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>

    <!-- mysql连接 -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.34</version>
    </dependency>

    <!--mongoDB-->
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-mongodb</artifactId>
      <version>1.9.1.RELEASE</version>
    </dependency>

    <!-- c3p0数据源 -->
    <dependency>
      <groupId>com.mchange</groupId>
      <artifactId>c3p0</artifactId>
      <version>0.9.5-pre10</version>
    </dependency>

    <!-- json -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>1.2.3</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <!-- aop -->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>1.8.4</version>
    </dependency>

    <!-- servlet -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>3.0-alpha-1</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>

    <!--freeMarker-->
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>2.3.23</version>
    </dependency>

    <!-- sitemesh 页面装饰器布局-->
<!--    <dependency>
      <groupId>org.sitemesh</groupId>
      <artifactId>sitemesh</artifactId>
      <version>3.0.1</version>
    </dependency>-->

  </dependencies>
  <build>
    <finalName>EstateManagement</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <!--<includes>
          <include>assets</include>
        </includes>-->
        <excludes>
          <exclude>jade/**/*</exclude>
        </excludes>
        <filtering>true</filtering>
      </resource>
    </resources>
    <!--class文件的输出路径-->
    <outputDirectory>target/EstateManagement</outputDirectory>
    <plugins>

      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jetty.version}</version>
        <configuration>
         <!-- <webAppSourceDirectory>${project.basedir}/target/assets</webAppSourceDirectory>-->
          <!--<war>target/EstateManagement.war</war>-->
          <stopKey>alpha</stopKey>
          <stopPort>9099</stopPort>
          <!--热部署，扫描时间，如果启动热部署，静态文件资源是会被锁定并且不可更改的，如果这里启动会跟grunt watch监控有冲突-->
          <!--<scanIntervalSeconds>10</scanIntervalSeconds>-->
          <webApp>
            <contextPath>/</contextPath>
            <!--<resourceBases>target/assets</resourceBases>-->
          </webApp>
          <contextHandlers>
            <!--此配置可以配置多个APP应用同时运行-->
            <contextHandler implementation="org.eclipse.jetty.maven.plugin.JettyWebAppContext">
              <war>${project.basedir}/target/assets</war>
              <contextPath>/assets</contextPath>
            </contextHandler>
          </contextHandlers>
          <!--<classesDirectory>${project.basedir}/target/EstateManagement</classesDirectory>-->
          <!--扫描额外的文件-->
          <!--<scanTargets>
            <scanTarget>src/main/java</scanTarget>
          </scanTargets>-->
          <!--通过表达通配符路径配置扫描额外的文件-->
          <!--<scanTargetPatterns>
            <scanTargetPattern>
              <directory>${project.basedir}/src/main/resources</directory>
              <includes>
                <include>*.xml</include>
                <include>*.properties</include>
              </includes>
            </scanTargetPattern>
          </scanTargetPatterns>-->
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>0.0.26</version>
        <configuration>
          <srcdir>src/main/resources/assets</srcdir>
          <triggerfiles>
            <triggerfile>bower.json</triggerfile>
            <triggerfile>Gulpfile.js</triggerfile>
            <triggerfile>package.json</triggerfile>
          </triggerfiles>
        </configuration>
        <executions>
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>v5.3.0</nodeVersion>
              <npmVersion>3.3.12</npmVersion>
              <nodeDownloadRoot>http://npm.taobao.org/mirrors/node/</nodeDownloadRoot>
              <npmDownloadRoot>http://registry.npm.taobao.org/npm/-/</npmDownloadRoot>
            </configuration>
          </execution>
          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
          </execution>
          <execution>
            <id>bower install</id>
            <goals>
              <goal>bower</goal>
            </goals>
            <configuration>
              <arguments>install --allow-root</arguments>
            </configuration>
          </execution>
          <execution>
            <id>grunt build</id>
            <goals>
              <goal>grunt</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <!--<plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.0.1</version>
        <executions>
          <execution>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <resources>
                <resource>
                  <directory>target/assets</directory>
                </resource>
              </resources>
              <outputDirectory>target/${project.build.finalName}/assets
              </outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>-->

      <!-- Run the JUnit unit tests in an isolated classloader -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.4.2</version>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>

      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <resourceEncoding>${project.build.sourceEncoding}</resourceEncoding>
          <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
        </configuration>
      </plugin>

      <!-- generate java doc -->
      <!--<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9.1</version>
        <configuration>
          <javadocDirectory>target/javadoc</javadocDirectory>
          <reportOutputDirectory>target/javadoc</reportOutputDirectory>
          <charset>UTF-8</charset>
          <encoding>UTF-8</encoding>
          <docencoding>UTF-8</docencoding>
          <show>private</show>
        </configuration>
      </plugin>-->

      <!-- 部署至本机 -->
<!--      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <version>1.0</version>
        <configuration>
          <container>
            <containerId>tomcat6x</containerId>
            <home>D:\WebServer\apache-tomcat-6.0.39</home>
          </container>
          <configuration>
            <type>existing</type>
            <home>D:\WebServer\apache-tomcat-6.0.39</home>
          </configuration>
        </configuration>
      </plugin>-->
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <versionRange>[0.0.26,)</versionRange>
                    <goals>
                      <goal>install-node-and-npm</goal>
                      <goal>npm</goal>
                      <goal>bower</goal>
                      <goal>grunt</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute>
                      <runOnIncremental>false</runOnIncremental>
                    </execute>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
