<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.springframework</groupId>
    <artifactId>gs-spring-boot</artifactId>
    <version>0.1.0</version>

    <!-- Inherit defaults from Spring Boot -->
    <parent>
        <groupId>org.springframework.boot</groupId>
         <!-- The spring-boot-starter-parent is a special starter that provides useful Maven defaults. 
             It also provides a dependency-management section so that you can omit version tags 
             for blessed'' dependencies.  -->
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.1.8.RELEASE</version>
    </parent>

    <dependencies>
	    <!-- tag::jetty[] -->
        <dependency>
            <!-- Spring Boot -->
            <groupId>org.springframework.boot</groupId>
            <!-- Support for full-stack web development, including Tomcat and spring-webmvc -->
            <artifactId>spring-boot-starter-web</artifactId>
             <!-- end: Spring Boot -->
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
	    </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency>
        <!-- end::jetty[] -->
        <!-- tag::actuator[]  Building a RESTful Web Service with Spring Boot Actuator -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!-- end::actuator[] -->
        <!-- Accessing Data with JPA -->
        <!-- Accessing JPA Data with REST-->
         <dependency>
            <groupId>org.springframework.boot</groupId>
            <!-- Support for the `Java Persistence API'' including `spring-data-jpa, 
                 spring-orm and Hibernate. -->
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <!-- end: Accessing Data with JPA -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <!-- Support for exposing Spring Data repositories over REST via spring-data-rest-webmvc -->
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
        <!-- end: Accessing JPA Data with REST-->
        <!-- Consuming a RESTful Web Service -->
         <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <!-- end: Consuming a RESTful Web Service -->
        <!-- thymeleaf -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <!-- Support for the Thymeleaf templating engine, including integration with Spring -->
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!-- end: thymeleaf -->
        <!-- Validating Form Input -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-el</artifactId>
	</dependency>
        <!-- end: Validating Form Input -->
        <!-- Securing a Web Application -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <!-- end: Securing a Web Application -->
    </dependencies>

    <properties>
        <!-- Accessing Data with JPA -->
          <!-- Accessing JPA Data with REST-->
        <!-- Consuming a RESTful Web Service -->
        <!-- use UTF-8 for everything -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
         <!-- end: Consuming a RESTful Web Service -->
         <!--end: Accessing JPA Data with REST-->
        <!-- end: Accessing Data with JPA -->
        
        <start-class>com.hello.Application</start-class>
    </properties>

    <build>
        
        <plugins>
            <!--  Maven plugin that can package the project as an executable jar -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            
            <!-- Git commit information 
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>
             end: Git commit information --> 
      
        </plugins>
        
        <!-- Automatically expand info properties at build time -->
        <!-- application.properties / localhost:8080/info -->
       <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
       </resources>
       <!-- end: Automatically expand info... --> 
        
    </build>
     
    <repositories>
         <!-- Serving Web Content with Spring MVC -->
               <repository>
            <id>spring-milestone</id>
            <url>http://repo.spring.io/libs-release</url>
        </repository>
           <!-- end:  Serving Web Content with Spring MVC -->
           <!-- Accessing Data with JPA -->
         <repository>
            <id>org.jboss.repository.releases</id>
            <name>JBoss Maven Release Repository</name>
            <url>https://repository.jboss.org/nexus/content/repositories/releases</url>
        </repository>
       
        <!-- Consuming a RESTful Web Service -->
        <!-- Building a RESTful Web Service -->
        <!-- Building a RESTful Web Service with Spring Boot Actuator -->
        <!-- Uploading Files -->
        <!-- Validating Form Input --> 
        <repository>
            <id>spring-releases</id>
            <name>Spring Releases</name>
            <url>http://repo.spring.io/libs-release</url>
        </repository>
              
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-releases</id>
            <name>Spring Releases</name>
            <url>http://repo.spring.io/libs-release</url>
        </pluginRepository>
   <!-- end: Validating Form Input -->     
   <!-- end: Uploading Files -->
   <!-- end: Building a RESTful Web Service with Spring Boot Actuator -->
   <!-- end: Building a RESTful Web Service -->
   <!-- end: Consuming a RESTful Web Service -->
   <!-- end: Accessing Data with JPA -->
   <!-- Serving Web Content with Spring MVC -->
          <pluginRepository>
            <id>spring-milestone</id>
            <url>http://repo.spring.io/libs-release</url>
        </pluginRepository>
       <!-- end:  Serving Web Content with Spring MVC -->
       </pluginRepositories>
</project>
