<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
		http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.scijava</groupId>
		<artifactId>pom-scijava</artifactId>
		<version>3.1</version>
		<relativePath/>
        </parent>

<!-- 
	<properties>
		<imagej.app.directory>/home/foxel/Desktop/Fiji.app</imagej.app.directory>
	</properties>
 -->	

	<groupId>com.elphel</groupId>
 	<artifactId>imagej-elphel</artifactId>
<!-- 	<artifactId>Aberration_Calibration</artifactId> -->

	<version>1.0.0-SNAPSHOT</version>

        <name>plugins/imagej_elphel.jar</name>
<!-- 	<name>plugins/Aberration_Calibration.jar</name> -->
        <description>A Maven project implementing imagej-elphel plugin</description>

        <dependencies>
            <dependency>
                <groupId>net.imagej</groupId>
                <artifactId>ij</artifactId>
                <version>1.52e</version>
            </dependency>
            <dependency>
                <groupId>org.jcuda</groupId>
                <artifactId>jcuda</artifactId>
                <version>0.9.2</version>
            </dependency>
            <!--
            	As of 2018/09/11 TF for GPU on Maven supports CUDA 9.0 (vs latest 9.2)
            	Workaround:
            	  ~$ sudo dpkg -i cuda-repo-ubuntu1604-9-0-local_9.0.176-1_amd64.deb
            	  ~$ sudo apt install cuda-9.0
            	  # install or link back to cuda-9.2:
            	  ~$ sudo rm /usr/local/cuda; sudo ln -sf /usr/local/cuda-9.2 /usr/local/cuda
            	  Then in Eclipse's Run configurations... add an environment variable:
            	  LD_LIBRARY_PATH = /usr/local/cuda-9.0/lib64
            -->
            <dependency>
                <groupId>org.tensorflow</groupId>
                <artifactId>libtensorflow</artifactId>
                <version>1.10.0</version>
            </dependency>
            <dependency>
                <groupId>org.tensorflow</groupId>
                <artifactId>libtensorflow_jni_gpu</artifactId>
                <version>1.10.0</version>
            </dependency>
			<dependency>
			    <groupId>org.apache.ant</groupId>
			    <artifactId>ant-compress</artifactId>
			    <version>1.5</version>
			</dependency>
            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>1.8</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/gov.nist.math/jama -->
            <dependency>
                <groupId>gov.nist.math</groupId>
                <artifactId>jama</artifactId>
                <version>1.0.3</version>
            </dependency>
			<!--
			<dependency>
				<groupId>jama</groupId>
				<artifactId>jama</artifactId>
				<version>1.0.3</version>
			</dependency>
			-->
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.6</version>
			</dependency>
			<dependency>
				<groupId>ome</groupId>
				<artifactId>loci_tools</artifactId>
				<version>6.1.0</version>
			</dependency>
			<dependency>
			  <groupId>com.drewnoakes</groupId>
			  <artifactId>metadata-extractor</artifactId>
			  <version>2.11.0</version>
			  <type>java-source</type>
			</dependency>
			
		</dependencies>

	<build>
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
			</resource>
			<resource>
				<directory>${project.build.sourceDirectory}</directory>
			</resource>
<!-- trying to copy deep classes to top for the imageJ to see as plugins-->
<!-- 
		    <resource>
		      <filtering>true</filtering>
		      <directory>${basedir}/target/classes/com/elphel/imagej/jp4</directory>
		      <targetPath>${basedir}/target/classes</targetPath>
		      <includes>
		        <include>JP46_Reader_camera.class</include>
		      </includes>
		    </resource>
 -->			
		</resources>
		<testResources>
			<testResource>
				<directory>${basedir}/src/test/resources</directory>
			</testResource>
			<testResource>
				<directory>${project.build.testSourceDirectory}</directory>
			</testResource>
		</testResources>
		<pluginManagement>
		    <plugins>
            <plugin>
                <groupId>org.eclipse.m2e</groupId>
                <artifactId>lifecycle-mapping</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <lifecycleMappingMetadata>
                        <pluginExecutions>
                            <pluginExecution>
                                <pluginExecutionFilter>
                                    <groupId>org.codehaus.mojo</groupId>
                                    <artifactId>aspectj-maven-plugin</artifactId>
                                    <versionRange>[1.0,)</versionRange>
                                    <goals>
                                        <goal>test-compile</goal>
                                        <goal>compile</goal>
                                    </goals>
                                </pluginExecutionFilter>
                                <action>
                                    <execute />
                                </action>
                            </pluginExecution>
                            <pluginExecution>
                            	<pluginExecutionFilter>
                            		<groupId>
                            			org.apache.maven.plugins
                            		</groupId>
                            		<artifactId>
                            			maven-plugin-plugin
                            		</artifactId>
                            		<versionRange>[3.3,)</versionRange>
                            		<goals>
                            			<goal>descriptor</goal>
                            		</goals>
                            	</pluginExecutionFilter>
                            	<action>
                            		<ignore></ignore>
                            	</action>
                            </pluginExecution>
                        </pluginExecutions>
                    </lifecycleMappingMetadata>
                </configuration>
            </plugin>

			   <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
                                <version>1.3.2</version><!--$NO-MVN-MAN-VER$-->
				<executions>
					<execution>
                                                <phase>package</phase>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
<!-- 					<mainClass>Aberration_Calibration</mainClass>  -->
					<mainClass>Eyesis_Correction</mainClass>
				</configuration>
			</plugin>
 			   <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
                                    <execution>
                                    <phase>validate</phase>
                                    <goals>
                                        <goal>create</goal>
                                    </goals>
                                    </execution>
				</executions>
				<configuration>
                                    <doCheck>true</doCheck>
                                    <doUpdate>true</doUpdate>
                                    <format>Build {0,date,yyyy-MM-dd} {0,time,HH:MM:SS} on host {1}</format>
                                    <items>
                                        <item>timestamp</item>
<!--                                         <item>foxel-MRHM7AP</item>  -->
                                    </items>
				</configuration>
                        </plugin>
		    </plugins>
        </pluginManagement>

	</build>

	<developers>
		<developer>
			<id>AndreyFilippov</id>
			<name>Andrey Filippov</name>
			<email>andrey@elphel.com</email>
			<url>http://blog.elphel.com/andrey</url>
			<organization>Elphel, Inc.</organization>
			<organizationUrl>http://www3.elphel.com</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>-6</timezone>
		</developer>
	</developers>

	<repositories>
		<!-- NB: for project parent -->
		<repository>
			<id>imagej.public</id>
			<url>http://maven.imagej.net/content/groups/public</url>
		</repository>
		<repository>
			<id>elphel.imagej-elphel</id>
			<url>https://github.com/Elphel/imagej-elphel</url>
		</repository>
		<repository>
			<id>other</id>
			<url>http://mirror.elphel.com/maven-dependencies</url>
		</repository>
	</repositories>

	<scm>
		<connection>scm:git:git://git.elphel.com/Elphel/imagej-elphel</connection>
		<developerConnection>scm:git:https://git.elphel.com/Elphel/imagej-elphel</developerConnection>
		<tag>HEAD</tag>
		<url>https://git.elphel.com/Elphel/imagej-elphel</url>
	</scm>

	<packaging>maven-plugin</packaging>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                 <version>2.14</version>
                <configuration>
                    <configLocation>config/sun_checks.xml</configLocation>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
</project>
