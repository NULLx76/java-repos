<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.entitypedia.games</groupId>
        <artifactId>entitypedia-games-parent</artifactId>
        <version>14</version>
    </parent>

    <artifactId>entitypedia-quanda</artifactId>
    <packaging>war</packaging>
    <version>1.0.1-SNAPSHOT</version>

    <name>Entitypedia Quanda</name>
    <description>Entitypedia Quanda is a sample small open source game which illustrates very basic Games Framework use.</description>
    <url>https://github.com/EntitypediaGames/quanda</url>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://github.com/EntitypediaGames/quanda/blob/master/LICENSE</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <gameframework.version>1.0.13</gameframework.version>
        <database.name>t_quanda</database.name>
    </properties>

    <scm>
        <connection>scm:git:https://github.com/EntitypediaGames/quanda.git</connection>
        <developerConnection>scm:git:git@github.com:EntitypediaGames/quanda.git</developerConnection>
        <url>https://github.com/EntitypediaGames/quanda</url>
      <tag>HEAD</tag>
  </scm>

    <issueManagement>
        <system>Github</system>
        <url>https://github.com/EntitypediaGames/quanda/issues</url>
    </issueManagement>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>entitypedia-games-common</artifactId>
            <version>1.4.19</version>
        </dependency>

        <!--index used in build, keep on the second place (index 1)-->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>entitypedia-quanda-common</artifactId>
            <version>1.0.0</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>entitypedia-games-common-model</artifactId>
            <version>1.0.14</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>entitypedia-games-framework-common</artifactId>
            <version>1.0.15</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>entitypedia-games-framework-resttemplate</artifactId>
            <version>1.0.6</version>
        </dependency>

        <dependency>
            <groupId>org.entitypedia.games</groupId>
            <artifactId>entitypedia-quanda-client</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>com.jolbox</groupId>
            <artifactId>bonecp</artifactId>
            <version>${bonecp.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.jolbox</groupId>
            <artifactId>bonecp-spring</artifactId>
            <version>${bonecp.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>${ehcache.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- spring-security-oauth dep -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commonscodec.version}</version>
        </dependency>

        <!-- spring oauth -->
        <dependency>
            <groupId>org.springframework.security.oauth</groupId>
            <artifactId>spring-security-oauth</artifactId>
            <version>${spring.security.oauth.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-aspects</artifactId>
        </dependency>

        <!-- spring dependencies -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.aspectj</groupId>
                    <artifactId>aspectjweaver</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>

        <!--aspectj-->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
        </dependency>

        <!-- hibernate dependencies -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>${hibernate.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>net.sf.ehcache</groupId>
                    <artifactId>ehcache-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-testing</artifactId>
            <version>${hibernate.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>net.sf.ehcache</groupId>
                    <artifactId>ehcache-core</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>

        <!-- jackson JSON dependencies -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-hibernate4</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${pgsql.version}</version>
        </dependency>

        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>${javassist.version}</version>
        </dependency>

        <!-- servlets dependencies -->
        <dependency>
            <groupId>org.eclipse.jetty.aggregate</groupId>
            <artifactId>jetty-all-server</artifactId>
            <version>8.1.16.v20140903</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <!-- higher needs higher J2EE spec support from Spring -->
            <version>4.3.1.Final</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>6.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- test deps -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
<!--
                some unit tests need to override beans in contexts with mocks
                which leads to Spring Test reloading contexts and caching.
                this breaks EhCache (multiple instances in the same VM).
                Substituting EhCache with CachingRegionFactory
                breaks TestLayoutAPI with a weird No Session found bug (appearing only in that configuration).
                The same happens with using SingletonEhCacheRegionFactory.
                Therefore overhead of forking without reuse.
-->
                <configuration>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                    <argLine>-Xmx2048m -XX:MaxPermSize=256m</argLine>
                    <useManifestOnlyJar>false</useManifestOnlyJar>
                </configuration>
            </plugin>

            <plugin>
                <!-- for running debug configuration locally -->
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <path>/quanda</path>
                    <port>9638</port>
                    <httpsPort>9639</httpsPort>
                    <keystoreFile>${project.basedir}/certificates/server.jks</keystoreFile>
                    <keystorePass>password</keystorePass>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>8.1.16.v20140903</version>
                <configuration>
                    <jvmArgs>-Xmx2000m -Xmn512m -XX:MaxPermSize=256m</jvmArgs>
                    <scanIntervalSeconds>3</scanIntervalSeconds>
                    <stopPort>9631</stopPort>
                    <stopKey>STOP</stopKey>
                    <connectors>
                        <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                            <port>9638</port>
                            <confidentialPort>9639</confidentialPort>
                        </connector>
                        <connector implementation="org.eclipse.jetty.server.ssl.SslSelectChannelConnector">
                            <port>9639</port>
                            <keystore>certificates/server.jks</keystore>
                            <password>password</password>
                            <keyPassword>password</keyPassword>
                            <truststore>certificates/server.jks</truststore>
                            <trustPassword>password</trustPassword>
                            <wantClientAuth>false</wantClientAuth>
                            <needClientAuth>false</needClientAuth>
                        </connector>
                    </connectors>
                    <webAppConfig>
                        <contextPath>/quanda</contextPath>
                    </webAppConfig>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <configuration>
                    <encoding>utf8</encoding>
                    <Xlint>ignore</Xlint>
                    <verbose>false</verbose>
                    <showWeaveInfo>false</showWeaveInfo>
                    <source>${project.build.source}</source>
                    <target>${project.build.target}</target>
                    <complianceLevel>${project.build.source}</complianceLevel>
                    <aspectLibraries>
                        <aspectLibrary>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-aspects</artifactId>
                        </aspectLibrary>
                        <aspectLibrary>
                            <groupId>org.springframework.security</groupId>
                            <artifactId>spring-security-aspects</artifactId>
                        </aspectLibrary>
                        <aspectLibrary>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>entitypedia-games-common</artifactId>
                        </aspectLibrary>
                    </aspectLibraries>
                    <weaveDependencies>
                        <weaveDependency>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>entitypedia-games-common-model</artifactId>
                        </weaveDependency>
                        <weaveDependency>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>entitypedia-quanda-common</artifactId>
                        </weaveDependency>
                    </weaveDependencies>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>       <!-- use this goal to weave all your main classes -->
                            <!--<goal>test-compile</goal>-->  <!-- use this goal to weave all your test classes -->
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>tests</id>
            <activation>
                <property>
                    <name>!skipTests</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>

                        <dependencies>
                            <!-- specify the dependent jdbc driver here -->
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${pgsql.version}</version>
                            </dependency>
                        </dependencies>

                        <!-- common configuration shared by all executions -->
                        <configuration>
                            <driver>org.postgresql.Driver</driver>
                            <!--<username>postgres</username>-->
                            <!--<password>password</password>-->
                            <!-- You can comment out username/password configurations and
                                 have maven to look them up in your settings.xml using ${settingsKey}
                            -->
                            <!--<settingsKey>sensibleKey</settingsKey>-->
                            <!--all executions are ignored if -Dmaven.test.skip=true-->
                            <skip>${maven.test.skip}</skip>
                            <skip>${skipTests}</skip>
                        </configuration>

                        <executions>
                            <execution>
                                <id>drop-db-activity</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <!-- need another database to drop the targeted one -->
                                    <url>jdbc:postgresql://localhost:5432/postgres</url>
                                    <autocommit>true</autocommit>
                                    <settingsKey>postgrespostgres</settingsKey>
                                    <sqlCommand>SELECT pg_terminate_backend(pg_stat_activity.procpid) FROM pg_stat_activity WHERE pg_stat_activity.datname = '${database.name}'</sqlCommand>

                                    <!-- ignore error when database is not available -->
                                    <onError>continue</onError>
                                </configuration>
                            </execution>

                            <execution>
                                <id>drop-db-before-test-if-any</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <!-- need another database to drop the targeted one -->
                                    <url>jdbc:postgresql://localhost:5432/postgres</url>
                                    <autocommit>true</autocommit>
                                    <settingsKey>postgrespostgres</settingsKey>
                                    <sqlCommand>DROP DATABASE IF EXISTS ${database.name}</sqlCommand>
                                    <!-- ignore error when database is not available -->
                                    <onError>continue</onError>
                                </configuration>
                            </execution>

                            <execution>
                                <id>create-db</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <url>jdbc:postgresql://localhost:5432/postgres</url>
                                    <autocommit>true</autocommit>
                                    <settingsKey>postgrespostgres</settingsKey>
                                    <sqlCommand>CREATE DATABASE ${database.name} WITH OWNER = quanda ENCODING = 'UTF8'</sqlCommand>
                                </configuration>
                            </execution>

                            <execution>
                                <id>create-schema</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <url>jdbc:postgresql://localhost:5432/${database.name}</url>
                                    <autocommit>true</autocommit>
                                    <settingsKey>postgresquanda</settingsKey>
                                    <orderFile>ascending</orderFile>
                                    <fileset>
                                        <basedir>${basedir}/src/main/sql</basedir>
                                        <includes>
                                            <include>s*.sql</include>
                                        </includes>
                                    </fileset>
                                </configuration>
                            </execution>

                            <execution>
                                <id>create-data</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <url>jdbc:postgresql://localhost:5432/${database.name}</url>
                                    <autocommit>true</autocommit>
                                    <settingsKey>postgresquanda</settingsKey>
                                    <srcFiles>
                                        <srcFile>src/main/sql/test-data.sql</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>integration-tests</id>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-jetty</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <scanIntervalSeconds>0</scanIntervalSeconds>
                                    <daemon>true</daemon>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-jetty</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
<!--
                    <plugin>
                        <groupId>org.apache.tomcat.maven</groupId>
                        <artifactId>tomcat7-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-tomcat</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <fork>true</fork>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-jetty</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>shutdown</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
-->

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <!--<argLine>${jacoco.agent.argLine}</argLine>-->
                            <useManifestOnlyJar>false</useManifestOnlyJar>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

<!--
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <configuration>
                            <propertyName>jacoco.agent.argLine</propertyName> &lt;!&ndash; default: argLine &ndash;&gt;
                            <includes>
                                <include>org/entitypedia/games/**</include>
                            </includes>
                            <destFile>${project.build.directory}/jacoco-integration.exec</destFile> &lt;!&ndash; agent &ndash;&gt;
                            <dataFile>${project.build.directory}/jacoco-integration.exec</dataFile> &lt;!&ndash; report &ndash;&gt;
                        </configuration>
                        <executions>
                            <execution>
                                <id>agent</id>
                                <goals><goal>prepare-agent</goal></goals>
                            </execution>
                            <execution>
                                <id>report</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
-->
                </plugins>
            </build>
        </profile>
        <profile>
            <id>release</id>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-release-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources-release</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>

                        <dependencies>
                            <!-- specify the dependent jdbc driver here -->
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${pgsql.version}</version>
                            </dependency>
                        </dependencies>

                        <!-- common configuration shared by all executions -->
                        <configuration>
                            <!--all executions are ignored-->
                            <skip>true</skip>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-war</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>exploded</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-war</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>war</goal>
                                </goals>
                                <configuration>
                                    <warSourceDirectory>${project.build.directory}/${project.build.finalName}</warSourceDirectory>
                                    <packagingExcludes>resources/test/**,WEB-INF/classes/builddef.lst</packagingExcludes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- for deploying release configuration locally -->
                    <plugin>
                        <groupId>org.apache.tomcat.maven</groupId>
                        <artifactId>tomcat7-maven-plugin</artifactId>
                        <version>2.2</version>
                        <configuration>
                            <server>local_tomcat</server>
                            <url>http://localhost/manager/text</url>
                            <path>/quanda</path>
                            <tag>${project.version}</tag>
                            <charset>UTF-8</charset>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>javadoc</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <doclet>org.entitypedia.games.sdoclet.SpringMVCDoclet</doclet>
                            <docletArtifact>
                                <groupId>org.entitypedia.games</groupId>
                                <artifactId>springmvc-doclet</artifactId>
                                <version>1.0.1</version>
                            </docletArtifact>
                            <!-- For the project-reports page-->
                            <name>Swagger Spring MVC Doclet</name>
                            <description>Swagger documentation.</description>
                            <outputDirectory>${project.build.directory}/${project.build.finalName}/apidocs</outputDirectory>
                            <reportOutputDirectory>${project.build.directory}/${project.build.finalName}/apidocs</reportOutputDirectory>
                            <show>private</show>
                            <charset>${project.build.sourceEncoding}</charset>
                            <includeDependencySources>true</includeDependencySources>
                            <includeTransitiveDependencySources>true</includeTransitiveDependencySources>
                            <dependencySourceIncludes>
                                <dependencySourceInclude>org.entitypedia.games:*</dependencySourceInclude>
                            </dependencySourceIncludes>
                            <subpackages>org.entitypedia.games.quanda</subpackages>
                            <verbose>false</verbose>
                            <debug>false</debug>

                            <additionalparam>
                                -apiBasePath /quanda/webapi/
                                -docBasePath /quanda/apidocs/
                                -apiVersion ${project.dependencies[1].version}
                                -apiPackage org.entitypedia.games.quanda.common.api
                                -controllerPackage org.entitypedia.games.quanda.api.controller
                            </additionalparam>
                            <useStandardDocletOptions>false</useStandardDocletOptions>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>