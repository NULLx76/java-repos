<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- <parent> <groupId>io.hawt</groupId> <artifactId>project</artifactId> 
		<version>1.5-SNAPSHOT</version> </parent> -->

	<parent>
		<groupId>io.hawt</groupId>
		<artifactId>project</artifactId>
		<version>1.2-redhat-379</version>
	</parent>

	<groupId>by.st.Examples</groupId>
	<artifactId>Example1</artifactId>
	<packaging>war</packaging>
	<!-- <version>1.2-redhat-379</version> -->
	<name>project</name>
	<description>ST :: Examples :: Example1</description>
	<url>http://st.by/</url>
	<properties>
		<fabric8.profile>by.st-Examples-${project.artifactId}</fabric8.profile>
		<!--<fabric8.profile>${project.groupId}-${project.artifactId}</fabric8.profile> -->
		<!-- filtered plugin properties -->
		<!--<plugin-name>${project.artifactId}</plugin-name> -->
		<plugin-name>Example1</plugin-name>
		<plugin-context>/Example1</plugin-context>
		<plugin-domain />

		<fuse.osgi.import>
			javax.servlet,
			javax.security.auth,
			*;resolution:=optional
		</fuse.osgi.import>

		<gson.version>2.2.4</gson.version>
		<!--parent -->


		<!-- Explicitly declaring the source encoding eliminates the following 
			message: [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<version.compiler.plugin>2.3.1</version.compiler.plugin>
		<skipTests>true</skipTests>
		<!-- maven-compiler-plugin -->
		<!-- <maven.compiler.target>1.6</maven.compiler.target> <maven.compiler.source>1.6</maven.compiler.source> -->
		<version.maven-surefire-plugin>2.15</version.maven-surefire-plugin>
		<version.maven-bundle-plugin>2.3.4</version.maven-bundle-plugin>
		<!-- the version of the JBoss Fuse BOM, defining all the dependency versions -->
		<jboss.fuse.bom.version>6.1.0.redhat-379</jboss.fuse.bom.version>
		<fabric.version>1.0.0.redhat-379</fabric.version>
		<cxf-version-range>[2.7,3)</cxf-version-range>


		<servlet-api-version>2.5</servlet-api-version>
		<!-- <war-plugin-version>2.1.1</war-plugin-version> -->
		<!--<maven-bundle-plugin-version>2.3.7</maven-bundle-plugin-version> -->
		<maven-resources-plugin-version>2.6</maven-resources-plugin-version>
		<maven-antrun-plugin-version>1.7</maven-antrun-plugin-version>
		<slf4j-version>1.7.12</slf4j-version>
	</properties>
	<repositories>
		<repository>
			<id>repo.fusesource.com</id>
			<name>repo.fusesource.com</name>
			<url>http://repo.fusesource.com/nexus/content/groups/public</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>io.hawt</groupId>
			<artifactId>hawtio-plugin-mbean</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- Google GSon -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson.version}</version>
		</dependency>

		<!-- servlet API is provided by the container -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet-api-version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j-version}</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources/js</directory>
				<targetPath>${webapp-outdir}/plugin/js/</targetPath>
				<filtering>true</filtering>
				<includes>
					<include>**/*Context.js</include>
				</includes>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.7,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- <version>2.1</version> -->
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven-antrun-plugin-version}</version>
				<executions>
					<execution>
						<id>generate-sources</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo>Building plugin javascript file list</echo>
								<fileset id="javascript-files" dir="${basedir}/src/main/webapp">
									<!-- Ensure that socialPlugin.js is included first as it's our entrypoint -->
									<include name="plugin/js/Context.js" />
									<include name="plugin/js/Plugin.js" />
									<include name="**/*.js" />
								</fileset>
								<pathconvert pathsep="," dirsep="/" property="plugin-scripts">
									<fileset refid="javascript-files" />
									<map from="${basedir}/src/main/webapp/" to="" />
								</pathconvert>
								<echo>Files: ${plugin-scripts}</echo>
								<echo>Copying log4j.properties</echo>
								<copy file="src/main/resources/log4j.properties" todir="target/classes" />
							</target>

							<exportAntProperties>true</exportAntProperties>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin-version}</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>resources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>${maven-bundle-plugin-version}</version>
				<executions>
					<execution>
						<id>bundle-manifest</id>
						<phase>process-classes</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<manifestLocation>${webapp-outdir}/META-INF</manifestLocation>
					<supportedProjectTypes>
						<supportedProjectType>jar</supportedProjectType>
						<supportedProjectType>bundle</supportedProjectType>
						<supportedProjectType>war</supportedProjectType>
					</supportedProjectTypes>
					<instructions>
						<Webapp-Context>${plugin-context}</Webapp-Context>
						<Web-ContextPath>${plugin-context}</Web-ContextPath>

						<Embed-Directory>WEB-INF/lib</Embed-Directory>
						<Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>
						<Embed-Transitive>true</Embed-Transitive>

						<Import-Package>${fuse.osgi.import}</Import-Package>

						<Bundle-ClassPath>.,WEB-INF/classes</Bundle-ClassPath>

						<Bundle-Name>${project.description}</Bundle-Name>
						<Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
						<Implementation-Title>${project.groupId}</Implementation-Title>
						<Implementation-Version>${project.version}</Implementation-Version>
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<!-- <version>${war-plugin-version}</version> -->
				<configuration>
					<outputFileNameMapping>@{artifactId}@-@{baseVersion}@@{dashClassifier?}@.@{extension}@
					</outputFileNameMapping>
					<packagingExcludes>**/classes/OSGI-INF/**</packagingExcludes>
					<packagingExcludes>WEB-INF/web.xml</packagingExcludes>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<archive>
						<manifestFile>${webapp-outdir}/META-INF/MANIFEST.MF</manifestFile>
					</archive>
					<webResources>
						<resource>
							<filtering>true</filtering>
							<directory>src/main/resources</directory>
							<includes>
								<include>**/*.*</include>
							</includes>
							<excludes>
								<exclude>log4j.properties</exclude>
								<exclude>**/*Context.js</exclude>
							</excludes>
						</resource>
						<resource>
							<filtering>true</filtering>
							<directory>src/main/webapp</directory>
							<includes>
								<include>**/*Context.js</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
				<version>${fabric.version}</version>
				<configuration>
					<featureRepos>mvn:org.apache.cxf.karaf/apache-cxf/${version:cxf}/xml/features</featureRepos>
					<jolokiaUrl>http://stws2103:8181/jolokia</jolokiaUrl>
					<profileVersion>1.2.5</profileVersion>
					<upload>false</upload>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>