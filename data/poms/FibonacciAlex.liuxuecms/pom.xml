<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.liuxue</groupId>
  <artifactId>cms</artifactId>
  <packaging>war</packaging>
  <version>0.0.1</version>
  <name>LiuXue CMS</name>
  <url></url>


	<!-- 系统常量 start -->
  <properties>
  	<webapp.port>8080</webapp.port><!-- 如果交给tomcat启动，后面三个参数会不生效 -->
  	<webapp.stopPort>9090</webapp.stopPort>
  	<webapp.path>/</webapp.path>
  	<!-- 指定编码方式 -->
  	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  	<!-- jkd版本 -->
  	<jdk.version>1.8</jdk.version>
	  <!-- <jdk.version>1.7</jdk.version> -->
  	<!-- lib版本 -->  	
  	<spring.version>4.0.6.RELEASE</spring.version>
  	<mybatis.version>3.2.2</mybatis.version>
    <mybatis.spring.version>1.2.2</mybatis.spring.version>
  	<jackson.version>1.9.13</jackson.version>
    <druid.version>1.0.5</druid.version>
  </properties>
	<!-- 系统常量 end -->



	<!-- 下面为系统依赖包 -->
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
    	<groupId>javax.servlet</groupId>
		<artifactId>javax.servlet-api</artifactId>
		<version>3.1.0</version>
    </dependency>
    
    
     <!-- springframe start -->
     <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-core</artifactId>
         <version>${spring.version}</version>
     </dependency>

     <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-web</artifactId>
         <version>${spring.version}</version>
     </dependency>

     <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-oxm</artifactId>
         <version>${spring.version}</version>
     </dependency>

     <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-tx</artifactId>
         <version>${spring.version}</version>
     </dependency>

     <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-jdbc</artifactId>
         <version>${spring.version}</version>
         
     </dependency>

     <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-webmvc</artifactId>
         <version>${spring.version}</version>
     </dependency>

     <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-aop</artifactId>
         <version>${spring.version}</version>
     </dependency>

     <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context-support</artifactId>
         <version>${spring.version}</version>
     </dependency>

     <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-test</artifactId>
         <version>${spring.version}</version>
     </dependency>

	  <dependency>
		  <groupId>org.aspectj</groupId>
		  <artifactId>aspectjweaver</artifactId>
		  <version>1.6.10</version>
	  </dependency>
	  <!-- springframe end -->
    
        <!-- mybatis start-->
      <dependency>
          <groupId>org.mybatis</groupId>
          <artifactId>mybatis</artifactId>
          <version>${mybatis.version}</version>
      </dependency>

      <dependency>
          <groupId>org.mybatis</groupId>
          <artifactId>mybatis-spring</artifactId>
          <version>${mybatis.spring.version}</version>
      </dependency>
        <!--mybatis end-->
    
    
    	<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.25</version>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.1</version>
		</dependency>
		
		<!-- 缩略图生成插件 -->
		<dependency>
			<groupId>net.coobird</groupId>
			<artifactId>thumbnailator</artifactId>
			<version>0.4.7</version>
		</dependency>
		
		<!-- 文件上传插件 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3</version>
		</dependency>
		
		<!-- jackson -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-lgpl</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-lgpl</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		
		<!-- 验证 -->
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>1.4.0</version>
		</dependency>
		
		<!-- 验证码插件 -->
		<dependency>
			<groupId>com.github.axet</groupId>
			<artifactId>kaptcha</artifactId>
			<version>0.0.8</version>
		</dependency>
		
		<!-- DruidDataSource -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid.version}</version>
        </dependency>
  </dependencies>


 <!--  <build>
    <finalName>cms</finalName>发布前执行时，生成cms.war文件
    <defaultGoal>compile</defaultGoal>
    <plugins>
    	<plugin>
    		指定maven编译插件内容
    		<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>指定编码格式
					<source>${jdk.version}</source>指定源代码jdk版本
					<target>${jdk.version}</target>需要生成的目标class文件的编译版本
					一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中需要没有使用低版本jdk中不支持的语法)，会存在target不同于source的情况
					
     				可选项
					<meminitial>512m</meminitial>
					<maxmem>1024m</maxmem>
					fork is enable,用于明确表示编译版本配置的可用 
					<fork>true</fork>
					这个选项用来传递编译器自身不包含但是却支持的参数选项
					<compilerArgument></compilerArgument>
				</configuration>
    	</plugin>
    	
    	
    	<plugin>
    	指定启动容器
    		<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-maven-plugin</artifactId>
			<version>8.1.13.v20130916</version>
			<configuration>
				<webAppConfig>
					<contextPath>${webapp.path}</contextPath>
					<defaultsDescriptor>webdefault.xml</defaultsDescriptor>jetty在加载web.xml前加载的默认文件，如果没有，就会使用jetty.jar内默认文件
				</webAppConfig>
				<connectors>
					<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
						<port>${webapp.port}</port>
						<maxIdleTime>60000</maxIdleTime>
					</connector>
				</connectors>
				<reload>automatic</reload>
				<scanIntervalSeconds>0</scanIntervalSeconds>
				stopPort>${webapp.stopPort}</stopPort
				<systemProperties>
					<systemProperty>
						<name>org.mortbay.util.URI.charset</name>
						<value>UTF-8</value>
					</systemProperty>
				</systemProperties>
				<jvmArgs>-Xmx512m -XX:PermSize=128m -XX:MaxPermSize=256m
					-Dfile.encoding=UTF-8</jvmArgs>
			</configuration>
			<executions>
				<execution>
					<id>start-jetty</id>
					<phase>pre-integration-test</phase>
					<goals>
						<goal>run</goal>
					</goals>
					<configuration>
						<scanIntervalSeconds>0</scanIntervalSeconds>
						<daemon>true</daemon>
					</configuration>
				</execution>
				<execution>
					<id>stop-jetty</id>
					<phase>post-integration-test</phase>
					<goals>
						<goal>stop</goal>
					</goals>
				</execution>
			</executions>
    	</plugin>
    </plugins>
    
    进行资源copy
    <resources>
		<resource>
			<directory>src/main/java</directory>
			<includes>
				<include>**/*.xml</include>
			</includes>
		</resource>
		<resource>
			<directory>src/main/resources</directory>
			<includes>
				<include>*.xml</include>
				<include>*.properties</include>
				<include>applicationContext.xml</include>
				<include>log4j.properties</include>
				<include>application.properties</include>
			</includes>
		</resource>
	</resources>
    
  </build> -->
</project>
