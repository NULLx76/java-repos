<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.Proto1</groupId>
	<artifactId>Proto1</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<properties>
		<javaee7.web.spec.version>1.0.1.Final</javaee7.web.spec.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.7</maven.compiler.source>
		<version.picketlink.javaee.bom>2.6.1.Final</version.picketlink.javaee.bom>
		<maven.compiler.target>1.7</maven.compiler.target>
		<version.picketlink>2.6.1.Final</version.picketlink>
		<infinispan.version>6.0.2.Final</infinispan.version>
		<arquillian.version>1.1.5.Final</arquillian.version>
		<wildfly.version>8.1.0.Final</wildfly.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-web-7.0</artifactId>
				<version>${javaee7.web.spec.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- <dependency> <groupId>org.jboss.spec</groupId> <artifactId>jboss-javaee-6.0</artifactId> 
				<version>3.0.2.Final</version> <type>pom</type> <scope>import</scope> </dependency> -->
			<dependency>
				<groupId>org.picketlink</groupId>
				<artifactId>picketlink-javaee-6.0</artifactId>
				<version>${version.picketlink.javaee.bom}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>${arquillian.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>

		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.7.1</version>
		</dependency>


		<!-- Infinispan -->
		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-core</artifactId>
			<version>${infinispan.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-commons</artifactId>
			<version>${infinispan.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-tree</artifactId>
			<version>${infinispan.version}</version>
		</dependency>

		<!-- Import the PicketLink API, we deploy this as library with the application, 
			and can compile against it -->
		<dependency>
			<groupId>org.picketlink</groupId>
			<artifactId>picketlink-api</artifactId>
		</dependency>

		<!-- Import the PicketLink implementation, we deploy this as library with 
			the application, but can't compile against it -->
		<dependency>
			<groupId>org.picketlink</groupId>
			<artifactId>picketlink-impl</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Import the PicketLink IDM API, we deploy this as library with the 
			application, and can compile against it -->
		<dependency>
			<groupId>org.picketlink</groupId>
			<artifactId>picketlink-idm-api</artifactId>
		</dependency>

		<!-- Import the PicketLink IDM API, we deploy this as library with the 
			application, and can compile against it -->
		<dependency>
			<groupId>org.picketlink</groupId>
			<artifactId>picketlink-idm-impl</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.picketlink</groupId>
			<artifactId>picketlink-social</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.google.code.guice</groupId>
					<artifactId>guice</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.picketlink</groupId>
					<artifactId>picketlink-federation</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.batch</groupId>
			<artifactId>jboss-batch-api_1.0_spec</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.websocket</groupId>
			<artifactId>javax.websocket-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.servlet</groupId>
			<artifactId>jboss-servlet-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.servlet</groupId>
			<artifactId>jboss-servlet-api_3.0_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!--<dependency> <groupId>org.jboss.spec.javax.ws.rs</groupId> <artifactId>jboss-jaxrs-api_1.1_spec</artifactId> 
			<scope>provided</scope> </dependency> -->
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.0</version>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.1.3.Final</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>

		<!--<dependency> <groupId>org.jboss.arquillian.container</groupId> <artifactId>arquillian-weld-ee-embedded-1.1</artifactId> 
			<version>1.0.0.CR3</version> <scope>test</scope> </dependency> <dependency> 
			<groupId>org.jboss.weld</groupId> <artifactId>weld-core</artifactId> <version>1.1.5.Final</version> 
			<scope>test</scope> </dependency> -->

		<dependency>
			<groupId>org.wildfly</groupId>
			<artifactId>wildfly-arquillian-container-managed</artifactId>
			<version>${wildfly.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>3.0.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.6.4</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
			<scope>test</scope>
			<version>2.0.0</version>
		</dependency>

	</dependencies>

	<profiles>
		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when 
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app 
				will need. -->
			<!-- By default that is to put the resulting archive into the 'deployments' 
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<build>
				<finalName>daisyfetch</finalName>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.3</version>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<outputDirectory>deployments</outputDirectory>
							<warName>ROOT</warName>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<finalName>Proto1</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
			</plugin>
		</plugins>
	</build>
</project>
