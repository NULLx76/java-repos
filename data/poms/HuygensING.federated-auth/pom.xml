<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>nl.knaw.huygens</groupId>
    <artifactId>security</artifactId>
    <version>2.2.2.4</version>
    <name>Security</name>
    <packaging>pom</packaging>
    <description>Contains all the classes that have something to do with securing a Jersey rest service.</description>
    <inceptionYear>2013</inceptionYear>
    <organization>
            <name>Huygens ING</name>
            <url>http://www.huygens.knaw.nl</url>
    </organization>

    <prerequisites>
        <maven>3.0</maven>
    </prerequisites>

    <build>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>${wagon-ssh.version}</version>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler.version}</version>
                <configuration>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc.version}</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>external.atlassian.jgitflow</groupId>
                <artifactId>jgitflow-maven-plugin</artifactId>
                <version>${jgitflow.version}</version>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.1</version>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${license-plugin.version}</version>
                <configuration>
                    <licenseName>gpl_v3</licenseName>
                    <sectionDelimiter>=======</sectionDelimiter>
                    <canUpdateCopyright>true</canUpdateCopyright>
                    <canUpdateDescription>true</canUpdateDescription>
                </configuration>
            </plugin>
        </plugins>

        <resources>
            <!-- todo: check if this potentially harms files in 'certificates' subdirectory
                 We would not want arbitrary substitutions in certificate files
             -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

    </build>

    <dependencies>
        <!-- ## Main libraries ## -->

        <!-- Google libraries -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>3.0</version>
        </dependency>

        <!-- Logging: SLF4J API + Log4J implementation -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <!-- Faster XML -->
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <version>${com.fasterxml.jackson-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
            <version>${com.fasterxml.jackson-version}</version>
        </dependency>

        <!-- Jersey -->
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-servlet</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-guice</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <!-- Various annotations (JSR 250) -->
        <dependency>
            <groupId>javax.annotation</groupId>
            <!-- <artifactId>jsr250-api</artifactId> -->
            <artifactId>javax.annotation-api</artifactId>
            <version>${annotation-api.version}</version>
        </dependency>

        <!-- Servlet spec, provided by Tomcat -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- OpenSAML support -->
        <dependency>
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml</artifactId>
            <version>${opensaml.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Classloader leak prevention -->
        <dependency>
            <groupId>se.jiderhamn</groupId>
            <artifactId>classloader-leak-prevention</artifactId>
            <version>${classloader-leak-prevention.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- ## End of main libraries ## -->

        <!-- ## Test libraries ## -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>hamcrest-core</artifactId>
                    <groupId>org.hamcrest</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Mockito mocking framework -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>hamcrest-core</artifactId>
                    <groupId>org.hamcrest</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- ## End of test libraries ## -->
    </dependencies>

    <distributionManagement>
        <repository>
            <id>maven.huygens</id>
            <name>Huygens Maven Repository</name>
            <url>${huygens-repo}</url>
        </repository>
        <!-- use the following if you ARE using a snapshot version. -->
        <snapshotRepository>
            <id>maven.huygens</id>
            <name>Huygens Maven Repository</name>
            <url>${huygens-repo}</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <!-- Setup timestamp for substitution in build.properties -->
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>

        <!-- JDK source and target compliancy level -->
        <jdk.version>1.6</jdk.version>

        <!-- Everything UTF-8 please -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- library / plugin versions -->
        <annotation-api.version>1.2</annotation-api.version>
        <classloader-leak-prevention.version>1.8.1</classloader-leak-prevention.version>
        <com.fasterxml.jackson-version>2.3.0</com.fasterxml.jackson-version>
        <guava.version>15.0</guava.version>
        <guice.version>3.0</guice.version>
        <hamcrest.version>1.3</hamcrest.version>
        <jersey.version>1.18</jersey.version>
        <jgitflow.version>1.0-m1</jgitflow.version>
        <junit.version>4.11</junit.version>
        <license-plugin.version>1.5</license-plugin.version>
        <log4j.version>1.2.17</log4j.version>
        <maven-compiler.version>3.1</maven-compiler.version>
        <maven-javadoc.version>2.9.1</maven-javadoc.version>
        <maven-source.version>2.2.1</maven-source.version>
        <mockito.version>1.9.5</mockito.version>
        <opensaml.version>2.5.3</opensaml.version>
        <servlet.version>3.0.1</servlet.version>
        <slf4j.version>1.7.5</slf4j.version>
        <wagon-ssh.version>2.2</wagon-ssh.version>
    </properties>

    <modules>
        <module>security-core</module>
        <module>security-client</module>
        <module>security-server</module>
        <module>integration-tests</module>
    </modules>
</project>
