<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.irit.smac</groupId>
	<artifactId>agent-tooling</artifactId>
	<version>0.1</version>
	<name>agent-tooling</name>
	<url>http://maven.apache.org</url>
	<organization>
		<name>IRIT - SMAC Team</name>
		<url>http://irit.fr/-SMAC-team-</url>
	</organization>
	<inceptionYear>2014</inceptionYear>

	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.host.url>http://localhost:9000/</sonar.host.url>
		<additionalparam>-Xdoclint:none</additionalparam>

		<java-version>1.8</java-version>
		<assertj-swing-junit-version>3.1.1</assertj-swing-junit-version>
		<spock-core-version>1.0-groovy-2.4</spock-core-version>
		<cglib-nodep-version>3.2.1</cglib-nodep-version>
		<objenesis-version>2.2</objenesis-version>
		<maven-compiler-plugin-version>3.5.1</maven-compiler-plugin-version>
		<gmavenplus-plugin-version>1.5</gmavenplus-plugin-version>
		<maven-checkstyle-plugin-version>2.17</maven-checkstyle-plugin-version>
		<license-maven-plugin-version>1.7</license-maven-plugin-version>
		<coveralls-maven-plugin-version>4.1.0</coveralls-maven-plugin-version>
		<jacoco-maven-plugin-version>0.7.6.201602180812</jacoco-maven-plugin-version>
		<sonar-maven-plugin-version>2.7</sonar-maven-plugin-version>
		<maven-surefire-plugin-version>2.19.1</maven-surefire-plugin-version>
		<!-- github server corresponds to entry in ~/.m2/settings.xml -->
		<github.global.server>github</github.global.server>
	</properties>

	<packaging>pom</packaging>
	<modules>
		<module>agent-logging</module>
		<module>agent-messaging</module>
		<module>agent-scheduling</module>
		<module>agent-plot</module>
		<module>avt</module>
	</modules>

	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo/releases</url>
		</repository>
	</distributionManagement>

	<dependencies>

		<!-- AssertJ Swing -->
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>${assertj-swing-junit-version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Spock -->
		<!-- Mandatory dependencies for using Spock -->
		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<version>${spock-core-version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Optional dependencies for using Spock -->
		<dependency> <!-- enables mocking of classes (in addition to interfaces) -->
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>${cglib-nodep-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency> <!-- enables mocking of classes without default constructor (together with 
				CGLIB) -->
			<groupId>org.objenesis</groupId>
			<artifactId>objenesis</artifactId>
			<version>${objenesis-version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<pluginManagement>
			<plugins>

				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>license-maven-plugin</artifactId>
										<versionRange>[${license-maven-plugin-version},)</versionRange>
										<goals>
											<goal>update-file-header</goal>
											<goal>update-project-license</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.gmavenplus</groupId>
										<artifactId>gmavenplus-plugin</artifactId>
										<versionRange>[${gmavenplus-plugin-version},)</versionRange>
										<goals>
											<goal>testCompile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin-version}</version>
				<configuration>
					<source>${java-version}</source>
					<target>${java-version}</target>
				</configuration>
			</plugin>

			<!-- Mandatory plugins for using Spock -->
			<plugin>
				<!-- The gmavenplus plugin is used to compile Groovy code. To learn more 
					about this plugin, visit https://github.com/groovy/GMavenPlus/wiki -->
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<version>${gmavenplus-plugin-version}</version>
				<executions>
					<execution>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<testSources>
						<testSource>
							<directory>${project.basedir}/src/test/groovy</directory>
							<includes>
								<include>**/*.groovy</include>
							</includes>
						</testSource>
					</testSources>
				</configuration>
			</plugin>

			<!-- Checkstyle -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin-version}</version>
			</plugin>

			<!-- Handle license files -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${license-maven-plugin-version}</version>
				<configuration>
					<licenseName>lgpl_v3</licenseName>
					<roots>
						<root>src/main/java</root>
					</roots>
					<!-- Break some files otherwise -->
					<addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
				</configuration>
				<executions>
					<execution>
						<id>first</id>
						<goals>
							<goal>update-file-header</goal>
						</goals>
						<phase>process-sources</phase>
					</execution>
					<execution>
						<id>update-license</id>
						<goals>
							<goal>update-project-license</goal>
						</goals>
						<phase>generate-resources</phase>
					</execution>
				</executions>
			</plugin>

			<!-- Coveralls -->
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>${coveralls-maven-plugin-version}</version>
			</plugin>

			<!-- JaCoco -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin-version}</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules />
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- SonarQube -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar-maven-plugin-version}</version>
				<configuration>
					<sonar.sources>src/main/java</sonar.sources>
					<sonar.exclusions>file:**/src/main/java/**/*_.*</sonar.exclusions>
				</configuration>
			</plugin>

			<!-- Only required if default Surefire configuration is not satisfactory -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin-version}</version>
				<configuration>
					<includes>
						<include>**/*Test.class</include>
						<include>**/*Spec.class</include>
					</includes>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${user.dir}/target/mvn-repo/releases</altDeploymentRepository>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.12</version>
				<configuration>
					<message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
					<noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
					<merge>true</merge>
					<outputDirectory>${user.dir}/target/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
					<branch>refs/heads/master</branch>                       <!-- remote branch name -->
					<includes>
						<include>**/*</include>
					</includes>
					<repositoryName>mvn-repo</repositoryName>      <!-- github repo name -->
					<repositoryOwner>IRIT-SMAC</repositoryOwner>    <!-- github username -->
				</configuration>
				<executions>
					<!-- run site-maven-plugin's 'site' target as part of the build's normal 
						'deploy' phase -->
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>
</project>