<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ch.inftec.ju</groupId>
	<artifactId>ju-root</artifactId>
	<version>3.1</version>
	<packaging>pom</packaging>

	<name>JU root</name>
	<description>JU root project that holds the root pom all other JU projects will derive from</description>

	<modules>
		<module>ju-util</module>
		<module>ju-dbutil</module>
		<module>ju-dbutil-test</module>
		<module>ju-testing</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<!-- Shared version number properties -->
		
		<org.springframework.version>3.2.1.RELEASE</org.springframework.version>
		<org.springframework.data.version>1.1.0.RELEASE</org.springframework.data.version>
		<org.springframework.security.version>3.1.3.RELEASE</org.springframework.security.version>
		
		<org.hibernate.version>4.1.6.Final</org.hibernate.version> <!-- Same as in JBoss EAP 6.0.1.GA -->
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- JU dependencies -->
			<!-- XXX Fix version, project.version is relative to the actual project, i.e. it may change
			     if ju-root is the parent of another project with another version, e.g. ju-test... -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>ju-util</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>ju-dbutil</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>ju-testing</artifactId>
				<version>${project.version}</version>
			</dependency>
			
			<!-- General dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.10</version>
			</dependency>
			
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.6.6</version>
			</dependency>
			
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>1.6.6</version>
			</dependency>
			
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.17</version>
			</dependency>
			
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.1</version>
			</dependency>
	
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.1</version>
			</dependency>
			
			<dependency>
				<groupId>net.sf.opencsv</groupId>
				<artifactId>opencsv</artifactId>
				<version>2.0</version>
			</dependency>
			
			<dependency>
				<groupId>net.sourceforge.collections</groupId>
				<artifactId>collections-generic</artifactId>
				<version>4.01</version>
			</dependency>
	
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.1</version>
			</dependency>
			
			<!-- Spring dependencies -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
	
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${org.springframework.security.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${org.springframework.security.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>${org.springframework.data.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			
			<dependency>
				<groupId>commons-dbutils</groupId>
				<artifactId>commons-dbutils</artifactId>
				<version>1.4</version>
			</dependency>
	
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>1.4</version>
			</dependency>
			
			<dependency>
				<groupId>org.dbunit</groupId>
				<artifactId>dbunit</artifactId>
				<version>2.4.8</version>
			</dependency>
			
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derby</artifactId>
				<version>10.8.2.2</version>
			</dependency>
			
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${org.hibernate.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${org.hibernate.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.0-api</artifactId>
				<version>1.0.1.Final</version>
			</dependency>
			
			<!-- Oracle driver -->
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>my-ojdbc6</artifactId>
				<version>11.2.0.3</version>
			</dependency>
			
			<!-- JavaFX dependency so it is imported automatically into Eclipse -->
			<dependency>
				<groupId>javafx</groupId>
				<artifactId>javafx</artifactId>
				<version>2.2</version>
				<systemPath>${java.home}/lib/jfxrt.jar</systemPath>
				<scope>system</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- 
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.collections</groupId>
			<artifactId>collections-generic</artifactId>
			<version>4.01</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
		 -->
		<!-- JavaFX dependency so it is imported automatically into Eclipse 
		<dependency>
			<groupId>javafx</groupId>
			<artifactId>javafx</artifactId>
			<version>2.2</version>
			<systemPath>${java.home}/lib/jfxrt.jar</systemPath>
			<scope>system</scope>
		</dependency>
		-->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
	
			<!-- Include source code and test files (including sources) in deployment -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<skipIfEmpty>true</skipIfEmpty>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Versions Plugin that can be used to manage maven versions in various ways -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<generateBackupPoms>false</generateBackupPoms>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
