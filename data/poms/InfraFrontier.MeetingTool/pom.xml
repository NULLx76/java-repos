<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>de.ieg.infra.meeting</groupId>
  <artifactId>InfrafrontierMeetingTool</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>Infrafrontier Meeting Tool</name>
  <description>Infrafrontier Meeting Tool</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.version>3.1.2.RELEASE</spring.version>
		<slf4j.version>1.5.10</slf4j.version>
		<java.version>1.6</java.version>
		<junit.version>4.8.2</junit.version>
		<servlet.api.version>3.0.1</servlet.api.version>
		<jstl.version>1.2</jstl.version>
		<el.api.version>2.2.1</el.api.version>
		<jsf.api.version>2.1.20</jsf.api.version>
		<jsf.impl.version>2.1.20</jsf.impl.version>	
		<baseUrl></baseUrl>
		<googleAnalytics></googleAnalytics>
		<googleAnalyticsBaseUrl></googleAnalyticsBaseUrl>
		<fromContact>info@infrafrontier.eu</fromContact>
		<disasterContact>info@infrafrontier.eu</disasterContact>
		<smtpServer>localhost</smtpServer>
	 <netbeans.hint.deploy.server>Tomcat</netbeans.hint.deploy.server>
	</properties>

	<dependencies>

		<dependency>
			<!-- added mysql so the tests will run in maven as for webapp it has the 
				mysql in the shared tomcat lib dir therefor scope is set to test! -->
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.21</version>
			<!-- <scope>test</scope> -->
		</dependency>

		<!-- JBPM dependencies -->

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet.api.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Bitronix Transaction Manager -->
		<dependency>
			<groupId>org.codehaus.btm</groupId>
			<artifactId>btm</artifactId>
			<version>2.0.1</version>
		</dependency>

		<!-- Bean Validation Dependencies -->

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
			<scope>compile</scope>
		</dependency>


		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
			<scope>compile</scope>
		</dependency>

		<!-- Spring Dependencies -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.webflow</groupId>
			<artifactId>spring-faces</artifactId>
			<version>2.3.2.RELEASE</version>
		</dependency>

		<!-- DB Dependencies -->

		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>20030825.184428</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>20030825.183949</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<!-- A Java library for parsing command line options -->
		<dependency>
			<groupId>net.sf.jopt-simple</groupId>
			<artifactId>jopt-simple</artifactId>
			<version>4.3</version>
		</dependency>

		<!-- HTTP components Dependencies -->

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.2-beta1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.0-alpha3</version>
		</dependency>

		<dependency>
			<groupId>org.apache.james</groupId>
			<artifactId>apache-mime4j</artifactId>
			<version>0.5</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<exclusions>
				<!-- Exclude servlet api -->
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>commons-discovery</groupId>
			<artifactId>commons-discovery</artifactId>
			<version>0.4</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- View Dependencies -->
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>


		<!-- Test Dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
			<exclusions>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
			</exclusions>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>

		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>${jsf.api.version}</version>
		</dependency>
		
		<!--  dependency>
			<groupId>org.apache.myfaces.core</groupId>
			<artifactId>myfaces-api</artifactId>
			<version>2.1.10</version>
		</dependency-->
		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<version>${jsf.impl.version}</version>
		</dependency>

		<!--  dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<version>2.1</version>
		</dependency-->
		<!-- EL -->
		<!--  >dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>${el.api.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>el-impl</artifactId>
			<version>2.2</version>
		</dependency-->
 
		<!-- Tomcat 6 need this -->
		<dependency>
			<groupId>com.sun.el</groupId>
			<artifactId>el-ri</artifactId>
			<version>1.0</version>
		</dependency>
				
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.7.2</version>
		</dependency>

	</dependencies>

	<repositories>
		<!-- JBoss Repository used for Java EE 6 pieces -->
		<repository>
			<id>repository.jboss.org</id>
			<name>JBoss Repository</name>
			<url>http://repository.jboss.org/nexus/content/groups/public-jboss/</url>
		</repository>

		<repository>
			<id>org.springframework.maven.milestone</id>
			<name>Spring Maven Milestone Repository</name>
			<url>http://maven.springframework.org/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>


	<build>
		<finalName>meeting-tool</finalName>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.4.2</version>
					<configuration>
						<skipTests>true</skipTests>
						<excludes>
							<exclude>**/integration/**</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>gwt-maven-plugin</artifactId>
										<versionRange>[2.4.0,)</versionRange>
										<goals>
											<goal>resources</goal>
											<goal>compile</goal>
											<goal>i18n</goal>
											<goal>generateAsync</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-war-plugin</artifactId>
										<!-- 2.1.1 copy the resources twice use 2.0.1 -->
										<versionRange>[2.0.1,)</versionRange>
										<goals>
											<goal>exploded</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>

								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-plugin</artifactId>
										<versionRange>[1.7,)</versionRange>
										<goals>
											<goal>add-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.google.code.maven-replacer-plugin</groupId>
										<artifactId>replacer</artifactId>
										<versionRange>[1.5.2,)</versionRange>
										<goals>
											<goal>replace</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>

							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>

			<!-- Facilitates downloading source and javadoc in Eclipse -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<wtpversion>2.0</wtpversion>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.basedir}/src/main/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		      
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<version>1.1</version>
				<configuration>
					<path>/MeetingTool</path>
					<server>tomcat7</server>
					<url>http://localhost:8080/manager/text</url>
					<update>true</update>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<!-- 2.2 => 2.0.1 -->
				<version>2.2</version>
				<executions>
					<!-- added for making the replace plugin run in the exploded phase -->
					<execution>
						<id>prepare-war</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>exploded</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- Overiddes default Maven configuration for meeting registration tool -->
					<warSourceDirectory>WebContent</warSourceDirectory>
					<!-- excluded because these resources are minified -->
					<!-- <webXml>web/WEB-INF/web.xml</webXml> -->
					<webResources>
						<resource>
							<directory>${basedir}/WebContent/resources</directory>
							<targetPath></targetPath>
						</resource>
						<resource>
							<directory>${basedir}/WebContent/WEB-INF</directory>
							<filtering>true</filtering>
							<targetPath>WEB-INF</targetPath>
							<includes>
								<include>**/web.xml</include>
								<include>**/beans-config.xml</include>
							</includes>
						</resource>						
					</webResources>
					<attachClasses>true</attachClasses>
					<classesClassifier>classes</classesClassifier>
					<archive>
						<addMavenDescriptor>true</addMavenDescriptor>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
					<archiveClasses>false</archiveClasses>
				</configuration>
			</plugin>
			
			

			<!-- <plugin> <artifactId>maven-release-plugin</artifactId> <version>2.0-beta-7</version> 
				<configuration> <tagBase> https://svn.ebi.ac.uk/emma/tags/interfaces </tagBase> 
				</configuration> </plugin> -->
			<!-- Ensures we are compiling at 1.6 level -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<excludes>
						<exclude>${project.basedir}/src/test/java/**/*.java</exclude>
					</excludes>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>external-dev</id>

			<properties>
				<baseUrl>//dev.infrafrontier.eu</baseUrl>
				<googleAnalytics>UA-40422777-1</googleAnalytics>
			</properties>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.4.2</version>
						<configuration>
							<skipTests>true</skipTests>
							<excludes>
								<exclude>**/integration/**</exclude>
							</excludes>
						</configuration>
					</plugin>
<!-- allows you to select derived on the target directory in eclipse so we dont have it polluting search etc and then this stops the target being overwritten and thus the setting reset all the time -->
				<!--  http://stackoverflow.com/questions/283489/is-there-a-way-to-hide-maven-2-target-folder-in-eclipse-3 -->
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<!-- delete directories that will be generated when you start the 
									develpment server/client in eclipse -->
								<fileset>
									<directory>target</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</plugin>

				</plugins>
			</build>

		</profile>
		
		<profile>
			<id>external-beta</id>

			<properties>
				<baseUrl>//beta.infrafrontier.eu</baseUrl>
				<googleAnalytics>UA-40422777-2</googleAnalytics>
			</properties>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.4.2</version>
						<configuration>
							<skipTests>true</skipTests>
							<excludes>
								<exclude>**/integration/**</exclude>
							</excludes>
						</configuration>
					</plugin>
<!-- allows you to select derived on the target directory in eclipse so we dont have it polluting search etc and then this stops the target being overwritten and thus the setting reset all the time -->
				<!--  http://stackoverflow.com/questions/283489/is-there-a-way-to-hide-maven-2-target-folder-in-eclipse-3 -->
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<!-- delete directories that will be generated when you start the 
									develpment server/client in eclipse -->
								<fileset>
									<directory>target</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</plugin>

				</plugins>
			</build>

		</profile>	

		<profile>
			<id>external-prod</id>

			<properties>
				<baseUrl>//www.infrafrontier.eu</baseUrl>
				<googleAnalytics>UA-40422777-3</googleAnalytics>
			</properties>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.4.2</version>
						<configuration>
							<skipTests>true</skipTests>
							<excludes>
								<exclude>**/integration/**</exclude>
							</excludes>
						</configuration>
					</plugin>
<!-- allows you to select derived on the target directory in eclipse so we dont have it polluting search etc and then this stops the target being overwritten and thus the setting reset all the time -->
				<!--  http://stackoverflow.com/questions/283489/is-there-a-way-to-hide-maven-2-target-folder-in-eclipse-3 -->
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<!-- delete directories that will be generated when you start the 
									develpment server/client in eclipse -->
								<fileset>
									<directory>target</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</plugin>

				</plugins>
			</build>

		</profile>			
	</profiles>
</project>