<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.integraltech</groupId>
  <artifactId>microservices-demo</artifactId>
  <name>microservices-demo</name>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <properties>
    <!-- Dependency versions -->
    <spring.version>4.2.0.RELEASE</spring.version>
    <dbh2.version>1.4.187</dbh2.version>
    <camel.version>2.15.1.redhat-620117</camel.version>
    <jetty.version>9.3.10.M0</jetty.version>
    <javax.version>2.0</javax.version>
    <cxf.version>3.1.2</cxf.version>
    <swagger.version>1.5.0</swagger.version>
    <junit.version>4.12</junit.version>
    <slf4j.version>1.7.0</slf4j.version>
    <!-- Plugin versions -->
    <maven.camel.version>2.15.1</maven.camel.version>
    <maven.source.version>2.2.1</maven.source.version>
    <maven.cobertura.version>2.6</maven.cobertura.version>
    <maven.checkstyle.version>2.17</maven.checkstyle.version>
    <maven.pmd.version>3.6</maven.pmd.version>
    <maven.findbugs.version>3.0.3</maven.findbugs.version>
    <maven.portallocator.version>1.2</maven.portallocator.version>
    <maven.exec.version>1.5.0</maven.exec.version>
    <maven.jetty.version>9.2.11.v20150529</maven.jetty.version>
    <maven.soapui.version>5.0.0</maven.soapui.version>
  </properties>

  <repositories>
    <repository>
      <id>org.apache.camel</id>
      <url>https://repository.jboss.org/nexus/content/groups/ea/</url>
    </repository>
  </repositories>

  <dependencies>

    <!-- Spring dependencies -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- H2 DB -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${dbh2.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-dbcp2</artifactId>
      <version>2.1.1</version>
    </dependency>
    <!--<dependency>-->
      <!--<groupId>org.hsqldb</groupId>-->
      <!--<artifactId>hsqldb</artifactId>-->
      <!--<version>2.0.0</version>-->
    <!--</dependency>-->

    <!-- Camel dependencies -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-core</artifactId>
      <version>${camel.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-spring</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-cxf</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-swagger-java</artifactId>
      <version>2.16.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-jackson</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-dozer</artifactId>
      <version>${camel.version}</version>
    </dependency>

    <!-- Servlet dependencies -->
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>javax.ws.rs-api</artifactId>
      <version>${javax.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http</artifactId>
      <version>${cxf.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-service-description</artifactId>
      <version>${cxf.version}</version>
    </dependency>

    <!-- JUnit dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Log4j dependecies -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

  </dependencies>

  <pluginRepositories>
    <!-- Add the soapui plugin repository -->
    <pluginRepository>
      <id>smartbear-sweden-plugin-repository</id>
      <url>https://github.com/SmartBear/soapui</url>
    </pluginRepository>
  </pluginRepositories>

  <build>
    <finalName>${project.name}</finalName>
    <plugins>
      <!-- Camel maven plugins -->
      <plugin>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-maven-plugin</artifactId>
        <version>${maven.camel.version}</version>
        <configuration>
          <applicationContextUri>META-INF/spring/*.xml</applicationContextUri>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Cobertura plugin - Checks code quality -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>${maven.cobertura.version}</version>
        <configuration>
          <check>
            <branchRate>85</branchRate>
            <lineRate>85</lineRate>
            <haltOnFailure>false</haltOnFailure>
            <totalBranchRate>85</totalBranchRate>
            <totalLineRate>85</totalLineRate>
            <packageLineRate>85</packageLineRate>
            <packageBranchRate>85</packageBranchRate>
          </check>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>clean</goal>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Checkstyle plugin - Checks the code for style errors -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven.checkstyle.version}</version>
        <configuration>
          <failOnViolation>false</failOnViolation>
          <configLocation>${basedir}\src\test\resources\checkstyle\checkstyle.xml</configLocation>
          <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
          <suppressionsLocation>${basedir}\src\test\resources\checkstyle\checkstyle-suppressions.xml</suppressionsLocation>
        </configuration>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- PMD plugin - checks for code duplication -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven.pmd.version}</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- FindBugs - checks for common bugs in the java code -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>${maven.findbugs.version}</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Port allocator plugin - allocate free port for Jetty server when running integration tests -->
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>port-allocator-maven-plugin</artifactId>
        <version>${maven.portallocator.version}</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>allocate-ports</goal>
            </goals>
            <configuration>
              <ports>
                <port>
                  <name>jetty.server.port</name>
                </port>
              </ports>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${maven.exec.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <arguments>
            <argument>${jetty.server.port}</argument>
          </arguments>
        </configuration>
      </plugin>

      <!-- Jetty plugin - Local servlet container -->
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${maven.jetty.version}</version>
        <configuration>
          <useTestClasspath>true</useTestClasspath>
          <httpConnector>
            <port>${jetty.server.port}</port>
          </httpConnector>
        </configuration>
        <executions>
          <execution>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- SoapUi plugin - Run SoapUI tests as part of integration testing -->
      <plugin>
        <groupId>com.smartbear.soapui</groupId>
        <artifactId>soapui-maven-plugin</artifactId>
        <version>${maven.soapui.version}</version>
        <configuration>
          <projectFile>${basedir}/src/test/resources/soapui/soapui-project.xml</projectFile>
          <projectProperties>
            <projectProperty>server.port=${jetty.server.port}</projectProperty>
          </projectProperties>
          <outputFolder>${project.build.directory}/soapui</outputFolder>
          <printReport>false</printReport>
          <junitReport>false</junitReport>
          <soapuiProperties>
            <property>
              <name>soapui.logroot</name>
              <value>${project.build.directory}/soapui/</value>
            </property>
          </soapuiProperties>
        </configuration>
        <executions>
          <execution>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>

  </build>
</project>
