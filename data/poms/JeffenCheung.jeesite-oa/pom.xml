<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.pactera.jeesite</groupId>
		<artifactId>aggregator</artifactId>
		<version>0.0.1</version>
		<relativePath>../aggregator</relativePath>
	</parent>

	<!-- 子项目：流程引擎 -->
	<artifactId>jeesite-oa</artifactId>
	<version>${pactera.jeesite.version}</version>
	<packaging>war</packaging>

	<name>jeesite-oa</name>
	<url>http://jeffencheung.github.com/jeesite-oa</url>
	<description>jeesite的流程管理模块Web工程。 </description>

	<properties>
	</properties>
	
	<!-- 
		1、这个工程的packaging类型是war，而不是jar。
			但是最终它不会独立打出war包来，其src/main/webapp里的所有文件，
			都会被最外围的web-dist工程聚合成一个总的war 
		2、这个工程的WEB-INF目录下，没有web.xml（有也没用，最终会被覆盖）。
			默认情况下，packaging类型为war的项目，如果没有web.xml，则构建会失败，
			因此需要在pom里做一个failOnMissingWebXml配置
		3、【普通的模块】除了jeesite-common工程无额外依赖，
			直接packagingExcludes过滤所有jar
		4、【服务模块】有自主依赖jeesite-common之外的jar的模块，
			通过packagingIncludes过滤打包非共通的jar，
			注意！引入WEB-INF/classes和views等本模块的文件夹
	 -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<packagingIncludes>
						WEB-INF/classes/**,
						WEB-INF/views/**,
						WEB-INF/lib/activiti*.jar,
						WEB-INF/lib/mail*.jar,
						WEB-INF/lib/activation*.jar,
						WEB-INF/lib/javaGeom*.jar,
						WEB-INF/lib/h2*.jar,
						WEB-INF/lib/imgscalr*.jar,
						WEB-INF/lib/commons-io*.jar,
						WEB-INF/lib/groovy*.jar,
						WEB-INF/lib/org*.jar,
						WEB-INF/lib/batik*.jar,
						WEB-INF/lib/fop*.jar,
						WEB-INF/lib/xmlgraphics*.jar,
						WEB-INF/lib/avalon*.jar,
						WEB-INF/lib/xml*.jar,
						
						<!-- 剥离oa core为单独jar后，需再include到oa的war工程里来，方便外围的web-dist工程引入 -->
						WEB-INF/lib/jeesite-oa-core*.jar
					</packagingIncludes>
				</configuration>
			</plugin>
		</plugins>
	</build>
		
	<dependencies>
		<!--继承父模块的jar包 -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>jeesite-oa-core</artifactId>
			<version>${pactera.jeesite.version}</version>
		</dependency>
	</dependencies>

</project>
