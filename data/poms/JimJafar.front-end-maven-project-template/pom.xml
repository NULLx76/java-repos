<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.mydomain</groupId>
    <artifactId>MyApp.com</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>MyApp.com</name>
    <description>Description of the site / app</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jsdoc3BaseDir>${basedir}/build/jsdoc3</jsdoc3BaseDir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>ro.isdc.wro4j</groupId>
            <artifactId>wro4j-extensions</artifactId>
            <version>1.6.1</version>
        </dependency>
    </dependencies>

    <build>
        <!-- To define the plugin version in your parent POM -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jasig.maven</groupId>
                    <artifactId>sass-maven-plugin</artifactId>
                    <version>1.1.1</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!--
                Jasmine BDD Plugin
                mvn test
                mvn jasmine:test
                mvn jasmine:bdd
            -->
            <plugin>
                <groupId>com.github.searls</groupId>
                <artifactId>jasmine-maven-plugin</artifactId>
                <version>1.2.0.0</version>

                <extensions>true</extensions>

                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <jsSrcDir>${project.basedir}/src/main/js</jsSrcDir>
                    <sourceIncludes>
                        <include>somefile.js</include>
                        <include>path/to/someotherfile.js</include>
                    </sourceIncludes>
                    <!--
                    <preloadSources>
                        <source>${project.basedir}/js/libs/jquery.1.6.4.js</source>
                    </preloadSources>
                    -->
                    <jsTestSrcDir>${project.basedir}/src/test/js</jsTestSrcDir>
                    <specIncludes>
                        <include>**/*.js</include>
                    </specIncludes>
                    <specExcludes>
                        <exclude>lib/**/*.js</exclude>
                    </specExcludes>
                </configuration>
            </plugin>

            <!--
                Saga code coverage plugin
                mvn test
                mvn saga:coverage
            -->
            <plugin>
                <groupId>com.github.timurstrekalov</groupId>
                <artifactId>saga-maven-plugin</artifactId>
                <version>1.3.0</version>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>coverage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <backgroundJavaScriptTimeout>2000</backgroundJavaScriptTimeout>
                    <baseDir>${project.build.directory}/jasmine</baseDir>
                    <includes>
                        **/SpecRunner.html
                    </includes>
                    <outputDir>${project.basedir}/build-test/coverage</outputDir>
                </configuration>
            </plugin>

            <!--
                JSHint
                mvn validate
                mvn wro4j:jshint

                Google Closure Compiler
                mvn compile
                mvn wro4j:run
            -->
            <plugin>
                <groupId>ro.isdc.wro4j</groupId>
                <artifactId>wro4j-maven-plugin</artifactId>
                <version>1.6.1</version>
                <executions>
                    <execution>
                        <id>package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jshint</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <options>devel,evil,noarg</options>
                    <targetGroups>MyApp</targetGroups>
                    <minimize>true</minimize>
                    <destinationFolder>${basedir}/build/</destinationFolder>
                    <cssDestinationFolder>d:/static/css/</cssDestinationFolder>
                    <jsDestinationFolder>${basedir}/build/js/</jsDestinationFolder>
                    <contextFolder>${basedir}/src/main/js/</contextFolder>
                    <wroFile>build/wro4j/wro.xml</wroFile>
                    <!--WHITESPACE_ONLY-->
                    <wroManagerFactory>project.wro4j.GoogleWhitespaceOnlyStandaloneManagerFactory</wroManagerFactory>
                    <!--SIMPLE_OPTIMIZATIONS-->
                    <!--<wroManagerFactory>ro.isdc.wro.extensions.manager.standalone.GoogleStandaloneManagerFactory</wroManagerFactory>-->
                    <!--ADVANCED_OPTIMIZATIONS-->
                    <!--<wroManagerFactory>ro.isdc.wro.extensions.manager.standalone.GoogleAdvancedStandaloneManagerFactory</wroManagerFactory>-->
                    <ignoreMissingResources>false</ignoreMissingResources>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jasig.maven</groupId>
                <artifactId>sass-maven-plugin</artifactId>
                <version>1.1.1</version>
            </plugin>

            <!--
                Ant Tasks
                mvn antrun:run
            -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>rename</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target name="postprocess-minified" description="handles renaming, moving and copying stuff from other steps in the build">
                                <move file="${basedir}/build/js/MyApp.js" tofile="${basedir}/build/js/MyApp-min.js" />
                                <copy file="${basedir}/src/main/js/MyAppConfig.js" tofile="${basedir}/build/js/MyApp-conf.js" overwrite="true" />
                                <zip destfile="${basedir}/build/MyApp-${version}-min.zip" basedir="${basedir}/build/js"/>
                                <tar destfile="${basedir}/build/MyApp-${version}-min.tar" basedir="${basedir}/build/js"/>
                            </target>
                        </configuration>
                    </execution>

                    <execution>
                        <id>default-cli</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target name="jsdoc3" description="jsdoc3 API docs auto-generation">
                                <delete dir="${jsdoc3BaseDir}/docs" />
                                <mkdir dir="${jsdoc3BaseDir}/docs" />
                                <mkdir dir="${jsdoc3BaseDir}/jsdoc3-ant-task-master/bin" />
                                <javac srcdir="${jsdoc3BaseDir}/jsdoc3-ant-task-master/src"
                                       destdir="${jsdoc3BaseDir}/jsdoc3-ant-task-master/bin"
                                       classpath="${jsdoc3BaseDir}/jsdoc3-ant-task-master/lib/ant.jar:${jsdoc3BaseDir}/jsdoc3-ant-task-master/lib/rhino/js-1.7r3_jsdoc.jar"
                                       includeAntRuntime="false"/>
                                <!--<javadoc sourcepath="${jsdoc3BaseDir}/jsdoc3-ant-task-master/src" destdir="${jsdoc3BaseDir}/docs" classpath="${jsdoc3BaseDir}/jsdoc3-ant-task-master/lib/ant.jar:${jsdoc3BaseDir}/jsdoc3-ant-task-master/lib/rhino/js-1.7r3_jsdoc.jar" />-->
                                <jar destfile="${jsdoc3BaseDir}/build/jsdoc3-ant-task.jar">
                                    <fileset dir="${jsdoc3BaseDir}/jsdoc3-ant-task-master/bin" />
                                    <manifest>
                                        <attribute name="Built-By" value="Jim Sangwine"/>
                                    </manifest>
                                </jar>
                                <taskdef name="jsdoc3" classname="net.jannon.ant.tasks.JsDoc3" classpath="${jsdoc3BaseDir}/build/jsdoc3-ant-task.jar:${jsdoc3BaseDir}/jsdoc3-ant-task-master/lib/rhino/js-1.7r3_jsdoc.jar"/>

                                <!-- MyApp -->
                                <echo message="Documenting MyApp..."/>
                                <jsdoc3 jsdochome="${jsdoc3BaseDir}/jsdoc3-ant-task-master/lib/jsdoc3"
                                        to="${jsdoc3BaseDir}/docs"
                                        private="true"
                                        recurse="true"
                                        dir="${basedir}/src/main/js" />
                                <echo message="Done."/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
