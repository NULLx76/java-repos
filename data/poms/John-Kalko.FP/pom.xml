<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>ua.fp</groupId>
    <artifactId>finances</artifactId>
    <name>Finances</name>
    <packaging>war</packaging>
    <version>1.0.0-BUILD-SNAPSHOT</version>
    <properties>
        <java-version>1.6</java-version>
        <org.springframework-version>3.0.5.RELEASE</org.springframework-version>
        <org.slf4j.version>1.5.8</org.slf4j.version>
        <org.aspectj-version>1.6.9</org.aspectj-version>
    </properties>

    <dependencies>
        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${org.springframework-version}</version>
            <exclusions>
                <!-- Exclude Commons Logging in favor of SLF4j -->
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>

        <!-- Spring ORM -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>

         <!--Spring transactions support-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>

        <!-- Spring Security -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>

        <!-- JPA -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <version>1.0.1.Final</version>
        </dependency>

        <!-- JPA Provider -->
        <dependency>
            <groupId>hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>3.4.0.GA</version>
            <scope>provided</scope>
        </dependency>

        <!-- FOR TESTING -->
        <!--<dependency>-->
            <!--<groupId>cglib</groupId>-->
            <!--<artifactId>cglib</artifactId>-->
            <!--<version>2.2.2</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>org.hibernate</groupId>-->
            <!--<artifactId>hibernate-core</artifactId>-->
            <!--<version>4.1.1.Final</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>org.hibernate</groupId>-->
            <!--<artifactId>hibernate-c3p0</artifactId>-->
            <!--<version>4.1.1.Final</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>javassist</groupId>-->
            <!--<artifactId>javassist</artifactId>-->
            <!--<version>3.12.1.GA</version>-->
        <!--</dependency>-->

        <!-- @Inject -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>nl.jqno.equalsverifier</groupId>
            <artifactId>equalsverifier</artifactId>
            <version>1.3.1</version>
        </dependency>

        <!-- AspectJ -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${org.aspectj-version}</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${org.slf4j.version}</version>
        </dependency>
        <!-- FOR TEST -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${org.slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- FOR TEST -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${org.slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>

    </dependencies>

    <!--<repositories>-->
        <!--&lt;!&ndash; For testing against latest Spring snapshots &ndash;&gt;-->
        <!--<repository>-->
            <!--<id>org.springframework.maven.snapshot</id>-->
            <!--<name>Spring Maven Snapshot Repository</name>-->
            <!--<url>http://maven.springframework.org/snapshot</url>-->
            <!--<releases>-->
                <!--<enabled>false</enabled>-->
            <!--</releases>-->
            <!--<snapshots>-->
                <!--<enabled>true</enabled>-->
            <!--</snapshots>-->
        <!--</repository>-->
        <!--&lt;!&ndash; For developing against latest Spring milestones &ndash;&gt;-->
        <!--<repository>-->
            <!--<id>org.springframework.maven.milestone</id>-->
            <!--<name>Spring Maven Milestone Repository</name>-->
            <!--<url>http://maven.springframework.org/milestone</url>-->
            <!--<snapshots>-->
                <!--<enabled>false</enabled>-->
            <!--</snapshots>-->
        <!--</repository>-->
    <!--</repositories>-->

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                </configuration>
            </plugin>
            <!--The default resource directory for all Maven projects is src/main/resources
            which will end up in target/classes and in WEB-INF/classes in the WAR.
            The directory structure will be preserved in the process.-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <warName>fp</warName>
                    <webXml>./web/WEB-INF/web.xml</webXml>
                    <webResources>
                        <!--Including resources not found in the default resource directory-->
                        <resource>
                            <directory>./web/</directory>
                        </resource>
                        <resource>
                            <directory>./lib/</directory>
                            <targetPath>WEB-INF/lib</targetPath>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <!--<plugin>-->
                <!--<groupId>org.codehaus.mojo</groupId>-->
                <!--<artifactId>aspectj-maven-plugin</artifactId>-->
                <!--&lt;!&ndash; Have to use version 1.2 since version 1.3 does not appear to work-->
                    <!--with ITDs &ndash;&gt;-->
                <!--<version>1.2</version>-->
                <!--<dependencies>-->
                    <!--&lt;!&ndash; You must use Maven 2.0.9 or above or these are ignored (see MNG-2972) &ndash;&gt;-->
                    <!--<dependency>-->
                        <!--<groupId>org.aspectj</groupId>-->
                        <!--<artifactId>aspectjrt</artifactId>-->
                        <!--<version>${org.aspectj-version}</version>-->
                    <!--</dependency>-->
                    <!--<dependency>-->
                        <!--<groupId>org.aspectj</groupId>-->
                        <!--<artifactId>aspectjtools</artifactId>-->
                        <!--<version>${org.aspectj-version}</version>-->
                    <!--</dependency>-->
                <!--</dependencies>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<goals>-->
                            <!--<goal>compile</goal>-->
                            <!--<goal>test-compile</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
                <!--<configuration>-->
                    <!--<outxml>true</outxml>-->
                    <!--<source>${java-version}</source>-->
                    <!--<target>${java-version}</target>-->
                <!--</configuration>-->
            <!--</plugin>-->
            <plugin>
                <!--The Surefire Plugin is used during the test phase of the build lifecycle to execute-->
                <!--the unit tests of an application. It generates reports in 2 different file formats:-->
                <!--(*.txt), (*.xml). By default, these files are generated at ${basedir}/target/surefire-reports.-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <junitArtifactName>junit:junit</junitArtifactName>
                </configuration>
            </plugin>
            <plugin>
                <!--The plugin goals deploy, undeploy, and redeploy can be used to deploy,-->
                <!--redeploy and undeploy applications to a JBoss Application Server-->
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>7.4.Final</version>
                <configuration>
                    <filename>fp.war</filename>
                    <execute-commands/>
                    <executeCommands/>
                </configuration>
                <!--Set the deployment operation to execute at a specific phase, for example the install phase-->
                <executions>
                    <execution>
                        <phase>site</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>

            </plugin>
        </plugins>
    </build>

</project>