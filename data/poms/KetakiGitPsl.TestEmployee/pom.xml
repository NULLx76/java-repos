<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.psl</groupId>
	<artifactId>Employee</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>Employee</name>
	<url>http://maven.apache.org</url>

	<properties>
		<java.version>1.6</java.version>
		<spring.version>3.1.0.RELEASE</spring.version>
		<cglib.version>2.2.2</cglib.version>
	</properties>

	<dependencies>
		<!-- Spring core & mvc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

		<!-- CGLib for @Configuration -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>${cglib.version}</version>
			<scope>runtime</scope>
		</dependency>


		<!-- Servlet Spec -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.6</version>
		</dependency>


	</dependencies>

	<repositories>
		<repository>
			<id>springsource-milestones</id>
			<name>SpringSource Milestones Proxy</name>
			<url>https://oss.sonatype.org/content/repositories/springsource-milestones</url>
		</repository>
	</repositories>

	<build>
		<finalName>Employee</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
				</configuration>
			</plugin>
			
		  <plugin>
			 <groupId>com.spotify</groupId>
			 <artifactId>docker-maven-plugin</artifactId>
			 <version>0.4.13</version>
			 <executions>
				 <execution>
					 <phase>package</phase>
					 <goals>
						 <goal>build</goal>
					 </goals>
				 </execution>
			 </executions>
			 <configuration>
				 <imageName>keydocker/employee</imageName>
				 <baseImage>tomcat:8.0</baseImage>
				 <maintainer>keydocker</maintainer>
				 <dockerHost>https://192.168.99.100:2376</dockerHost>
				 <exposes>
					<expose>8080</expose>
				</exposes>
				 <entryPoint>
					 ["catalina.sh", "run", "/usr/local/tomcat/webapps/${project.build.finalName}.war"]
				 </entryPoint>
		 
				 <serverId>docker-hub</serverId>
				 <registryUrl>https://index.docker.io/v1/</registryUrl>
		 
				  <resources>        <!-- Dockerfile building resources -->
					  <resource>
						  <targetPath>/usr/local/tomcat/webapps/</targetPath>
						  <directory>${project.build.directory}</directory>
						  <excludes>
							  <exclude>target/**/*</exclude>
							  <exclude>pom.xml</exclude>
							  <exclude>*.iml</exclude>
						  </excludes>
						  <include>${project.build.finalName}.war</include>
					  </resource>
				  </resources>
			 </configuration>
		</plugin>
		</plugins>
	</build>
</project>
