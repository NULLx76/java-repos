<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cn.mldn</groupId>
	<artifactId>shift</artifactId>
	<version>0.0.1</version>
	<packaging>pom</packaging>
	<name>shift</name>
	<url>http://maven.apache.org</url>
	<properties>
		<!-- 各个子模块版本 -->
		<shift.version>0.0.1</shift.version>
		<!-- 以下为使用依赖包的版本配置 -->
		<junit.version>4.12</junit.version>
		<!-- web项目依赖包版本 -->
		<jsp.version>2.3.1</jsp.version>
		<jstl.version>1.2</jstl.version><!-- 这个还没用到 -->
		<servlet.version>3.1.0</servlet.version>
		<!--mysql数据库 -->
		<mysql.version>5.1.29</mysql.version>
		<!--C3P0数据库连接池 -->
		<c3p0.version>0.9.2.1</c3p0.version>
		<mchange.version>0.2.12</mchange.version>
		<!-- 定义fileupload组件依赖包 -->
		<fileupload.version>1.3.2</fileupload.version>
		<commons-io.version>2.5</commons-io.version>		
		<commons-collections.version>3.2.2</commons-collections.version><!-- 这个还没用到 -->
		<!-- spring开发包 -->
		<spring.version>4.3.8.RELEASE</spring.version>
		<!-- Shiro开发包 -->
		<shiro.version>1.3.2</shiro.version>
		<!-- Mybatis相关开发包 -->
		<mybatis-version>3.4.4</mybatis-version>
		<mybatis-spring-version>1.3.1</mybatis-spring-version>



		<!-- JSON开发包 -->
		<json.version>2.4</json.version>



		<!-- dubbo 相关的依赖包 -->
		<dubbo-version>2.4.10</dubbo-version>
		<zookeeper-version>3.4.10</zookeeper-version>
		<zkclient.version>0.4</zkclient.version>


		<druid.version>1.0.0</druid.version>




		

		<logback-version>1.1.3</logback-version>
		<org.slf4j-version>1.7.5</org.slf4j-version>

		<commons-beanutils-version>1.9.1</commons-beanutils-version>
		<commons-lang3-version>3.1</commons-lang3-version>

		<aspectj-version>1.7.0</aspectj-version>



		<!-- 以下为插件的版本属性配置,编译compiler,源代码source,文档javadoc -->
		<compiler.version>3.6.1</compiler.version>
		<source.version>3.0.1</source.version>
		<javadoc.version>2.10.4</javadoc.version>
		<!-- 配置资源目录的位置，profiles目录是三个（dev、beta、product）的总目录,resources是资源文件目录 -->
		<profiles.dir>src/main/profiles</profiles.dir>
		<resources.dir>src/main/resources</resources.dir>
		<!-- 配置一些环境的属性信息,jdk,encoding -->
		<jdk.version>1.8</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>cn.mldn</groupId>
				<artifactId>shift-api</artifactId>
				<version>${shift.version}</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<!--web项目的依赖包s -->
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>javax.servlet.jsp-api</artifactId>
				<version>${jsp.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${servlet.version}</version>
			</dependency>
			<!--web项目的依赖包e -->
			<!--mysql数据库 -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>
			<!--C3P0数据库连接池s -->
			<dependency>
				<groupId>com.mchange</groupId>
				<artifactId>c3p0</artifactId>
				<version>${c3p0.version}</version>
			</dependency>
			<dependency>
				<groupId>com.mchange</groupId>
				<artifactId>mchange-commons-java</artifactId>
				<version>${mchange.version}</version>
			</dependency>
			<!--C3P0数据库连接池e -->
			<!-- 定义fileupload组件依赖包s -->
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${fileupload.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<!-- 定义fileupload组件依赖包e -->



			<!--spring依赖包s -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!--spring对web的支持 -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!--spring依赖包e -->
		</dependencies>
	</dependencyManagement>


	<profiles>	<!-- 明确的进行具体的资源名称的配置，这个名称是在maven打包的时候使用的名称 -->
		<profile>
			<id>dev</id>
			<properties>
				<profile.dir>${profiles.dir}/dev</profile.dir>
			</properties>
			<activation>	<!-- 设置activeByDefault之后，如果在编译的时候没有设置任何的profile名字，则此配置生效 -->
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>beta</id>
			<properties>
				<profile.dir>${profiles.dir}/beta</profile.dir>
			</properties>
		</profile>
		<profile>
			<id>product</id>
			<properties>
				<profile.dir>${profiles.dir}/product</profile.dir>
			</properties>
		</profile>
	</profiles>
	<build>
		<finalName>shift</finalName>
		<resources>
			<resource>
				<!-- 此处的属性是profile中统一定义的路径的名称，不同的配置文件有不同的子目录 -->
				<directory>${profiles.dir}</directory>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>${resources.dir}</directory>
				<filtering>false</filtering>
			</resource>
		</resources>
		<plugins>	<!-- 配置项目所需要的开发插件：编译compiler,源代码source,文档javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${javadoc.version}</version>
				<configuration>
					<encode>${project.build.sourceEncoding}</encode>
				</configuration>
				<executions>	<!-- 进行执行配置 -->
					<execution>
						<id>javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler.version}</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<encode>${project.build.sourceEncoding}</encode>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${source.version}</version>
				<executions>	<!-- 进行执行配置 -->
					<execution>
						<id>sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


	<modules>
		<module>shift-api</module>
		<module>shift-service</module>
		<module>shift-web</module>
	</modules>
</project>