<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.phantom.module</groupId>
  <artifactId>phantom-push</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>phantom-push</name>
  <url>http://maven.apache.org</url>

  <parent>
      <groupId>com.phantom</groupId>
      <artifactId>phantom-parent</artifactId>
      <relativePath>../phantom-parent</relativePath>
      <version>1.0.0-SNAPSHOT</version>
  </parent>

  <dependencies>

    <dependency>
      <groupId>com.phantom</groupId>
      <artifactId>phantom-common</artifactId>
      <version>1.0.0-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>

    <!-- j2ee web spec -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
    </dependency>


    <!-- 第三方jar包  已安装到本地仓库中   开始-->
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>phantom_json</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.java_websocket</groupId>
      <artifactId>phantom_websocket</artifactId>
      <version>1.0</version>
    </dependency>
    <!-- 第三方jar包  已安装到本地仓库中   结束-->
  </dependencies>

  <build>
    <resources>
      <!-- copy resources 目录文件  开始-->
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
      </resource>
      <!-- copy resources 目录文件  结束-->
      <!-- copy java 目录下配置文件  开始-->
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.xml</include>
          <include>**/*.properties</include>
        </includes>
      </resource>
      <!-- copy java 目录下配置文件  结束-->
    </resources>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <skip>true</skip>
          <!--<compilerArguments>
            <extdirs>src\lib</extdirs>
          </compilerArguments>-->
        </configuration>
      </plugin>

      <!--<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${project.build.directory}/lib
              </outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin-->

      <!-- 打包时将依赖包一起打包  依赖包会被解压形式一起打包 开始-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer
                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.handlers</resource>
                </transformer>
                <transformer
                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <!-- mainClass>com.chenzhou.examples.Main</mainClass -->
                </transformer>
                <transformer
                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.schemas</resource>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- 打包时将依赖包一起打包  依赖包会被解压形式一起打包  结束-->
    </plugins>
  </build>
</project>
