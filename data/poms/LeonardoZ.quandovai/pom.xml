<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>br.com</groupId>
	<artifactId>quandovai</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>quandovai</name>
	<packaging>war</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<mysql.server>localhost</mysql.server>
		<mysql.port>3306</mysql.port>
		<mysql.driver.groupId>mysql</mysql.driver.groupId>
		<mysql.driver.artifactId>mysql-connector-java</mysql.driver.artifactId>
		<mysql.driver.version>5.1.35</mysql.driver.version>
		<mysql.db.schema>quandovai_schema</mysql.db.schema>
		<mysql.db.user>root</mysql.db.user>
		<mysql.db.password>root</mysql.db.password>
		<db.jdbc.url>jdbc:mysql://${mysql.server}:${mysql.port}/quandovai_schema</db.jdbc.url>
		<mysql.driver.name>${mysql.driver.artifactId}-${mysql.driver.version}</mysql.driver.name>
		<wildfly.home>${env.WILDFLY_HOME}</wildfly.home>
		<jboss.home>${env.JBOSS_HOME}</jboss.home>
		<JBOSS_HOME>${env.JBOSS_HOME}</JBOSS_HOME>
		<wildfly.hibernate.datasource.name>java:jboss/datasources/quandoVaiDS</wildfly.hibernate.datasource.name>
	</properties>
	<repositories>
		<repository>
			<id>sonatype-oss-public</id>
			<url>https://oss.sonatype.org/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-7.0</artifactId>
				<version>1.0.0.Final</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>1.1.4.Final</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- Java EE -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>7.0</version>
			<scope>import</scope>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>3.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.weld.servlet</groupId>
			<artifactId>weld-servlet-core</artifactId>
			<version>2.1.2.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-core-impl</artifactId>
			<version>2.1.2.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.enterprise.concurrent</groupId>
			<artifactId>javax.enterprise.concurrent-api</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator-cdi</artifactId>
			<version>5.1.1.Final</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.3.5.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Miscelania -->
		<dependency>
			<groupId>${mysql.driver.groupId}</groupId>
			<artifactId>${mysql.driver.artifactId}</artifactId>
			<version>${mysql.driver.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>14.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.5</version>
		</dependency>

		<!-- VRaptor -->
		<dependency>
			<groupId>br.com.caelum</groupId>
			<artifactId>vraptor</artifactId>
			<version>4.2.0-RC3</version>
		</dependency>


		<!-- Testes -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
		</dependency>
		<!-- Arquillian JUnit Container -->
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.protocol</groupId>
			<artifactId>arquillian-protocol-servlet</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.extension</groupId>
			<artifactId>arquillian-persistence-api</artifactId>
			<version>1.0.0.Alpha6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.extension</groupId>
			<artifactId>arquillian-persistence-impl</artifactId>
			<version>1.0.0.Alpha6</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<profiles>
		<!-- Configura o Wildfly para o processo de desenvolvimento -->
		<!-- requer Wildfly em algum diretÃ³rio do sistema -->
		<!-- requer variavel de ambiente WILDFLY_HOME configurada -->
		<!-- mvn wildfly:start clean package install -P configure-dev -->
		<profile>
			<id>configure-dev</id>
			<build>
				<plugins>
					<!-- Plugin Wildfly para adicionar User, Driver, Datasources e Deploy -->
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<version>1.1.0.Alpha4</version>
						<configuration>
							<jboss-home>${wildfly.home}</jboss-home>
							<add-user>
								<users>
									<user>
										<username>quandovai-admin</username>
										<password>1234</password>
										<groups>
											<group>admin</group>
										</groups>
										<application-user>false</application-user>
									</user>
								</users>
							</add-user>
						</configuration>
						<executions>
							<!-- Undeploy do app no server ativo -->
							<execution>
								<id>undeploy-app</id>
								<phase>clean</phase>
								<goals>
									<goal>undeploy</goal>
								</goals>
								<configuration>
									<ignoreMissingDeployment>true</ignoreMissingDeployment>
								</configuration>
							</execution>
							<execution>
								<id>deploy-driver-MySQL</id>
								<phase>package</phase>
								<configuration>
									<groupId>${mysql.driver.groupId}</groupId>
									<artifactId>${mysql.driver.artifactId}</artifactId>
									<name>mysql-connector-java-5.1.35.jar</name>
								</configuration>
								<goals>
									<goal>deploy-artifact</goal>
								</goals>
							</execution>
							<execution>
								<id>add-datasource</id>
								<phase>package</phase>
								<goals>
									<goal>add-resource</goal>
								</goals>
								<configuration>
									<address>subsystem=datasources,data-source=java:jboss/datasources/quandoVaiDS</address>
									<resources>
										<resource>
											<properties>
												<jndi-name>java:jboss/datasources/quandoVaiDS</jndi-name>
												<connection-url>${db.jdbc.url}</connection-url>
												<driver-class>com.mysql.jdbc.Driver</driver-class>
												<driver-name>mysql-connector-java-5.1.35.jar_com.mysql.jdbc.Driver_5_1</driver-name>
												<enabled>true</enabled>
												<database-name>${mysql.db.schema}</database-name>
												<user-name>${mysql.db.user}</user-name>
												<password>${mysql.db.password}</password>
												<security.user-name>${mysql.db.user}</security.user-name>
												<security.password>${mysql.db.password}</security.password>
												<pool-name>quandovai_pool</pool-name>
											</properties>
										</resource>
									</resources>
								</configuration>
							</execution>
							<!-- Deploy do app no servidor ativo -->
							<execution>
								<phase>install</phase>
								<goals>
									<goal>deploy</goal>
								</goals>
								<configuration>
									<name>quandovai</name>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Deixe o servidor ativo e rode mvn clean install -->
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- Plugin Wildfly para Deploy -->
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<version>1.1.0.Alpha4</version>
						<configuration>
							<jboss-home>${wildfly.home}</jboss-home>
						</configuration>
						<executions>
							<execution>
								<id>undeploy-app</id>
								<phase>clean</phase>
								<goals>
									<goal>undeploy</goal>
								</goals>
								<configuration>
									<ignoreMissingDeployment>true</ignoreMissingDeployment>
								</configuration>
							</execution>
							<!-- Deploy do app no servidor ativo -->
							<execution>
								<phase>install</phase>
								<goals>
									<goal>deploy</goal>
								</goals>
								<configuration>
									<name>quandovai</name>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Perfil do WildFly 8.1.0 do tipo gerenciado -->
		<profile>
			<id>jboss2</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.wildfly</groupId>
					<artifactId>wildfly-arquillian-container-managed</artifactId>
					<version>8.1.0.Final</version>
					<scope>test</scope>
					<exclusions>
						<exclusion>
							<groupId>sun.jdk</groupId>
							<artifactId>jconsole</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>integration</id>
			<!-- the dependencies for Wildfly8.1 -->
			<dependencies>
				<dependency>
					<groupId>org.wildfly</groupId>
					<artifactId>wildfly-arquillian-container-embedded</artifactId>
					<version>8.1.0.Final</version>
				</dependency>
				<dependency>
					<groupId>org.wildfly</groupId>
					<artifactId>wildfly-embedded</artifactId>
					<version>8.1.0.Final</version>
				</dependency>
			</dependencies>

			<build>
				<plugins>
					<!-- You need the maven dependency plugin to download locally a zip 
						with the server, unless you provide your own, it will download under the 
						/target directory -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.8</version>
						<executions>
							<execution>
								<id>unpack</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.wildfly</groupId>
											<artifactId>wildfly-dist</artifactId>
											<version>8.1.0.Final</version>
											<type>zip</type>
											<overWrite>false</overWrite>
											<outputDirectory>target</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.17</version>
						<configuration>
							<!-- Fork every test because it will launch a separate AS instance -->
							<forkMode>always</forkMode>
							<systemPropertyVariables>
								<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
								<!-- the maven dependency plugin will have already downloaded the 
									server on /target -->
								<jboss.home>${project.basedir}/target/wildfly-8.1.0.Final</jboss.home>
								<module.path>${project.basedir}/target/wildfly-8.1.0.Final/modules</module.path>
							</systemPropertyVariables>
							<redirectTestOutputToFile>false</redirectTestOutputToFile>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<build>
		<plugins>
			<!-- Plugin do Compilador -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
					<compilerArguments>
						<parameters />
					</compilerArguments>
				</configuration>
			</plugin>

		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

</project>
