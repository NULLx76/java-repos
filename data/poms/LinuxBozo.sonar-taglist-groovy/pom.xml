<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.codehaus.sonar-plugins</groupId>
    <artifactId>parent</artifactId>
    <version>14</version>
  </parent>

  <artifactId>sonar-taglist-groovy-plugin</artifactId>
  <version>0.1-SNAPSHOT</version>
  <packaging>sonar-plugin</packaging>

  <name>Sonar Taglist Groovy Support Plugin</name>
  <description>Adds Groovy support to Taglist Plugin</description>
  <url>https://github.com/LinuxBozo/sonar-taglist-groovy</url>
  <organization>
    <name>LinuxBozo</name>
    <url>https://github.com/LinuxBozo</url>
  </organization>
  <licenses>
    <license>
      <name>GNU LGPL 3</name>
      <url>http://www.gnu.org/licenses/lgpl.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>linuxbozo</id>
      <name>M. Adam Kendall</name>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git@github.com:LinuxBozo/sonar-taglist-groovy.git</connection>
    <developerConnection>scm:git:git@github.com:LinuxBozo/sonar-taglist-groovy.git</developerConnection>
    <url>https://github.com/LinuxBozo/sonar-taglist-groovy</url>
    <tag>HEAD</tag>
  </scm>
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/LinuxBozo/sonar-taglist-groovy/issues</url>
  </issueManagement>

  <properties>
    <sonar.version>2.5</sonar.version>
    <sonar.pluginName>Taglist Plugin Groovy Support</sonar.pluginName>
    <sonar.pluginClass>org.sonar.plugins.taglist.groovy.TaglistGroovyPlugin</sonar.pluginClass>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-plugin-api</artifactId>
      <version>${sonar.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.sonar-plugins</groupId>
      <artifactId>sonar-groovy-plugin</artifactId>
      <type>sonar-plugin</type>
      <version>[0.6,)</version>
      <scope>provided</scope>
    </dependency>    
    <dependency>
      <groupId>org.codehaus.sonar-plugins</groupId>
      <artifactId>sonar-taglist-plugin</artifactId>
      <type>sonar-plugin</type>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>

    <!-- unit tests -->
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-testing-harness</artifactId>
      <version>${sonar.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- TODO http://jira.codehaus.org/browse/SONAR-2011
    We need following dependency, otherwise we will receive
    java.lang.NoClassDefFoundError: org/apache/maven/project/MavenProject
    during call mock(org.sonar.api.resources.Project.class)
    -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <version>2.0.7</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-assert</artifactId>
      <version>1.4</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-plugin-size</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>verify</phase>
            <configuration>
              <rules>
                <requireFilesSize>
                  <maxsize>9100</maxsize>
                  <minsize>8000</minsize>
                  <files>
                    <file>${project.build.directory}/${project.build.finalName}.jar</file>
                  </files>
                </requireFilesSize>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
