<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>au.com.jiang.liu</groupId>
	<artifactId>SSAngular</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>SSAnguler</name>
	<description>Demo project for Spring Security integrate with AngularJS</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.2.5.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.7</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
			</resource>
			<resource>
				<directory>${project.build.directory}/generated-resources</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<!-- Serves *only* to filter the wro.xml so it can get an absolute 
							path for the project -->
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/static</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/javascript</directory>
								</resource>
							</resources>
							<!-- <outputDirectory>${basedir}/target/wro</outputDirectory> <resources> 
								<resource> <directory>src/main/wro</directory> <filtering>true</filtering> 
								</resource> </resources> -->
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>ro.isdc.wro4j</groupId>
				<artifactId>wro4j-maven-plugin</artifactId>
				<version>1.7.6</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<wroManagerFactory>ro.isdc.wro.maven.plugin.manager.factory.ConfigurableWroManagerFactory</wroManagerFactory>
					<cssDestinationFolder>${project.build.directory}/generated-resources/static/css</cssDestinationFolder>
					<jsDestinationFolder>${project.build.directory}/generated-resources/static/js</jsDestinationFolder>
					<wroFile>${project.build.directory}/wro/wro.xml</wroFile>
					<extraConfigFile>${basedir}/src/main/wro/wro.properties</extraConfigFile>
					<contextFolder>${basedir}/src/main/wro</contextFolder>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.webjars</groupId>
						<artifactId>jquery</artifactId>
						<version>2.1.1</version>
					</dependency>
					<dependency>
						<groupId>org.webjars</groupId>
						<artifactId>angularjs</artifactId>
						<version>1.3.8</version>
					</dependency>
					<dependency>
						<groupId>org.webjars</groupId>
						<artifactId>bootstrap</artifactId>
						<version>3.2.0</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>exec-npm-install</id>
						<phase>generate-sources</phase>
						<configuration>
							<executable>npm</executable>
							<arguments>
								<argument>install</argument>
							</arguments>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
					<execution>
						<id>exec-bower-install</id>
						<phase>generate-sources</phase>
						<configuration>
							<executable>bower</executable>
							<arguments>
								<argument>install</argument>
							</arguments>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin> <groupId>com.github.searls</groupId> <artifactId>jasmine-maven-plugin</artifactId> 
				<version>2.0-beta-02</version> <executions> <execution> <goals> <goal>test</goal> 
				</goals> </execution> </executions> <configuration> <preloadSources> <source>${project.basedir}/src/main/resources/static/lib/angular/angular.js</source> 
				<source>${project.basedir}/src/main/resources/static/lib/angular-route/angular-route.js</source> 
				<source>${project.basedir}/src/main/resources/static/lib/angular-resource/angular-resource.js</source> 
				<source>${project.basedir}/src/main/resources/static/lib/angular-mocks/angular-mocks.js</source> -->
			<!-- <source>${project.basedir}/src/main/resources/static/js/**/*.js</source> -->
			<!-- </preloadSources> <jsSrcDir>src/resources/static/js</jsSrcDir> <jsTestSrcDir>src/test/js/unit</jsTestSrcDir> 
				<specIncludes> <include>*Spec.js</include> </specIncludes> </configuration> 
				</plugin> -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>0.0.23</version>
				<executions>
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v0.12.2</nodeVersion>
							<npmVersion>2.7.6</npmVersion>
						</configuration>
					</execution>

					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<!-- Optional configuration which provides for running any npm command -->
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>

					<execution>
						<id>bower install</id>
						<goals>
							<goal>bower</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>javascript tests</id>
						<goals>
							<goal>karma</goal>
						</goals>
						<phase>test</phase>
						<configuration>
						  <karmaConfPath>${project.basedir}/src/test/js/karma.conf.js</karmaConfPath>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>npm</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>exec-npm-init</id>
								<phase>initialize</phase>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>init</argument>
									</arguments>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
							<execution>
								<id>exec-bower-init</id>
								<phase>initialize</phase>
								<configuration>
									<executable>bower</executable>
									<arguments>
										<argument>init</argument>
									</arguments>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>

						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>karma</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>exec-karma-install</id>
								<phase>generate-resources</phase>
								<configuration>
									<executable>npm</executable>
									<commandlineArgs>install karma</commandlineArgs>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
							<execution>
								<id>exec-karma-jasmine-install</id>
								<phase>generate-resources</phase>
								<configuration>
									<executable>npm</executable>
									<commandlineArgs>install karma-jasmine</commandlineArgs>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
							<execution>
								<id>exec-karma-phontomjs-install</id>
								<phase>generate-resources</phase>
								<configuration>
									<executable>npm</executable>
									<commandlineArgs>install karma-phantomjs-launcher</commandlineArgs>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
							<execution>
								<id>exec-karma-ng-html2js-install</id>
								<phase>generate-resources</phase>
								<configuration>
									<executable>npm</executable>
									<commandlineArgs>install karma-ng-html2js-preprocessor</commandlineArgs>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
