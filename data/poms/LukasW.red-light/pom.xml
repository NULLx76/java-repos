<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>ch.smaug</groupId>
	<artifactId>red-light</artifactId>
	<packaging>jar</packaging>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jersey.version>2.24.1</jersey.version>
		<server.name>192.168.1.51</server.name>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.glassfish.jersey</groupId>
				<artifactId>jersey-bom</artifactId>
				<version>${jersey.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Rest service with JSON -->
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-grizzly2-http</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-bundle</artifactId>
            <type>pom</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.test-framework</groupId>
            <artifactId>jersey-test-framework-util</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.ext.cdi</groupId>
            <artifactId>jersey-weld2-se</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.ext.cdi</groupId>
            <artifactId>jersey-cdi1x</artifactId>
        </dependency>
        
		<!-- Raspberry GPIO -->
		<dependency>
			<groupId>com.pi4j</groupId>
			<artifactId>pi4j-core</artifactId>
			<version>1.1</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.21</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.7</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>1.7.21</version>
		</dependency>

		<!-- Apache Commons Java Service -->
		<dependency>
			<groupId>commons-daemon</groupId>
			<artifactId>commons-daemon</artifactId>
			<version>1.0.15</version>
			<scope>provided</scope>
		</dependency>

		<!-- CDI -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.weld.se</groupId>
			<artifactId>weld-se-core</artifactId>
			<version>2.4.1.Final</version>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jglue.cdi-unit</groupId>
			<artifactId>cdi-unit</artifactId>
			<version>3.1.4</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>2.10</version>
			</extension>
		</extensions>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.0</version>
				<inherited>true</inherited>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<descriptors>
						<descriptor>src/assembly/raspbian.xml</descriptor>
					</descriptors>
					<finalName>${project.artifactId}</finalName>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<serverId>${server.name}</serverId>
				</configuration>
				<executions>
					<execution>
						<id>upload-war-to-server</id>
						<phase>deploy</phase>
						<goals>
							<goal>upload-single</goal>
						</goals>
						<configuration>
							<fromFile>${project.build.directory}/${project.artifactId}.tar.gz</fromFile>
							<url>scp://${server.name}/home/pi</url>
						</configuration>
					</execution>

					<execution>
						<id>install</id>
						<phase>deploy</phase>
						<goals>
							<goal>sshexec</goal>
						</goals>
						<configuration>
							<url>scp://${server.name}/home/pi</url>
							<commands>
								<command><![CDATA[[ -f /etc/init.d/${project.artifactId} ] && sudo service ${project.artifactId} stop]]></command>
								<command><![CDATA[[ -f /etc/init.d/${project.artifactId} ] && sudo update-rc.d -f ${project.artifactId} remove]]></command>
								<command>sudo rm -f /opt/${project.artifactId}/log/*</command>
								<command>sudo rm -f /opt/${project.artifactId}/err/*</command>
								<command>sudo mkdir -p /opt/${project.artifactId}</command>
								<command><![CDATA[sudo tar --overwrite --no-same-owner -xzf ${project.artifactId}.tar.gz -C /opt/${project.artifactId}]]></command>
								<command>rm ${project.artifactId}.tar.gz</command>
								<command><![CDATA[[ -f /etc/init.d/${project.artifactId} ] || sudo ln -s /opt/${project.artifactId}/bin/${project.artifactId}.sh /etc/init.d/${project.artifactId}]]></command>
								<command>sudo update-rc.d ${project.artifactId} defaults</command>
								<command>sudo systemctl daemon-reload</command>
								<command>sudo service ${project.artifactId} start</command>
							</commands>
						</configuration>
					</execution>
				</executions>
			</plugin>
			</plugins>
	</build>
</project>