<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.mkrupa</groupId>
    <artifactId>blankapp</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>

    <name>blankapp</name>

    <modules>
		  <module>blankapp-backoffice</module>
		  <module>blankapp-frontoffice</module>
		  <module>blankapp-web</module>	
	 </modules>

    <build>
		  <plugins>
			 <!-- Compile Java source code with well version and encoding -->
  			<plugin>
  				<groupId>org.apache.maven.plugins</groupId>
  				<artifactId>maven-compiler-plugin</artifactId>
  				<configuration>
  					<source>${java.version}</source>
  					<target>${java.version}</target>
            <encoding>${project.build.sourceEncoding}</encoding>
  				</configuration>
  			</plugin>
        <!-- Specify UTF-8 encoding for ressources -->
        <plugin>
  				<groupId>org.apache.maven.plugins</groupId>
  				<artifactId>maven-resources-plugin</artifactId>
  				<configuration>
  					<encoding>${project.build.sourceEncoding}</encoding>
  				</configuration>
  			</plugin>
		  </plugins>
      <pluginManagement>
  			<!-- Eclipse Project Configuration -->
  			<plugins>
  				<plugin>
  					<artifactId>maven-eclipse-plugin</artifactId>
  					<version>${eclipse-plugin.version}</version>
  					<configuration>
  						<ajdtVersion>none</ajdtVersion>
  						<downloadSources>true</downloadSources>
  						<downloadJavadocs>true</downloadJavadocs>
  						<wtpversion>2.0</wtpversion>
              <!-- Set project text file encoding -->
  						<additionalConfig>
  							<file>
  								<name>.settings/org.eclipse.core.resources.prefs</name>
  								<content><![CDATA[encoding/<project>=${project.build.sourceEncoding}]]></content>
  							</file>
  						</additionalConfig>
  					</configuration>
  				</plugin>
          <!-- JAR Building Configuration -->
  				<plugin>
  					<artifactId>maven-jar-plugin</artifactId>
  					<configuration>
  						<archive>
  							<manifest>
  								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
  							</manifest>
  						</archive>
  					</configuration>
  				</plugin>
          <!-- WAR Building Configuration -->
  				<plugin>
  					<groupId>org.apache.maven.plugins</groupId>
  					<artifactId>maven-war-plugin</artifactId>
  					<configuration>
              <failOnMissingWebXml>false</failOnMissingWebXml>
  						<archive>
  							<manifest>
  								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
  							</manifest>
  						</archive>
  					</configuration>
  				</plugin>
  			</plugins>
  		</pluginManagement>
	  </build>

    <dependencyManagement>
        <dependencies>
            <!-- Web Dependencies -->
            <!-- Annotation based webapplication -->
            <dependency>
			          <groupId>javax.servlet</groupId>
			          <artifactId>javax.servlet-api</artifactId>
			          <version>${servlet-api.version}</version>
			          <scope>provided</scope>
		        </dependency>
            <!-- Spring Boot Web -->
            <dependency>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-starter-web</artifactId>
              <version>${spring-boot.version}</version>
		        </dependency>
            
            <!-- Spring dependencies -->
            <dependency>
              <groupId>org.springframework</groupId>
              <artifactId>spring-core</artifactId>
              <version>${spring.version}</version>
            </dependency>
            <dependency>
              <groupId>org.springframework</groupId>
              <artifactId>spring-context</artifactId>
              <version>${spring.version}</version>
            </dependency>
            
            <!-- Persistence Dependencies -->
            <!-- Spring Boot Data JPA -->
            <dependency>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-starter-data-jpa</artifactId>
              <version>${spring-boot.version}</version>
		        </dependency>
            
            <!-- Security Dependencies -->
            <!-- Spring Boot Security -->
            <dependency>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-starter-security</artifactId>
              <version>${spring-boot.version}</version>
		        </dependency>
		        
            <!-- Logging dependencies -->
            <!-- SLF4J -->
            <dependency>
				      <groupId>org.slf4j</groupId>
				      <artifactId>slf4j-api</artifactId>
				      <version>${slf4j.version}</version>
			      </dependency>
            <!-- logback -->
            <dependency>
              <groupId>ch.qos.logback</groupId>
              <artifactId>logback-classic</artifactId>
              <version>${logback.version}</version>
            </dependency>
            
            <dependency>
              <groupId>com.auth0</groupId>
              <artifactId>java-jwt</artifactId>
              <version>${java-jwt.version}</version>
            </dependency>
            
            <!-- Test dependencies -->
            <!-- Spring Boot Test -->
            <dependency>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-starter-test</artifactId>
              <version>${spring-boot.version}</version>
              <scope>test</scope>
		        </dependency>
            <!-- JUnit Test -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- BDD for runtime tests -->
		        <dependency>
			          <groupId>org.hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>${hsqldb.version}</version>
                <scope>runtime</scope>
		        </dependency>
        </dependencies>
    </dependencyManagement>


    <properties>
  		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  		<java.version>1.7</java.version>
      <blankapp.version>1.0.0</blankapp.version>
      <eclipse-plugin.version>2.9</eclipse-plugin.version>
  		<junit.version>4.11</junit.version>
      <servlet-api.version>3.1.0</servlet-api.version>
      <hsqldb.version>2.3.2</hsqldb.version>
      <java-jwt.version>2.1.0</java-jwt.version>
      <slf4j.version>1.7.7</slf4j.version>
      <logback.version>1.1.2</logback.version>
      <spring-boot.version>1.1.8.RELEASE</spring-boot.version>
      <spring.version>4.1.1.RELEASE</spring.version>
  	</properties>
    
    <repositories>
  		<repository>
  			<id>spring-snapshots</id>
  			<name>Spring Snapshots</name>
  			<url>http://repo.springsource.org/snapshot</url>
  			<snapshots>
  				<enabled>true</enabled>
  			</snapshots>
  		</repository>
  		<repository>
  			<id>spring-milestones</id>
  			<name>Spring Milestones</name>
  			<url>http://repo.springsource.org/milestone</url>
  			<snapshots>
  				<enabled>false</enabled>
  			</snapshots>
  		</repository>
  	</repositories>
  	<pluginRepositories>
  		<pluginRepository>
  			<id>spring-snapshots</id>
  			<name>Spring Snapshots</name>
  			<url>http://repo.springsource.org/snapshot</url>
  			<snapshots>
  				<enabled>true</enabled>
  			</snapshots>
  		</pluginRepository>
  		<pluginRepository>
  			<id>spring-milestones</id>
  			<name>Spring Milestones</name>
  			<url>http://repo.springsource.org/milestone</url>
  			<snapshots>
  				<enabled>false</enabled>
  			</snapshots>
  		</pluginRepository>
  	</pluginRepositories>

</project>
