<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.2.8.RELEASE</version>
	</parent>

	<groupId>com.apprenda.rectangles</groupId>
	<artifactId>rectangles</artifactId>
	<version>0.0.1</version>
	<packaging>pom</packaging>

	<name>rectangles</name>
	<description>Apprenda rectangles interview exercise</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<lombok.version>1.16.10</lombok.version>
		<jopt.version>5.0.3</jopt.version>
		<docker-maven-plugin.version>0.4.10</docker-maven-plugin.version>
		<docker.repo>quay.io/codymccain</docker.repo>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Angel.SR6</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>net.sf.jopt-simple</groupId>
				<artifactId>jopt-simple</artifactId>
				<version>${jopt.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>2.2.1</version>
					<executions>
						<execution>
							<goals>
								<goal>revision</goal>
							</goals>
						</execution>
					</executions>

					<configuration>
						<prefix>git</prefix>
						<dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>
						<dateFormatTimeZone>UTC</dateFormatTimeZone>
						<verbose>false</verbose>
						<generateGitPropertiesFile>true</generateGitPropertiesFile>
						<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
						<format>properties</format>
						<skipPoms>true</skipPoms>
						<injectAllReactorProjects>false</injectAllReactorProjects>
						<failOnNoGitDirectory>false</failOnNoGitDirectory>
						<failOnUnableToExtractRepoInfo>true</failOnUnableToExtractRepoInfo>
						<skip>false</skip>
						<runOnlyOnce>false</runOnlyOnce>
						<excludeProperties>
							<!-- <excludeProperty>git.user.*</excludeProperty> -->
						</excludeProperties>
						<includeOnlyProperties>
							<!-- <includeOnlyProperty>^git.commit.id.full$</includeOnlyProperty> -->
						</includeOnlyProperties>
						<useNativeGit>false</useNativeGit>
						<abbrevLength>7</abbrevLength>
						<commitIdGenerationMode>flat</commitIdGenerationMode>
						<gitDescribe>
							<skip>false</skip>
							<always>false</always>
							<abbrev>7</abbrev>
							<dirty>-dirty</dirty>
							<match>*</match>
							<forceLongFormat>false</forceLongFormat>
						</gitDescribe>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker-maven-plugin.version}</version>
					<configuration>
						<imageName>${docker.repo}/${project.artifactId}:latest</imageName>
						<dockerDirectory>${project.build.directory}/docker-ready</dockerDirectory>
						<resources>
							<resource>
								<targetPath>/</targetPath>
								<directory>${project.build.directory}</directory>
								<include>${project.build.finalName}.jar</include>
							</resource>
						</resources>
					</configuration>
					<executions>
						<execution>
							<id>build-image</id>
							<phase>install</phase>
							<goals>
								<goal>build</goal>
							</goals>
						</execution>
						<execution>
							<id>tag-image</id>
							<phase>install</phase>
							<goals>
								<goal>tag</goal>
							</goals>
							<configuration>
								<image>${docker.repo}/${project.artifactId}:latest</image>
								<newName>${docker.repo}/${project.artifactId}:${project.version}</newName>
							</configuration>
						</execution>
						<execution>
							<id>push-image</id>
							<phase>deploy</phase>
							<goals>
								<goal>push</goal>
							</goals>
							<configuration>
								<imageName>${docker.repo}/${project.artifactId}:${project.version}</imageName>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>${basedir}/src/main/resources</directory>
				<includes>
					<include>**/application.yml</include>
					<include>**/application-*.yml</include>
					<include>**/application.properties</include>
					<include>**/application-*.properties</include>
					<include>**/bootstrap.yml</include>
					<include>**/bootstrap-*.yml</include>
					<include>**/bootstrap.properties</include>
					<include>**/bootstrap-*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<excludes>
					<exclude>**/application.yml</exclude>
					<exclude>**/application-*.yml</exclude>
					<exclude>**/application.properties</exclude>
					<exclude>**/application-*.properties</exclude>
					<exclude>**/bootstrap.yml</exclude>
					<exclude>**/bootstrap-*.yml</exclude>
					<exclude>**/bootstrap.properties</exclude>
					<exclude>**/bootstrap-*.properties</exclude>
				</excludes>
			</resource>
		</resources>
	</build>

	<profiles>
		<profile>
			<id>spring-boot</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>
					<exists>src/main/resources/application.yml</exists>
				</file>
			</activation>

			<dependencies>
				<dependency>
					<groupId>com.apprenda.rectangles</groupId>
					<artifactId>rectangles-docker</artifactId>
					<version>0.0.1</version>
				</dependency>
			</dependencies>

			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>pl.project13.maven</groupId>
						<artifactId>git-commit-id-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>docker</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>rectangles-docker</name>
					<value>true</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.apprenda.rectangles</groupId>
					<artifactId>rectangles-docker</artifactId>
					<version>0.0.1</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<!-- Import Dockerfile template -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-remote-resources-plugin</artifactId>
						<version>1.5</version>
						<configuration>
							<resourceBundles>
								<resourceBundle>com.apprenda.rectangles:rectangles-docker:0.0.1</resourceBundle>
							</resourceBundles>
							<outputDirectory>${project.build.directory}/docker-resources</outputDirectory>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>process</goal>
								</goals>
								<phase>generate-resources</phase>
							</execution>
						</executions>
					</plugin>

					<!-- Filter Dockerfile template to reference container specific Spring 
						Boot application jar -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>filter-resources</id>
								<phase>process-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/docker-ready</outputDirectory>
									<resources>
										<resource>
											<directory>${project.build.directory}/docker-resources</directory>
											<filtering>true</filtering>
										</resource>
									</resources>
									<overwrite>true</overwrite>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Create Docker container -->
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<modules>
		<module>rectangles-cli</module>
		<module>rectangles-rest</module>
		<module>rectangles-core</module>
		<module>rectangles-docker</module>
	</modules>
</project>