<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.foundation</groupId>
	<artifactId>foundation-server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>Foundation Server</name>
	<description>Foundation Server Implementation</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.2.1.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<dependencies>
		<!-- 
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>-->
		
		<!-- To run on a separate server, we need to mark tomcat starter as provided. -->
		 <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-tomcat</artifactId>
		    <scope>provided</scope>
		</dependency>

		<!-- JPA and JDBC work together to provide a foundation for Hibernate to run upon. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-security</artifactId>
	    </dependency>
	   	<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-mail</artifactId>
	    </dependency>
		<dependency>
	        <groupId>org.springframework.webflow</groupId>
	        <artifactId>spring-webflow</artifactId>
	        <version>2.4.0.RELEASE</version>
		</dependency>
		<dependency> <!-- MySQL connector used by Hibernate -->
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency> <!-- Memcached Implementation for Tomcat 8 -->
		  <groupId>de.javakaffee.msm</groupId>
		  <artifactId>memcached-session-manager-tc8</artifactId>
		  <version>1.8.2</version>
		</dependency>
		
		<!-- JSF Dependencies -->
		<!-- 
		<dependency>
			<groupId>org.apache.myfaces.core</groupId>
			<artifactId>myfaces-api</artifactId>
			<version>2.2.6</version>
		</dependency>
		<dependency>
			<groupId>org.apache.myfaces.core</groupId>
			<artifactId>myfaces-impl</artifactId>
			<version>2.2.6</version>
		</dependency>-->
		
		<!-- 
			In order to do remove web.xml and faces-config.xml, we need to allow JSF to be configured with Java.
			To do this, JSF requires Jasper's ConfigureListener. This is used when Application.java runs to configure JSF automatically.
		 -->
		<dependency> 
		    <groupId>org.apache.tomcat.embed</groupId>
		    <artifactId>tomcat-embed-jasper</artifactId>
		</dependency>
		
		<!-- OPTION: Mojarra JSF Implementation -->
		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>2.2.10</version>
		</dependency>
		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<version>2.2.10</version>
		</dependency>
		
		<!-- JSF Component Library Primefaces -->
		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>5.1</version>
		</dependency>
		
		
		<!-- PrettyFaces -->
		 
		 <!-- Rewrite is a more feature-rich and newer replacement for prettyfaces. That said, for now, I'm sticking with Pretty to help smooth the porting process. We can update to this at a later date if needed.   
		<dependency>
		    <groupId>org.ocpsoft.rewrite</groupId>
		    <artifactId>rewrite-servlet</artifactId>
		    <version>2.0.12.Final</version>
		</dependency>
		<dependency>
		    <groupId>org.ocpsoft.rewrite</groupId>
		    <artifactId>rewrite-config-prettyfaces</artifactId>
		    <version>2.0.12.Final</version>
		</dependency>-->
		
		<dependency>
			<groupId>com.ocpsoft</groupId>
			<artifactId>prettyfaces-jsf2</artifactId>
			<version>3.3.3</version>
		</dependency>
		
	</dependencies>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<start-class>foundation.Application</start-class>
		<java.version>1.8</java.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<dependencies>
					<!--  Spring Loaded Plugin. Allows Dynamic Reload of application when a class is changed. -->
			        <dependency>
			            <groupId>org.springframework</groupId>
			            <artifactId>springloaded</artifactId>
			            <version>1.2.1.RELEASE</version>
			        </dependency>
			    </dependencies>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<!-- To use snapshots, you must also use the Sonatype Snapshots respository -->
		<repository>
		   <id>sonatype-snapshots</id>
		   <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>


</project>
