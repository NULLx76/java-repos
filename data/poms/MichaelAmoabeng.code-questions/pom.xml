<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- The group Id is essentially the namespace for a maven package.-->
  <groupId>com.mike.amoabeng</groupId>
  <!-- The artifact Id is the individual package generated by the pom file. -->
  <artifactId>code-questions</artifactId>
  <version>0.1.0-SNAPSHOT</version>
  <!-- This module generates a jar file which can be leveraged by other systems. Another packaging type would be a pom file that can be used for settings in other maven modules. -->
  <packaging>jar</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <!-- Other maven modules can be included as dependencies in the system. An example here is junit an test framework structure. -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <!-- Adding the scope test prevents this  dependency from being carried over to production if this module becomes a dependency by another module.
      This essentially allows them to chose other versions of these modules and prevent dependency version mismatches.-->
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Nothing needed here in this project but plugins allow you to manipulate the build at different phases in the lifecycle.-->
    </plugins>
  </build>


</project>
