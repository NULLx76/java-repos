<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>ru.halt.practice</groupId>
    <artifactId>practice</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <modules>
        <!--<module>RestCore</module>-->
    </modules>


    <properties>
        <build.type>dev</build.type>
        <jdk.version>1.8</jdk.version>
        <jstl.version>1.2</jstl.version>
        <servletapi.version>3.1.0</servletapi.version>
        <spring.version>4.2.4.RELEASE</spring.version>
        <spring.data>1.9.2.RELEASE</spring.data>
        <hibernate.version>5.0.7.Final</hibernate.version>
        <hikari.version>2.4.3</hikari.version>
        <mysql.version>5.1.29</mysql.version>
        <jackson.core.version>2.7.0</jackson.core.version>
        <jackson.databind.version>2.4.3</jackson.databind.version>
        <practice.rest.core.version>1.0-SNAPSHOT</practice.rest.core.version>
        <junit.version>4.7</junit.version>
        <log4j.version>2.5</log4j.version>
        <joda-time.version>2.8.1</joda-time.version>
        <slf4j-api.version>1.5.11</slf4j-api.version>
        <spring.security.version>3.2.4.RELEASE</spring.security.version>
    </properties>

    <profiles>
        <profile>
            <id>dev</id>
                <properties>
                    <build.type>dev</build.type>
                </properties>
        </profile>

        <profile>
            <id>stg</id>
            <properties>
                <build.type>stg</build.type>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <!--Joda Time-->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time.version}</version>
        </dependency>
        <!---->

        <!--test-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <!---->

        <!--Spring core-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!---->

        <!--Spring MVC-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!---->

        <!-- Spring Security -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring.security.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring.security.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
        <!-- Spring Security -->

        <!-- Spring data -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>${spring.data}</version>
        </dependency>

        <!-- Hibernate entity manager -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <!-- JSTL -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
        </dependency>

        <!-- compile only, deployed container will provide this -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servletapi.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- MySql connector -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>

        <!-- HikariCP pool -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>${hikari.version}</version>
        </dependency>

        <!-- Jackson converter -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.core.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.databind.version}</version>
        </dependency>
        <!---->

        <dependency>
            <groupId>org.jadira.usertype</groupId>
            <artifactId>usertype.extended</artifactId>
            <version>5.0.0.GA</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j-api.version}</version>
            <scope>runtime</scope>
        </dependency>


        <!--<dependency>-->
            <!--<artifactId>ru.halt.rest-core</artifactId>-->
            <!--<groupId>ru.halt.practice</groupId>-->
            <!--<version>${practice.rest.core.version}</version>-->
        <!--</dependency>-->

</dependencies>

    <build>
        <finalName>Practice</finalName>
        <plugins>
            <!--build war plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <warName>${project.build.finalName}-${build.type}-${project.version}</warName>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!-- убрал, но оно работало!!! -->

            <!--<plugin>-->
                <!--<artifactId>maven-compiler-plugin</artifactId>-->
                <!--<version>3.3</version>-->
                <!--<configuration>-->
                    <!--&lt;!&ndash;<source>${jdk.version}</source>&ndash;&gt;-->
                    <!--&lt;!&ndash;<target>${jdk.version}</target>&ndash;&gt;-->
                    <!--<compilerVersion>${jdk.version}</compilerVersion>-->
                    <!--&lt;!&ndash;<compilerArgument>-Xlint:all</compilerArgument>&ndash;&gt;-->
                    <!--<showWarnings>true</showWarnings>-->
                    <!--<showDeprecation>true</showDeprecation>-->
                <!--</configuration>-->
            <!--</plugin>-->

            <!-- embedded Jetty server, for testing -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.2.11.v20150529</version>
                <configuration>
                    <scanIntervalSeconds>60</scanIntervalSeconds>
                    <webApp>
                        <contextPath>/</contextPath>
                    </webApp>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>