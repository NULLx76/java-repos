<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>nl.ordina</groupId>
	<artifactId>rxjava-through-the-monad-hole</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<rxjava.version>1.0.14</rxjava.version>
		<rxjava-string.version>1.0.1</rxjava-string.version>
		<rxjava-streams.version>1.0.1</rxjava-streams.version>
		<rxjava-apache-http.version>0.20.7</rxjava-apache-http.version>

		<servlet.version>3.0</servlet.version>
		<!-- upgrade to 2.17 gives error 500 due to Jackson problem? -->
		<jersey.version>2.8</jersey.version>

		<jetty.version>9.2.9.v20150224</jetty.version>
<!--
		<jackson.version>2.2.3</jackson.version>
		<httpclient.version>4.3.4</httpclient.version>
-->

		<slf4j.version>1.7.12</slf4j.version>
		<logback.version>1.1.2</logback.version>

		<junit.version>4.12</junit.version>
	</properties>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<inherited>true</inherited>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.glassfish.jersey</groupId>
				<artifactId>jersey-bom</artifactId>
				<version>${jersey.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Servlet 3.0 spec -->
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.servlet</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Jersey -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
		</dependency>
<!-- does not work?!
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
		</dependency>
-->
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
			<version>2.2.3</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.connectors</groupId>
			<artifactId>jersey-apache-connector</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<!-- servlet 2.0 - precludes the use of async!!
			<artifactId>jersey-container-servlet-core</artifactId> -->
			<!-- servlet 3.x compatible -->
			<artifactId>jersey-container-servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-sse</artifactId>
		</dependency>

		<!-- RatPack HTTP edge server -->
		<dependency>
			<groupId>io.ratpack</groupId>
			<artifactId>ratpack-test</artifactId>
			<version>0.9.10</version>
			<scope>test</scope>
		</dependency>

		<!-- MongoDB -->
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongodb-driver-reactivestreams</artifactId>
			<version>1.0.1</version>
		</dependency>

		<!-- something websocket? -->
		<dependency>
			<groupId>org.java-websocket</groupId>
			<artifactId>Java-WebSocket</artifactId>
			<version>1.3.0</version>
		</dependency>

		<!-- Apache commons -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.0</version>
		</dependency>

		<!-- ratpack -->
		<dependency>
			<groupId>io.ratpack</groupId>
			<artifactId>ratpack-test</artifactId>
			<version>0.9.10</version>
		</dependency>
		<dependency>
			<groupId>org.java-websocket</groupId>
			<artifactId>Java-WebSocket</artifactId>
			<version>1.3.0</version>
		</dependency>

		<!-- RX & family -->
		<dependency>
			<groupId>io.reactivex</groupId>
			<artifactId>rxjava</artifactId>
			<version>${rxjava.version}</version>
		</dependency>
		<dependency>
			<groupId>io.reactivex</groupId>
			<artifactId>rxjava-reactive-streams</artifactId>
			<version>${rxjava-streams.version}</version>
		</dependency>
		<dependency>
			<groupId>io.reactivex</groupId>
			<artifactId>rxjava-string</artifactId>
			<version>${rxjava-string.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.davidmoten</groupId>
			<artifactId>rxjava-extras</artifactId>
			<version>0.6.6</version>
		</dependency>
		<dependency>
			<groupId>com.netflix.rxjava</groupId>
			<artifactId>rxjava-apache-http</artifactId>
			<version>${rxjava-apache-http.version}</version>
		</dependency>

		<!-- mongoDB -->
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>2.11.3</version>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongodb-driver-reactivestreams</artifactId>
			<version>1.1.0</version>
		</dependency>

		<!-- logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.0.31-beta</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>2.11.3</version>
			<scope>test</scope>
		</dependency>

		<!-- start Jetty for Integration Test -->
		<dependency>  <!-- Server -->
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>${jetty.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency> <!-- WebAppContext -->
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<version>${jetty.version}</version>
			<scope>test</scope>
		</dependency>
<!--
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient.version}</version>
			<scope>test</scope>
		</dependency>
-->
		<dependency> <!-- JNDI -->
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-plus</artifactId>
			<version>${jetty.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
