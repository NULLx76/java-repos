<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>nl.tudelft.lifetiles</groupId>
	<artifactId>lifetiles-parent</artifactId>
	<packaging>pom</packaging>
	<version>1.8-SNAPSHOT</version>
	<name>lifetiles-parent</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<junit.version>4.12</junit.version>
		<mockito.version>1.9.5</mockito.version>
		<compiler.plugin.version>3.3</compiler.plugin.version>
		<pmd.plugin.version>3.4</pmd.plugin.version>
		<!-- Link to github to get around maven not providing a usable way to get a modules parent folder -->
		<pmd.config>https://raw.githubusercontent.com/ProgrammingLife5/LifeTiles/master/pmd.ruleset.xml</pmd.config>
		<jdk.version>1.8</jdk.version>
		<checkstyle.plugin.version>2.14</checkstyle.plugin.version>
		<checkstyle.version>6.6</checkstyle.version>
		<!-- Link to github to get around maven not providing a usable way to get a modules parent folder -->
		<checkstyle.config>https://raw.githubusercontent.com/ProgrammingLife5/LifeTiles/master/checkstyle-config.xml</checkstyle.config>
		<findbugs.version>3.0.1</findbugs.version>
		<jacoco.version>0.7.2.201409121644</jacoco.version>
	</properties>

	<profiles>
		<profile>
			<activation>
				<jdk>${jdk.version}</jdk>
			</activation>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>maven-central-repo</id>
			<url>http://repo1.maven.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
            <version>2.0.1</version>
        </dependency>
	</dependencies>
	<modules>
		<module>lifetiles-sequence</module>
		<module>lifetiles-core</module>
		<module>lifetiles-graph</module>
		<module>lifetiles-tree</module>
		<module>lifetiles-launcher</module>
	</modules>

	<build>
		<plugins>
		    <!--################################################################ 
                                     Compiler plugin 
             ###################################################################-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler.plugin.version}</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>

			<!--################################################################ 
                                     Checkstyle 
             ###################################################################-->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle.plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<!-- internal checkstyle version -->
						<version>${checkstyle.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<failOnViolation>false</failOnViolation>
					<linkXRef>false</linkXRef>
					<configLocation>${checkstyle.config}</configLocation>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--################################################################ 
			                         PMD 
			 ###################################################################-->
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${pmd.plugin.version}</version>
                <configuration>
                    <targetJdk>1.8</targetJdk>
                    <linkXRef>false</linkXRef>
                    <failOnViolation>false</failOnViolation>
                    <verbose>true</verbose>
                    <rulesets>
                        <ruleset>${pmd.config}</ruleset>
                    </rulesets>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                            <goal>cpd-check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			<!--################################################################ 
                                     Findbugs 
             ###################################################################-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${findbugs.version}</version>
				<configuration>
					<!-- Enables analysis which takes more memory but finds more bugs. If 
						you run out of memory, changes the value of the effort element to 'Low'. -->
					<effort>Max</effort>
					<!-- Build doesn't fail if problems are found -->
					<failOnError>false</failOnError>
					<!-- Reports all bugs (other values are medium and max) -->
					<threshold>Low</threshold>
					<!-- Produces XML report -->
					<xmlOutput>true</xmlOutput>
					<!-- Configures the directory in which the XML report is created -->
					<findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
				</configuration>
				<executions>
					<!-- Ensures that FindBugs inspects source code when project is compiled. -->
					<execution>
						<id>analyze-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--################################################################ 
                                     JaCoCo 
             ###################################################################-->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptor>src/assembly/bin.xml</descriptor>
					<finalName>lifetiles-${project.version}</finalName>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
             <!--################################################################ 
                                     Coveralls 
             ###################################################################-->

			<plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>3.1.0</version>
            </plugin>
		</plugins>
	</build>
	
	
	
	
	
	<reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${pmd.plugin.version}</version>
                <configuration>
                    <targetJdk>1.8</targetJdk>
                    <linkXRef>false</linkXRef>
                    <failOnViolation>false</failOnViolation>
                    <verbose>true</verbose>
                    <rulesets>
                        <ruleset>${pmd.config}</ruleset>
                    </rulesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle.plugin.version}</version>
                <configuration>
                    <failOnViolation>false</failOnViolation>
                    <linkXRef>false</linkXRef>
                    <configLocation>${checkstyle.config}</configLocation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs.version}</version>
                <configuration>
                    <!-- Enables analysis which takes more memory but finds more bugs. If 
                        you run out of memory, changes the value of the effort element to 'Low'. -->
                    <effort>Max</effort>
                    <!-- Build doesn't fail if problems are found -->
                    <failOnError>false</failOnError>
                    <!-- Reports all bugs (other values are medium and max) -->
                    <threshold>Low</threshold>
                    <!-- Produces XML report -->
                    <xmlOutput>true</xmlOutput>
                    <!-- Configures the directory in which the XML report is created -->
                    <findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

</project>
