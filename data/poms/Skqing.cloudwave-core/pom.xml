<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.cloudwave.cwfw</groupId>
	<artifactId>cwfw-core</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>cwfw-core</name>

	<!-- http://maven.oschina.net/help.html http://my.oschina.net/huangyong/blog/180189 -->

	<!-- 属性 -->
	<properties>
		<!-- Generic properties -->
		<jdk.version>1.7</jdk.version>
		<java.version>1.7</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Java EE dependencies -->
		<jsp.version>2.2</jsp.version>
		<jstl.version>1.2</jstl.version>
		<servlet.version>2.5</servlet.version>
		<jaxb-impl.version>2.2.7</jaxb-impl.version>

		<!-- 框架 -->
		<spring.version>3.2.4.RELEASE</spring.version>
		<spring.rest>1.1.0.M1</spring.rest>
		<mybatis.version>3.2.2</mybatis.version>

		<!-- AOP -->
		<aspectj.version>1.7.3</aspectj.version>

		<!-- Database access -->
		<tomcat-jdbc.version>7.0.42</tomcat-jdbc.version>
		<ehcache.version>2.7.2</ehcache.version>
		<hsqldb.version>2.3.0</hsqldb.version>

		<!-- Test -->
		<junit.version>4.11</junit.version>
		<hamcrest.version>1.3</hamcrest.version>

		<!-- Logging -->
		<logback.version>1.0.13</logback.version>
		<slf4j.version>1.7.5</slf4j.version>

		<!-- 任务调度 -->
		<quartz.version>2.2.0</quartz.version>

		<!-- 消息系统 -->
		<activemq.version>5.9.0</activemq.version>

		<!-- 工具 -->
		<fastjson.version>1.1.32</fastjson.version>
		<jackson.version>2.2.2</jackson.version>
		<kaptcha.version>2.3.2</kaptcha.version>

		<!-- Dates -->
		<jodatime.version>2.3</jodatime.version>
		<jodatime-jsptags.version>1.1.1</jodatime-jsptags.version>

		<!-- Bean validation -->
		<validation.version>1.1.0.Final</validation.version>
		<hibernate-validator.version>5.0.1.Final</hibernate-validator.version>

		<!-- RSS -->
		<rome.version>1.0</rome.version>

		<!-- Web dependencies -->
		<webjars-bootstrap.version>2.3.0</webjars-bootstrap.version>
		<webjars-jquery-ui.version>1.9.2</webjars-jquery-ui.version>
		<webjars-jquery.version>1.9.0</webjars-jquery.version>
		<dandelion.datatables.version>0.8.14</dandelion.datatables.version>
	</properties>
	<!-- 项目依赖 -->
	<!-- http://search.maven.org/ -->
	<dependencies>
		<!-- Spring 的核心工具包 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
			<!-- <exclusions> <exclusion> <groupId>commons-logging</groupId> <artifactId>commons-logging</artifactId> 
				</exclusion> </exclusions> -->
		</dependency>
		<!-- 对JDBC的简单封装 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- 整合第三方的ORM框架，如hibernate,ibatis,jdo，以及spring的JPA实现 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Spring的面向切面编程,提供AOP(面向切面编程)实现 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- SpringWeb下的工具包 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Spring 对Object/XMl的映射支持,可以让Java与XML之间来回切换 -->
		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-oxm</artifactId> 
			<version>${spring.version}</version> </dependency> -->
		<!-- Spring提供在基础IoC功能上的扩展服务，此外还提供许多企业级服务的支持， 如邮件服务、任务调度、JNDI定位、EJB集成、远程访问、缓存以及各种视图层框架的封装等 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Spring-context的扩展支持,用于MVC方面 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- SpringIoC(依赖注入)的基础实现 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Spring提供对AspectJ框架的整合 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Spring独立的asm程序,相遇Spring2.5.6的时候需要asmJar 包.3.0开始提供他自己独立的asmJar, 3.2 
			M2之后整合到 spring-core中 -->
		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-asm</artifactId> 
			<version>${spring.version}</version> </dependency> -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- used by Spring MVC Test framework -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- 对Junit等测试框架的简单封装 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Spring Data REST -->
		<!-- <dependency> <groupId>org.springframework.data</groupId> <artifactId>spring-data-rest-webmvc</artifactId> 
			<version>${spring.rest}</version> </dependency> <dependency> <groupId>org.springframework.data</groupId> 
			<artifactId>spring-data-rest-repository</artifactId> <version>${spring.rest}</version> 
			</dependency> <dependency> <groupId>org.springframework.data</groupId> <artifactId>spring-data-rest-core</artifactId> 
			<version>${spring.rest}</version> </dependency> -->

		<!-- Spring Data JPA -->
		<!-- <dependency> <groupId>org.springframework.data</groupId> <artifactId>spring-data-jpa</artifactId> 
			<version>1.4.0.BUILD-SNAPSHOT</version> </dependency> <dependency> <groupId>org.springframework.hateoas</groupId> 
			<artifactId>spring-hateoas</artifactId> <version>0.7.0.RELEASE</version> 
			</dependency> <dependency> <groupId>org.springframework.plugin</groupId> 
			<artifactId>spring-plugin-core</artifactId> <version>0.8.0.RELEASE</version> 
			</dependency> -->

		<!-- Spring Social 是 Spring 框架的扩展，用来方便开发Web社交应用程序，可通过该项目来创建与各种社交网站的交互，例如 
			Twitter、Facebook、LinkedIn 和 TripIt 等。 -->
		<!-- <dependency> <groupId>org.springframework.social</groupId> <artifactId>spring-social-core</artifactId> 
			<version>1.0.2.RELEASE</version> </dependency> -->


		<!-- <dependency> <groupId>org.springside</groupId> <artifactId>springside-core</artifactId> 
			<version>${springside.version}</version> </dependency> -->

		<!-- 数据持久层：mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency>

		<!-- 数据库连接池 -->
		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.2.1</version>
		</dependency>

		<!-- 阿里巴巴的数据库驱动 http://code.alibabatech.com/wiki/display/Druid/Get+Druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>0.2.12</version>
		</dependency>
		<!-- driver mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.9</version>
		</dependency>
		<!-- MongoDB驱动 -->
		<!-- <dependency> <groupId>org.mongodb</groupId> <artifactId>mongo-java-driver</artifactId> 
			<version>3.0.0</version> </dependency> -->
		<!-- <dependency> <groupId>jstl</groupId> <artifactId>jstl</artifactId> 
			<version>1.2</version> </dependency> -->

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- NIO Server -->
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty</artifactId>
			<version>3.6.6.Final</version>
		</dependency>
		<!-- <dependency> <groupId>io.netty</groupId> <artifactId>netty-all</artifactId> 
			<version>4.0.6.Final</version> </dependency> -->

		<!-- 为简化JMS API的使用而作的简单封装 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- 消息总线系统 -->
		<!-- 注释原因:
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-all</artifactId>
			<version>${activemq.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		 -->
		 
		<!-- <dependency> <groupId>org.apache.activemq</groupId> <artifactId>activemq-core</artifactId> 
			<version>5.8.0</version> </dependency> -->
		<!-- JMS end -->
		<!-- 分布式消息订阅 -->
		<!-- 
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka_2.10</artifactId>
			<version>0.8.0</version>
		</dependency>
		 -->
            
        <!-- 游戏消息系统
        <dependency>
			<groupId>org.apache.mina</groupId>
			<artifactId>mina-core</artifactId>
			<version>2.0.7</version>
		</dependency>
         -->
                
		<!-- 任务调度系统 -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>${quartz.version}</version>
		</dependency>
		<!-- 
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz-oracle</artifactId>
			<version>2.1.7</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz-weblogic</artifactId>
			<version>2.1.7</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz-jboss</artifactId>
			<version>2.1.7</version>
		</dependency>
		 -->

		<!-- 缓存 -->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>${ehcache.version}</version>
		</dependency>

		<!-- 使用了spring-aspects就不用这两个了,具体还不清楚,可能是有冲突的 -->
		<!-- <dependency> <groupId>org.aspectj</groupId> <artifactId>aspectjrt</artifactId> 
			<version>1.7.2</version> <scope>runtime</scope> </dependency> <dependency> 
			<groupId>org.aspectj</groupId> <artifactId>aspectjweaver</artifactId> <version>1.7.2</version> 
			<scope>runtime</scope> </dependency> -->
		<!-- <dependency> <groupId>asm</groupId> <artifactId>asm-all</artifactId> 
			<version>3.3.1</version> </dependency> -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
		</dependency>

		<dependency>
			<!-- Required by commons-fileupload -->
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
		<!-- 集合框架工具包 -->
		<!-- <dependency> <groupId>commons-collections</groupId> <artifactId>commons-collections4</artifactId> 
			<version>4.0-alpha1</version> </dependency> -->
		<!-- 集合工具类 -->
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<!-- 数学运算工具类 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.2</version>
		</dependency>
		<!-- 字符串加密工具包 -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.8</version>
		</dependency>
		<!-- The Apache Commons Compress library defines an API for working with 
			ar, cpio, Unix dump, tar, zip, gzip, XZ, Pack200, bzip2, 7z and arj files. -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.5</version>
		</dependency>
		<!-- 配置参数读取工具类 -->
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>1.9</version>
		</dependency>



		<!-- Logging with SLF4J & LogBack -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
			<scope>compile</scope>
		</dependency>
		<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>jcl-over-slf4j</artifactId> 
			<version>${slf4j.version}</version> </dependency> <dependency> <groupId>org.slf4j</groupId> 
			<artifactId>jul-to-slf4j</artifactId> <version>${slf4j.version}</version> 
			</dependency> -->
		<!-- http://logback.qos.ch/ -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-access</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<!-- logback配置示例 -->
		<!-- 
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-examples</artifactId>
			<version>${logback.version}</version>
		</dependency>
		 -->
		<dependency>
			<groupId>org.logback-extensions</groupId>
			<artifactId>logback-ext-spring</artifactId>
			<version>0.1.1</version>
			<scope>runtime</scope>
		</dependency>

            

		<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-log4j12</artifactId> 
			<version>1.7.5</version> </dependency> -->

		<!-- 来自阿里巴巴开源社区的JSON序列化和反序列化工具 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>


		<!-- spring mvc 返回JSON时依赖的JAR包 -->
		<!-- <dependency> <groupId>org.codehaus.jackson</groupId> <artifactId>jackson-core-asl</artifactId> 
			<version>1.9.12</version> </dependency> -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jaxb-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<!-- http://spring-json.sourceforge.net/index.html <dependency> <groupId>net.sf.spring-json</groupId> 
			<artifactId>spring-json</artifactId> <version>1.3.1</version> </dependency> -->

		<!-- 日期和时间才处理工具,用户代替JDK自带时间类 -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${jodatime.version}</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time-jsptags</artifactId>
			<version>${jodatime-jsptags.version}</version>
		</dependency>

		<!-- Bean validation -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${validation.version}</version>
		</dependency>
		<!-- http://docs.jboss.org/hibernate/validator/5.0/reference/en-US/html/ -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version>
		</dependency><!-- 这个jar引用了jboss-logging.jar -->
		<!-- Bean验证框架 http://www.stripesframework.org/display/stripes/Home -->
		<dependency>
			<groupId>net.sourceforge.stripes</groupId>
			<artifactId>stripes</artifactId>
			<version>1.5.7</version>
		</dependency>

		<!-- Javolution 提供一个高性的Java集合（collection ）类库和一些实用的工具类 -->
		<!-- <dependency> <groupId>org.javolution</groupId> <artifactId>javolution-core-java</artifactId> 
			<version>6.0.0</version> </dependency> -->
		<!-- 验证码生成库 https://code.google.com/p/kaptcha/ 作者拒绝受Maven管理, 所以需要在本地版本库添加kaptcha-2.3.2.jar -->
		<dependency>
			<groupId>com.google.code.kaptcha</groupId>
			<artifactId>kaptcha</artifactId>
			<version>${kaptcha.version}</version>
		</dependency>

		<!-- 生成缩略图工具 https://code.google.com/p/thumbnailator/ http://rensanning.iteye.com/blog/1545708 -->
		<dependency>
			<groupId>net.coobird</groupId>
			<artifactId>thumbnailator</artifactId>
			<version>0.4.6</version>
		</dependency>

		<!-- 用于解析图片EXIF信息 其中metadata-extractor未受Maven管理 -->
		<dependency>
			<groupId>com.google.code.metadata</groupId>
			<artifactId>metadata-extractor</artifactId>
			<version>2.6.4</version>
		</dependency>
		<dependency>
			<groupId>com.adobe.xmp</groupId>
			<artifactId>xmpcore</artifactId>
			<version>5.1.2</version>
		</dependency>


		<!-- 基于多叉树的敏感词、关键词过滤的工具包，用于java中的敏感词过滤 1、本Java工具包由北京师范大学2000级计算机系 张人杰 开发制作 
			基于多叉树的查找，任何问题请联系： alex.zhangrj@hotmail.com 2、工具包自带敏感词词库，第一次调用时读入词库，故第一次调用时间可能较长，在类加载后普通pc机上html过滤5000字在80毫秒左右，纯文本35毫秒左右。 
			3、如需自定义词库，将jar包考入WEB-INF工程的lib目录，在WEB-INF/classes目录下建一个utf-8的words.dict文本文件，在该文件中以“关键字=级别”的方式写入，比如： 
			中国共产党=4 中国人民=1 0为级别最小，过滤后返回原字符串中出现的最高级别 调用方法：WordFilterUtil.filterHtml(str,''); -->
		<!-- <dependency> <groupId>com.google.code</groupId> <artifactId>alex-word-filter</artifactId> 
			<version>0.1</version> </dependency> -->

	</dependencies>

	<!-- 编译配置 -->
	<build>
		<!-- 最终的构建名称 -->
		<finalName>${project.artifactId}-${project.version}</finalName>
		<!-- 指定构建目标 -->
		<defaultGoal>compile</defaultGoal>

		<!-- 指定工作目录 -->
		<!-- <directory>${basedir}/target</directory> -->

		<!-- 资源目录 -->
		<sourceDirectory>${basedir}/src/main/java</sourceDirectory>
		<testSourceDirectory>${basedir}/src/test/java</testSourceDirectory>
		<!-- <scriptSourceDirectory>js/scripts</scriptSourceDirectory> -->

		<!-- 输出目录 -->
		<outputDirectory>${basedir}/target/classes</outputDirectory>
		<testOutputDirectory>${basedir}/target/test-classes</testOutputDirectory>
		<!-- <outputDirectory>${basedir}/src/main/webapp/WEB-INF/classes</outputDirectory> 
			<testOutputDirectory>${basedir}/src/main/webapp/WEB-INF/classes</testOutputDirectory> -->

		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/java/cwcore</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/java/cwserver</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/java/cwquartz</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/java/cwiface</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/java/cwriding</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<showWarnings>true</showWarnings>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
				<executions>
					<execution>
						<id>enforce-banned-dependencies</id>
						<configuration>
							<rules>
								<bannedDependencies>
									<searchTransitive>true</searchTransitive>
									<excludes>
										<exclude>javassist:javassist</exclude>
										<exclude>commons-logging</exclude>
										<exclude>aspectj:aspectj*</exclude>
										<exclude>hsqldb:hsqldb</exclude>
										<exclude>log4j:log4j</exclude>
										<exclude>org.slf4j:1.5*</exclude>
										<exclude>org.springframework:2.*</exclude>
										<exclude>org.springframework:3.0.*</exclude>
									</excludes>
								</bannedDependencies>
							</rules>
						</configuration>
					</execution>
				</executions>

				<!-- <dependencies> <dependency> <groupId>org.codehaus.groovy</groupId> 
					<artifactId>groovy-eclipse-compiler</artifactId> <version>2.7.0-01</version> 
					</dependency> </dependencies> -->
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.16</version>
				<configuration>
					<includes>
						<include>**/*Tests.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
				<!-- <executions> <execution> <id>copy-log4j-to-glassfish</id> <phase>package</phase> 
					<goals> <goal>copy-resources</goal> </goals> <configuration> <outputDirectory>${glassfish.conf}</outputDirectory> 
					<resources> <resource> <directory>${conf.location}</directory> <includes> 
					<include>log4j.xml</include> </includes> </resource> </resources> </configuration> 
					</execution> </executions> -->
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>default-war</id>
						<phase>package</phase>
						<goals>
							<goal>war</goal>
						</goals>
						<configuration>
							<classifier>war</classifier>
							<packagingExcludes>WEB-INF/web.xml</packagingExcludes>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<warName>${project.artifactId}-${project.version}</warName>
					<!-- <webappDirectory>${basedir}/webapp</webappDirectory> <warSourceDirectory>${basedir}/webapp</warSourceDirectory> -->
					<!-- <webResources> <resource> <directory>src/main/webapp</directory> 
						<includes> <include>version.txt</include> </includes> <filtering>true</filtering> 
						</resource> </webResources> -->
				</configuration>
			</plugin>

			<plugin>
				<!-- jetty 插件 -->
				<!-- 配置参考：http://wiki.eclipse.org/Jetty/Feature/Jetty_Maven_Plugin -->
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.12.v20130726</version>
				<configuration>
					<webApp>
						<contextPath>/</contextPath>
						<!-- <contextPath>/${build.finalName}</contextPath> -->
						<baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
							<resourcesAsCSV>src/main/webapp</resourcesAsCSV>
						</baseResource>
					</webApp>
					<!-- 默认为0表示禁用热部署，非0为支持热部署 -->
					<scanIntervalSeconds>1</scanIntervalSeconds>
					<scanTargetPatterns>
						<scanTargetPattern>
							<directory>src/main/webapp</directory>
							<includes>
								<include>**/*.xml</include>
								<include>**/*.properties</include>
							</includes>
						</scanTargetPattern>
					</scanTargetPatterns>
					<connectors>
						<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
							<port>8080</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>
					<requestLog implementation="ch.qos.logback.access.jetty.RequestLogImpl">
						<fileName>${project.build.outputDirectory}/logback-access.xml</fileName>
						<!-- <fileName>./src/main/resources/logback-access.xml</fileName> -->
					</requestLog>

					<systemProperties>
						<systemProperty>
							<name>logback.configurationFile</name>
							<value>${project.build.outputDirectory}/logback.xml</value>
						</systemProperty>
					</systemProperties>
				</configuration>
				<dependencies>
					<!-- 让jetty插件使用logback输出日志 -->
					<dependency>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
						<version>${slf4j.version}</version>
						<scope>compile</scope>
					</dependency>
					<dependency>
						<groupId>ch.qos.logback</groupId>
						<artifactId>logback-access</artifactId>
						<version>${logback.version}</version>
					</dependency>
					<dependency>
						<groupId>ch.qos.logback</groupId>
						<artifactId>logback-classic</artifactId>
						<version>${logback.version}</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<!-- <configuration> <excludes> <exclude>struts.xml</exclude> <exclude>sqlconfig.xml</exclude> 
					<exclude>lang_app_en_GB.properties</exclude> <exclude>lang_app_zh_CN.properties</exclude> 
					</excludes> </configuration> -->
			</plugin>

			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-assembly-plugin</artifactId> 
				<executions> <execution> <id>distr-assembly</id> <phase>package</phase> <goals> 
				<goal>single</goal> </goals> <configuration> <descriptors> <descriptor>src/main/assembly/assembly-jsp.xml</descriptor> 
				</descriptors> </configuration> </execution> </executions> <configuration> 
				<descriptors> <descriptor>src/main/assembly/assembly-distr.xml</descriptor> 
				</descriptors> </configuration> </plugin> -->
		</plugins>
	</build>
	<reporting>
		<outputDirectory>${basedir}/target/site</outputDirectory>
		<plugins>
			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
				<reportSets>
					<reportSet></reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<!-- More Project Information -->
	<description>移动服务端框架</description>
	<url>http://github.com/dolphinboy/cloudwave-core.git</url>
	<inceptionYear>yes</inceptionYear>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>
	<organization>
		<name>CloudWave</name>
		<url>http://cloudwave.org</url>
	</organization>
	<developers>
		<developer>
			<id>DolphinBoy</id>
			<name>DolphinBoy</name>
			<email>dolphinboyo@gmail.com</email>
			<url>http://dolphinboy.me</url>
			<organization>CloudWave</organization>
			<organizationUrl>http://github.com/dolphinboy/cloudwave</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>-6</timezone>
			<properties>
				<picUrl>http://tinyurl.com/prv4t</picUrl>
			</properties>
		</developer>
	</developers>
	<contributors>
		<contributor>
			<name>AliceGirl</name>
			<email>name@gmail.com</email>
			<url>http://noellemarie.com</url>
			<organization>Noelle Marie</organization>
			<organizationUrl>http://noellemarie.com</organizationUrl>
			<roles>
				<role>tester</role>
			</roles>
			<timezone>America/Vancouver</timezone>
			<properties>
				<gtalk>some.name@gmail.com</gtalk>
			</properties>
		</contributor>
	</contributors>



	<!-- Environment Settings -->
	<issueManagement>
		<system>Github</system>
		<url>https://github.com/DolphinBoy/cloudwave-core/issues</url>
	</issueManagement>
	<!-- <ciManagement> <system>continuum</system> <url>http://127.0.0.1:8080/continuum</url> 
		<notifiers> <notifier> <type>mail</type> <sendOnError>true</sendOnError> 
		<sendOnFailure>true</sendOnFailure> <sendOnSuccess>false</sendOnSuccess> 
		<sendOnWarning>false</sendOnWarning> <configuration><address>continuum@127.0.0.1</address></configuration> 
		</notifier> </notifiers> </ciManagement> <mailingLists> <mailingList> <name>User 
		List</name> <subscribe>user-subscribe@127.0.0.1</subscribe> <unsubscribe>user-unsubscribe@127.0.0.1</unsubscribe> 
		<post>user@127.0.0.1</post> <archive>http://127.0.0.1/user/</archive> <otherArchives> 
		<otherArchive>http://base.google.com/base/1/127.0.0.1</otherArchive> </otherArchives> 
		</mailingList> </mailingLists> -->

	<scm>
		<url>https://github.com/DolphinBoy/cloudwave-core</url>
		<connection>scm:git:git://github.com/DolphinBoy/cloudwave.git</connection>
		<developerConnection>scm:git:ssh://git@github.com:DolphinBoy/cloudwave.git</developerConnection>
	</scm>
	<distributionManagement>
		<repository>
			<id>osc</id>
			<name>OSC</name>
			<url>http://maven.oschina.net/content/repositories/cwfw-core/</url>
		</repository>
	</distributionManagement>
	<!-- 远程版本库 -->
	<repositories>
		<!-- <repository> <id>springsource-repo</id> <name>SpringSource Repository 
			</name> <url>http://repo.springsource.org/release</url> </repository> <repository> 
			<id>apache.nexus</id> <name>ASF Nexus Staging</name> <url>https://repository.apache.org/content/groups/staging/</url> 
			</repository> <repository> <id>typesafe</id> <name>typesafe</name> <url>http://repo.typesafe.com/typesafe/releases/</url> 
			</repository> -->
		<repository>
			<id>sonatype</id>
			<name>Sonatype</name>
			<url>https://oss.sonatype.org/content/groups/public/</url>
		</repository>
		<repository>
			<id>mvnrepository-repo</id>
			<name>mvnrepository-Repository</name>
			<url>http://mvnrepository.com</url>
		</repository>
		<repository>
			<id>fusesource</id>
			<name>fusesource-opensource</name>
			<url>http://repo.fusesource.com</url>
		</repository>
		<!-- Springframework 版本库 -->
		<repository>
			<id>springsource-repo</id>
			<name>SpringSource Repository</name>
			<url>http://repo.springsource.org/release</url>
		</repository>
		<!-- 阿里巴巴开源版本库 -->
		<repository>
			<id>alibaba-opensource</id>
			<name>alibaba-opensource</name>
			<url>http://code.alibabatech.com/mvn/releases/</url>
			<layout>default</layout>
		</repository>
	</repositories>

</project>