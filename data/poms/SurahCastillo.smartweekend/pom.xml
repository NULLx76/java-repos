<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>es.smartweekend.web.backend</groupId>
	<artifactId>EventWebBackend</artifactId>
	<packaging>jar</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>${project.artifactId} Project</name>
	<url>http://maven.apache.org</url>

	<properties>
		<!-- Data source properties -->
		<dataSource.user>smartweekend</dataSource.user>
		<dataSource.password>qwertyuiop</dataSource.password>
		<testDataSource.user>${dataSource.user}</testDataSource.user>
		<testDataSource.password>${dataSource.password}</testDataSource.password>

		<!-- Hibernate properties -->
		<hibernate.show_sql>true</hibernate.show_sql>
		<hibernate.format_sql>true</hibernate.format_sql>
		<hibernate.use_sql_comments>true</hibernate.use_sql_comments>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<profiles>
		<profile>
			<id>mysql</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- JDBC driver properties -->
				<jdbcDriver.groupId>mysql</jdbcDriver.groupId>
				<jdbcDriver.artifactId>mysql-connector-java</jdbcDriver.artifactId>
				<jdbcDriver.version>5.1.33</jdbcDriver.version>
				<jdbcDriver.className>com.mysql.jdbc.Driver</jdbcDriver.className>

				<!-- Data source properties -->
				<dataSource.url>jdbc:mysql://localhost/smartweekend</dataSource.url>
				<testDataSource.url>${dataSource.url}test</testDataSource.url>
				<dataSource.createTablesScript>MYSQL_CreateTables.sql</dataSource.createTablesScript>
				<dataSource.createDataScript>MYSQL_CreateData.sql</dataSource.createDataScript>

				<!-- Hibernate properties -->
				<hibernate.dialect>org.hibernate.dialect.MySQLDialect</hibernate.dialect>
			</properties>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.glassfish.jersey</groupId>
				<artifactId>jersey-bom</artifactId>
				<version>2.14</version>
				<!-- <version>2.4.1</version> -->
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.3.6.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.common</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<version>4.0.5.Final</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.7</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.33</version>
		</dependency>

		<!-- Spring -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>4.1.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>4.1.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>4.1.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>4.1.1.RELEASE</version>
			<scope>test</scope>
		</dependency>


		<!-- Dependencias de Jersey -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-grizzly2-http</artifactId>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>

		<dependency>
			<groupId>com.thetransactioncompany</groupId>
			<artifactId>cors-filter</artifactId>
			<version>2.2.1</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>

		<!-- Dependencias de JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<!-- Dependencias de java.mail -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- Added to avoid problems with the maven plugin for eclipse -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>sql-maven-plugin</artifactId>
										<versionRange>1.5</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>es.smartweekend.web.backend.jersey.Main</mainClass>
							<addClasspath>true</addClasspath>
							<classpathPrefix>dependency-jars/</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.9</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/dependency-jars/</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<inherited>true</inherited>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.3.2</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>es.smartweekend.web.backend.jersey.Main</mainClass>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.33</version>
					</dependency>
				</dependencies>
				<configuration>
					<driver>${jdbcDriver.className}</driver>
					<url>${dataSource.url}</url>
					<username>${dataSource.user}</username>
					<password>${dataSource.password}</password>
					<autocommit>true</autocommit>
					<onError>continue</onError>
					<orderFile>descending</orderFile>
					<fileset>
						<basedir>${basedir}</basedir>
						<includes>
							<include>src/sql/${dataSource.createTablesScript}</include>
							<include>src/sql/${dataSource.createDataScript}</include>
						</includes>
					</fileset>
				</configuration>
				<executions>
					<execution>
						<id>create-tables-for-testing</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<driver>${jdbcDriver.className}</driver>
							<url>${testDataSource.url}</url>
							<username>${testDataSource.user}</username>
							<password>${testDataSource.password}</password>
							<autocommit>true</autocommit>
							<onError>continue</onError>
							<fileset>
								<basedir>${basedir}</basedir>
								<includes>
									<include>src/sql/${dataSource.createTablesScript}</include>
								</includes>
							</fileset>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

		<resources>
			<resource>
				<targetPath>.</targetPath>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>spring-config-test.xml</include>
					<include>hibernate-config-experiments.xml</include>
				</includes>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>

		</testResources>
	</build>
</project>
