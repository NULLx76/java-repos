<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!-- The parent POM does not contain any information required to build this 
		example, it's only here for organisational purposes so feel free to remove/replace 
		this. -->
	<groupId>fr.omega.app.mdm.gare</groupId>
	<artifactId>gare-webservice</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>GARE Web Service</name>
	<description>Documented RESTful WebService WAR with Swagger, Spring and CXF</description>

	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>


		<version.compiler.plugin>2.3.1</version.compiler.plugin>
		<skipTests>true</skipTests>
		<maven.compiler.target>1.7</maven.compiler.target>
		<maven.compiler.source>1.7</maven.compiler.source>
		<version.maven-surefire-plugin>2.15</version.maven-surefire-plugin>
		<version.maven-bundle-plugin>2.3.7</version.maven-bundle-plugin>

		<!-- the version of the BOM, defining all the dependency versions -->
		<fabric8.bom.version>1.1.0.CR5</fabric8.bom.version>
		<fabric.version>1.1.0.CR5</fabric.version>

		<!-- fabric8 deploy profile configuration -->
		<fabric8.profile>quickstarts-war-rest</fabric8.profile>
		<fabric8.parentProfiles>containers-tomcat</fabric8.parentProfiles>
		<!-- we can define what the context path should be using a fixed name -->
		<fabric8.webContextPath>rest</fabric8.webContextPath>
	</properties>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>

	<dependencies>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>2.7.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http-jetty</artifactId>
			<version>2.7.1</version>
		</dependency>

		<!-- enable JMX -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-management</artifactId>
			<version>2.7.1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>3.2.9.RELEASE</version>
		</dependency>

		<!-- We are also building a small Java client application that we can use 
			to test our web web services. For performing the HTTP requests, we are using 
			Apache Commons HttpClient. -->
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>

		<!-- For logging, we will use SLF4J, which is also available in the container 
			by default. -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
		</dependency>

		<!-- Test Dependencies -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<!-- Add the slf4j-log4j12 dependency jar for testing -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.5</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.wordnik</groupId>
			<artifactId>swagger-jaxrs_2.10</artifactId>
			<version>1.3.0</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
			<version>1.1.1</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<!-- Skip Test by default and enable them only in Test profile -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${version.maven-surefire-plugin}</version>
				<configuration>
					<skipTests>${skipTests}</skipTests>
				</configuration>
			</plugin>

			<!-- Compiler plugin enforces Java 1.7 compatibility and activates annotation 
				processors -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.compiler.plugin}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
		</plugins>

	</build>

</project>
