<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.bitfiction</groupId>
	<artifactId>mvctemplate</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>
	<name>mvctemplate</name>
	<properties>
		<javaee6.with.tools.version>1.0.0.M1</javaee6.with.tools.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-6.0-with tools stack (you can 
				read this as the JBoss stack of the Java EE 6 APIs, with some extras tools 
				for your project, such as Arquillian for testing) -->
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-tools</artifactId>
				<version>${javaee6.with.tools.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.jboss.spec</groupId>
			<artifactId>jboss-javaee-6.0</artifactId>
			<version>1.0.0.Final</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JPA API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- JSR-303 (Bean Validation) Implementation -->
		<!-- Provides portable constraints such as @Email -->
		<!-- Hibernate Validator is shipped in JBoss AS 7 -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.2.0.Final</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Annotation processor to generate the JPA 2.0 metamodel classes for 
			typesafe criteria queries -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<version>1.1.1.Final</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.ws.rs</groupId>
			<artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
<!-- 			<version>1.0.0.Final</version> -->
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-multipart-provider</artifactId>
			<version>2.3.6.Final</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-cdi</artifactId>
			<version>2.3.6.Final</version>
			<scope>provided</scope>
		</dependency>

		<!-- optional, good for handle I/O task -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.0.1</version>
		</dependency>

		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
<!-- 			<version>1.0-SP4</version> -->
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<artifactId>jboss-interceptor-api</artifactId>
					<groupId>org.jboss.interceptor</groupId>
				</exclusion>
				<!-- <exclusion> -->
				<!-- <artifactId>jsr250-api</artifactId> -->
				<!-- <groupId>javax.annotation</groupId> -->
				<!-- </exclusion> -->
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
<!-- 			<version>1.0.1.Final</version> -->
			<scope>provided</scope>
		</dependency>

		<!-- JSON specific annotations (JsonIgnore) -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.11</version>
			<scope>compile</scope>
		</dependency>

		<!-- EJB security domain annotations -->
		<dependency>
			<groupId>org.jboss.ejb3</groupId>
			<artifactId>jboss-ejb3-ext-api</artifactId>
			<scope>provided</scope>
			<version>2.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>

	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>


	<profiles>
		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when 
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app 
				will need. -->
			<!-- By default that is to put the resulting archive into the 'deployments' 
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<properties>
				<hibernate.method>create</hibernate.method>
				<hibernate.show_sql>true</hibernate.show_sql>
			</properties>
			<build>
				<finalName>${project.name}</finalName>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<warSourceExcludes>
								ext/builds/**/*,
								ext/packages/*locale*/**/*,
								sass/**/*,
								*.xml,
								*.rb,
							</warSourceExcludes>
							<outputDirectory>deployments</outputDirectory>
							<warName>ROOT</warName>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>local-development</id>
			<properties>
				<hibernate.method>create-drop</hibernate.method>
				<hibernate.show_sql>true</hibernate.show_sql>
			</properties>
			<build>
				<finalName>${project.name}</finalName>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.4</version>
						<configuration>
							<warSourceExcludes>
								ext/builds/**/*,
								ext/packages/*locale*/**/*,
								sass/**/*,
								*.xml,
								*.rb,
							</warSourceExcludes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.jboss.as.plugins</groupId>
						<artifactId>jboss-as-maven-plugin</artifactId>
						<version>7.4.Final</version>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>local-development-build</id>
			<properties>
				<hibernate.method>create-drop</hibernate.method>
				<hibernate.show_sql>true</hibernate.show_sql>
			</properties>
			<build>
				<finalName>${project.name}</finalName>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.6</version>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>process-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/jsbuild</outputDirectory>
									<resources>
										<resource>
											<directory>${project.basedir}/src/main/webapp/build/production/bitfictionMvcTemplate</directory>
											<includes>
												<include>**/*</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.4</version>
						<configuration>
							<warSourceExcludes>
								ext/**/*,
								app/**/*,
								sass/**/*,
								*.js,
								*.json,
								*.css,
								*.xml,
								*.rb,
								bootstrap.js
							</warSourceExcludes>
						</configuration>
						<executions>
							<execution>
								<id>default-war</id>
								<configuration>
									<webResources>
										<resource>
											<directory>${project.build.directory}/jsbuild</directory>
											<targetPath>/</targetPath>
											<includes>
												<include>**/*</include>
											</includes>
										</resource>
									</webResources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.jboss.as.plugins</groupId>
						<artifactId>jboss-as-maven-plugin</artifactId>
						<version>7.4.Final</version>
					</plugin>
				</plugins>
			</build>
		</profile>
		
	</profiles>
</project>
