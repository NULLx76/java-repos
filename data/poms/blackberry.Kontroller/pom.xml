<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<name>kontroller-0.9.0</name>
	<groupId>com.blackberry.bdp.kontroller</groupId>
	<artifactId>kontroller</artifactId>
	<version>0.9.0</version>
	<packaging>jar</packaging>

	<scm>
		<connection>scm:git:git@gitlab.rim.net:ipgbd-software/kontroller</connection>
		<developerConnection>scm:git:git@gitlab.rim.net:ipgbd-software/kontroller.git</developerConnection>
		<url>https://gitlab.rim.net/ipgbd-software/kontroller</url>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
	</properties>
	<dependencies>

		<!-- KaBoom -->
		<dependency>
			<groupId>com.blackberry.bdp.kaboom</groupId>
			<artifactId>kaboom-api</artifactId>
			<version>0.9.0</version>
		</dependency>

		<!-- KaBoom -->
		<dependency>
			<groupId>com.blackberry.bdp.krackle</groupId>
			<artifactId>krackle</artifactId>
			<version>0.9.0</version>
		</dependency>

		<!-- Curator Framework -->
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-recipes</artifactId>
			<version>2.8.0</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.3</version>
		</dependency>

		<!-- Dropwizard Core -->
		<dependency>
			<groupId>io.dropwizard</groupId>
			<artifactId>dropwizard-core</artifactId>
			<version>0.8.1</version>
		</dependency>

		<!-- Dropwizard Auth -->
		<dependency>
			<groupId>io.dropwizard</groupId>
			<artifactId>dropwizard-auth</artifactId>
			<version>0.8.1</version>
		</dependency>

		<!-- Dropwizard Assets -->
		<dependency>
			<groupId>io.dropwizard</groupId>
			<artifactId>dropwizard-assets</artifactId>
			<version>0.8.1</version>
		</dependency>

		<!-- BB Dropwizard AD LDAP Auth -->
		<dependency>
			<groupId>com.blackberry.bdp.dwauth</groupId>
			<artifactId>dwMsAdLdapAuth</artifactId>
			<version>0.1.3</version>
		</dependency>

		<dependency>
			<groupId>com.bazaarvoice.dropwizard</groupId>
			<artifactId>dropwizard-configurable-assets-bundle</artifactId>
			<version>0.2.2</version>
		</dependency>

		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.2</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>

		<!-- Guava 18.0 specifically, prevents curator from downgrading Guava to 16.0.  There might be better way of doing this  -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.9.5</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>2.0.0</version>
		</dependency>
	</dependencies>
	<build>

		<plugins>

			<!-- Generate a build number based off the commit hash -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
				</configuration>
			</plugin>

			<!-- Insert the build branch and commit hash into the manifest -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Build-Info>${buildNumber}</Build-Info>
							<SCM-Branch>${scmBranch}</SCM-Branch>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- Copy deps into lib/ -->
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<includeScope>runtime</includeScope>
							<excludeArtifactIds>log4j-api,log4j-core,log4j-slf4j-impl</excludeArtifactIds>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Build an RPM -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>rpm-maven-plugin</artifactId>
				<version>2.1.3</version>

				<!-- When to build -->
				<executions>
					<execution>
						<id>generate-rpm</id>
						<phase>install</phase>
						<goals>
							<goal>attached-rpm</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<defineStatements>
						<defineStatement>_tmppath /tmp</defineStatement>
					</defineStatements>
					<copyright>2015, BlackBerry, Limited.</copyright>
					<needarch>true</needarch>
					<group>Application/Hadoop</group>
					<requires>
						<require>shadow-utils</require>
					</requires>

					<defaultDirmode>755</defaultDirmode>
					<defaultFilemode>644</defaultFilemode>
					<defaultGroupname>kontroller</defaultGroupname>
					<defaultUsername>kontroller</defaultUsername>

					<mappings>

						<!-- Libraries -->
						<mapping>
							<directory>/opt/kontroller/lib</directory>
							<sources>
								<source>
									<location>${project.build.directory}</location>
									<includes>
										<include>${project.build.finalName}.jar</include>
									</includes>
								</source>
								<source>
									<location>${project.build.directory}/lib</location>
									<includes>
										<include>*</include>
									</includes>
								</source>
							</sources>
						</mapping>

						<!-- Config -->
						<mapping>
							<directory>/opt/kontroller/config</directory>
							<sources>
								<source>
									<location>${project.basedir}/conf</location>
									<includes>
										<include>*</include>
									</includes>
								</source>
							</sources>
						</mapping>

						<!-- Executables -->
						<mapping>
							<directory>/etc/rc.d/init.d</directory>
							<filemode>755</filemode>
							<sources>
								<source>
									<location>${project.basedir}/bin</location>
									<includes>
										<include>*</include>
									</includes>
								</source>
							</sources>
						</mapping>

						<!-- PID dir -->
						<mapping>
							<directory>/var/run/kontroller</directory>
						</mapping>

						<!-- Logs -->
						<mapping>
							<directory>/var/log/kontroller</directory>
						</mapping>

					</mappings>

					<!-- Create the user and the group if they do not already exist -->
					<preinstallScriptlet>
						<scriptFile>src/rpm/preinst</scriptFile>
					</preinstallScriptlet>

				</configuration>
			</plugin>

			<!-- Build a DEB package -->
			<plugin>
				<artifactId>jdeb</artifactId>
				<groupId>org.vafer</groupId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>jdeb</goal>
						</goals>
						<configuration>
							<verbose>true</verbose>
							<controlDir>src/deb/control</controlDir>
							<timestamped>true</timestamped>
							<dataSet>

								<!-- Create required directories -->
								<data>
									<type>template</type>
									<paths>
										<path>/opt/kontroller/config</path>
										<path>/opt/kontroller/lib</path>
										<path>/var/log/kontroller</path>
										<path>/var/run/kontroller</path>
									</paths>
									<mapper>
										<type>perm</type>
										<filemode>755</filemode>
										<user>kontroller</user>
										<group>kontroller</group>
									</mapper>
								</data>

								<!-- Copy the main artifact jar -->
								<data>
									<type>file</type>
									<src>target/${project.build.finalName}.jar</src>
									<dst>/opt/kontroller/lib/${project.build.finalName}.jar</dst>
									<mapper>
										<type>perm</type>
										<filemode>644</filemode>
										<user>kontroller</user>
										<group>kontroller</group>
									</mapper>
								</data>

								<!-- Copy all required libraries -->
								<data>
									<type>directory</type>
									<src>target/lib</src>
									<includes>*.jar</includes>
									<mapper>
										<type>perm</type>
										<prefix>/opt/kontroller/lib</prefix>
										<filemode>644</filemode>
										<user>kontroller</user>
										<group>kontroller</group>
									</mapper>
								</data>

								<!-- Copy the config sample(s) -->
								<data>
									<type>files</type>
									<paths>
										<path>${project.basedir}/conf/sample.kontroller-env.sh</path>
										<path>${project.basedir}/conf/sample.kontroller.yaml</path>
									</paths>
									<dst>/opt/kontroller/config</dst>
								</data>

								<!-- Copy the init upstart script -->
								<data>
									<src>${project.basedir}/init/kontroller.conf</src>
									<dst>/etc/init/kontroller.conf</dst>
									<type>file</type>
								</data>

								<!-- Link the upstart file to -->
								<data>
									<type>link</type>
									<linkName>/etc/init.d/kontroller</linkName>
									<linkTarget>/lib/init/upstart-job</linkTarget>
									<symlink>true</symlink>
								</data>

							</dataSet>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>
