<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.integralblue</groupId>
  <artifactId>callerid-parent</artifactId>
  <version>1.4-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>callerid - Parent</name>
  
  <url>http://www.integralblue.com/callerid</url>
  
  <scm>
    <connection>scm:git:https://git.gitorious.org/callerid-for-android/mainline.git</connection>
    <developerConnection>scm:git:ssh://git@gitorious.org/callerid-for-android/mainline.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://gitorious.org/callerid-for-android</url>
  </scm>

  <modules>
    <module>application</module>
    <module>application-it</module>
  </modules>

  <properties>
        <!-- set a custom format that is guaranteed to grow as a Long number, so it can be used as version code
        in the AndroidManifest.xml -->
        <maven.build.timestamp.format>yyMMdddHHmm</maven.build.timestamp.format>
        <!-- this trick of loading build timestamp into other property is necessary due to
        http://jira.codehaus.org/browse/MRESOURCES-99 and also more readable -->
        <versionCode>${maven.build.timestamp}</versionCode>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.google.android</groupId>
        <artifactId>android</artifactId>
        <version>4.0.1.2</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.google.android</groupId>
        <artifactId>android-test</artifactId>
        <version>4.0.1.2</version>
        <scope>provided</scope>
      </dependency>
	  <dependency>
	    <groupId>commons-logging</groupId>
	    <artifactId>commons-logging</artifactId>
	    <version>1.1</version>
	    <scope>provided</scope>
	  </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <resources>
      <!-- a pair definition for resource filtering of xml files only (not binary files since they get mangled -->
      <resource>
        <directory>${project.basedir}/res</directory>
        <filtering>true</filtering>
        <targetPath>${project.build.directory}/filtered-res</targetPath>
        <includes>
          <include>**/*.xml</include>
        </includes>
      </resource>
      <resource>
        <directory>${project.basedir}/res</directory>
        <filtering>false</filtering>
        <targetPath>${project.build.directory}/filtered-res</targetPath>
        <excludes>
          <exclude>**/*.xml</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>${project.basedir}</directory>
        <filtering>true</filtering>
        <targetPath>${project.build.directory}/filtered-manifest</targetPath>
        <includes>
          <include>AndroidManifest.xml</include>
        </includes>
      </resource>
      <resource>
           <directory>src/main/resources</directory>
           <filtering>false</filtering>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <configuration>
                <encoding>UTF-8</encoding>
            </configuration>
        </plugin>
        <plugin>
          <groupId>com.jayway.maven.plugins.android.generation2</groupId>
          <artifactId>android-maven-plugin</artifactId>
          <version>3.6.0</version>
          <inherited>true</inherited>
          <configuration>
            <androidManifestFile>${project.basedir}/AndroidManifest.xml</androidManifestFile>
            <assetsDirectory>${project.basedir}/assets</assetsDirectory>
            <resourceDirectory>${project.basedir}/res</resourceDirectory>
            <nativeLibrariesDirectory>${project.basedir}/src/main/native</nativeLibrariesDirectory>
            <sdk>
              <platform>16</platform>
            </sdk>
            <deleteConflictingFiles>true</deleteConflictingFiles>
            <undeployBeforeDeploy>true</undeployBeforeDeploy>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.3.2</version>
          <inherited>true</inherited>
          <configuration>
            <source>1.5</source>
            <target>1.5</target>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.1</version>
          <configuration>
            <autoVersionSubmodules>true</autoVersionSubmodules>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-jarsigner-plugin</artifactId>
          <version>1.2</version>
          <inherited>true</inherited>
          <configuration>
            <removeExistingSignatures>true</removeExistingSignatures>
            <archiveDirectory />
            <archive>${project.build.directory}/${project.build.finalName}.${project.packaging}</archive>
            <verbose>true</verbose>
            <certs>true</certs>
            <keystore>${sign.keystore}</keystore>
            <alias>${sign.alias}</alias>
            <storepass>${sign.storepass}</storepass>
            <keypass>${sign.keypass}</keypass>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.5</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>1.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
       <id>development</id>
           <!-- using this since activeByDefault does not work well with multiple profiles -->
        <activation>
            <property>
                <name>environment</name>
                <value>!production</value>
            </property>
        </activation>
        <properties>
            <deployment.stage>In Development</deployment.stage>
            <android.debuggable>true</android.debuggable>
            <android.release>false</android.release>
        </properties>
    </profile>
    <profile>
      <id>release</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <properties>
          <deployment.stage>Release</deployment.stage>
          <android.debuggable>false</android.debuggable>
          <android.release>true</android.release>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-signing-properties</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireProperty>
                      <property>sign.keystore</property>
                      <message>The 'sign.keystore' property is missing. It must contain the path to the keystore used to sign the application.</message>
                    </requireProperty>
                    <requireFilesExist>
                      <files>
                        <file>${sign.keystore}</file>
                      </files>
                      <message>The 'sign.keystore' property does not point to a file. It must contain the path to the keystore used to sign the application.</message>
                    </requireFilesExist>
                    <requireProperty>
                      <property>sign.alias</property>
                      <message>The 'sign.alias' property is missing. It must contain the key alias used to sign the application.</message>
                    </requireProperty>
                    <requireProperty>
                      <property>sign.storepass</property>
                      <message>The 'sign.storepass' property is missing. It must contain the password of the keystore used to sign the application.
                      </message>
                    </requireProperty>
                    <requireProperty>
                      <property>sign.keypass</property>
                      <message>The 'sign.keypass' property is missing. It must contain the password of the key used to sign the application.</message>
                    </requireProperty>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>linux</id>
      <activation>
        <os>
          <family>unix</family>
        </os>
      </activation>
      <properties>
        <rt.jar.path>${java.home}/jre/lib/rt.jar</rt.jar.path>
        <jsse.jar.path>${java.home}/jre/lib/jsse.jar</jsse.jar.path>
      </properties>
    </profile>
    <!-- mac profile has to be after unix since running on mac will trigger
      both -->
    <profile>
      <id>mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <!-- absolute path -->
        <!--<rt.jar.path>/System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Classes/classes.jar</rt.jar.path> -->
        <!-- or with JAVA_HOME /System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home/ -->
        <rt.jar.path>${java.home}/../Classes/classes.jar</rt.jar.path>
        <jsse.jar.path>${java.home}/../Classes/jsse.jar</jsse.jar.path>
      </properties>
    </profile>
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <rt.jar.path>${java.home}/jre/lib/rt.jar</rt.jar.path>
        <jsse.jar.path>${java.home}/jre/lib/jsse.jar</jsse.jar.path>
      </properties>
    </profile>
  </profiles>
  <repositories>
		<repository>
			<id>oss-sonatype</id>
			<name>oss-sonatype</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	  	<repository>
		    <id>spring-milestone</id>
		    <name>Spring Maven MILESTONE Repository</name>
		    <url>http://maven.springframework.org/milestone</url>
		</repository>
	  	<repository>
		    <id>android-rome-feed-reader-repository</id>
		    <name>Android ROME Feed Reader Repository</name>
		    <url>https://android-rome-feed-reader.googlecode.com/svn/maven2/releases/</url>
		</repository>
  </repositories>
</project>
