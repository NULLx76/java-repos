<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.nita.cipher</groupId>
  <version>1.0</version>
  <artifactId>cipher-parent</artifactId>
  <packaging>pom</packaging>
  <name>Spark computing local file</name>
 
  <modules>
    <module>algorithm</module>
    <module>core</module>
    <module>sql</module>
    <module>spring</module>
  </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <generate-sources.skip>false</generate-sources.skip>
        <!-- To skip header file parsing phase: -Dgenerate-sources.skip=true -->
        <process-classes.skip>false</process-classes.skip>
        <!-- To skip native compilation phase: -Dprocess-classes.skip=true -->
        <platform>linux-x86_64</platform>
        <!-- For Android: -Dplatform=android-arm -->
        <platform.root></platform.root>
        <!-- -Dplatform.root=/path/to/android-ndk/ -->
        <platform.compiler></platform.compiler>
        <!-- -Dplatform.compiler=/path/to/arm-linux-androideabi-g++ -->
        <platform.properties>${platform}</platform.properties>
        <opencv.version>2.4.10</opencv.version>
        <ffmpeg.version>2.5.1</ffmpeg.version>

        <maven.compiler.source>1.6</maven.compiler.source>
        <maven.compiler.target>1.6</maven.compiler.target>
        <encoding>UTF-8</encoding>
        <scala.version>2.10.3</scala.version>
        <scala.tools.version>2.10</scala.tools.version>
        <spark.version>1.2.0</spark.version>
        <spark.scala.version>2.10</spark.scala.version>
        <javacpp.version>0.10</javacpp.version>
    </properties>

    <dependencyManagement>
        <dependencies>

            <!-- Scala -->
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
                <scope>compile</scope>
            </dependency>

            <!-- Spark ecosystem-->
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_${spark.scala.version}</artifactId>
                <version>${spark.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming_${spark.scala.version}</artifactId>
                <version>${spark.version}</version>
                <scope>compile</scope>
            </dependency>

            <!-- JavaCV -->
            <dependency>
                <groupId>org.bytedeco</groupId>
                <artifactId>javacv</artifactId>
                <version>${javacpp.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bytedeco.javacpp-presets</groupId>
                <artifactId>opencv</artifactId>
                <version>${opencv.version}-${javacpp.version}</version>
                <classifier>linux-x86_64</classifier>
            </dependency>
            <dependency>
                <groupId>org.bytedeco.javacpp-presets</groupId>
                <artifactId>ffmpeg</artifactId>
                <version>${ffmpeg.version}-${javacpp.version}</version>
                <classifier>linux-x86_64</classifier>
            </dependency>
            <!-- jdbc driver -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.1.31</version>
            </dependency>

            <!-- jeromq Pure Java implementation of libzmq -->
            <dependency>
                <groupId>org.zeromq</groupId>
                <artifactId>jeromq</artifactId>
                <version>0.3.4</version>
            </dependency>

            <!-- Test  -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.8.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scala-tools.testing</groupId>
                <artifactId>specs_${scala.tools.version}</artifactId>
                <version>1.6.9</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest</artifactId>
                <version>1.2</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>3.8.1</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>${project.artifactId}</finalName>
        <pluginManagement>
            <plugins>

                <plugin>
                    <groupId>org.scala-tools</groupId>
                    <artifactId>maven-scala-plugin</artifactId>
                    <version>2.15.0</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.4</version>
                    <executions>
                        <execution>
                            <id>generate-sources</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>resources</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.3</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.6</version>
                </plugin>

                <plugin>
                    <groupId>org.bytedeco</groupId>
                    <artifactId>javacpp</artifactId>
                    <version>${javacpp.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.3</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>2.3</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.5.3</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.5</version>
                </plugin>



            </plugins>
        </pluginManagement>
    </build>

</project>
