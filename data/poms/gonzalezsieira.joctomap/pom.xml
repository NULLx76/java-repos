<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>es.usc.citius.lab</groupId>
    <artifactId>joctomap</artifactId>
    <version>1.9.0.2-SNAPSHOT</version>
    <modules>
        <module>joctomap-ros</module>
        <module>joctomap-core</module>
    </modules>
    <packaging>pom</packaging>

    <name>joctomap</name>
    <url>http://maven.apache.org</url>

    <!-- Git configuration -->
    <scm>
        <connection>scm:git:https://forxa.citius.usc.es/adrian.gonzalez/joctomap.git</connection>
        <developerConnection>scm:git:https://forxa.citius.usc.es/adrian.gonzalez/joctomap.git</developerConnection>
        <url>scm:git:https://forxa.citius.usc.es/adrian.gonzalez/joctomap.git</url>
    </scm>

    <inceptionYear>2014-2017</inceptionYear>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <main.class>es.usc.citius.lab.joctomap.Main</main.class>
    </properties>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.2.1</version>
                    <executions>
                        <!-- Run compile.sh to build Octomap, also build *.cpp files and obtain
                        *.so -->
                        <execution>
                            <id>resources</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <executable>bash</executable>
                                <arguments>
                                    <argument>${session.executionRootDirectory}/copy-resources.sh</argument>
                                    <argument>${session.executionRootDirectory}</argument>
                                    <argument>${basedir}</argument>
                                </arguments>
                                <successCodes>
                                    <successCode>0</successCode>
                                </successCodes>
                            </configuration>
                        </execution>
                        <!-- Run clean.sh to remove binary compiled files in C/C++ -->
                        <execution>
                            <id>clean</id>
                            <phase>clean</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <executable>bash</executable>
                                <arguments>
                                    <argument>${basedir}/clean.sh</argument>
                                    <argument>${session.executionRootDirectory}</argument>
                                    <argument>${basedir}</argument>
                                </arguments>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <mainClass>${main.class}</mainClass>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Configure to use JDK 1.6 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!-- Put main class in MANIFEST -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${main.class}</mainClass>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                        </manifest>
                    </archive>
                    <excludes>
                        <exclude>*.ot</exclude>
                        <exclude>*.ppm</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib/</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
                        
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>2.11</version>
                <configuration>
                    <header>com/mycila/maven/plugin/license/templates/APACHE-2.txt</header>
                    <properties>
                        <owner>Adrián González Sieira</owner>
                        <email>adrian.gonzalez@usc.es</email>
                    </properties>
                    <includes>
                        <include>src/main/java/**</include>
                        <include>src/test/java/**</include>
                        <include>joctomap-natives/src/**</include>
                        <include>joctomap-natives/include/**</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>

                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                    <overwrite>true</overwrite>
                    <resources>
                        <resource>
                            <directory>${basedir}/src/main/resources</directory>
                        </resource>
                        <resource>
                            <directory>${basedir}/src/test/resources</directory>
                        </resource>
                    </resources>
                </configuration>

            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.1</version>
                <configuration>
                    <show>private</show>
                    <nohelp>true</nohelp>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
