<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>rs.pelotas</groupId>
    <artifactId>tracker</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>tracker</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>        
        
        <version.plugin.wildfly>1.0.2.Final</version.plugin.wildfly>
        <version.plugin.compiler>3.1</version.plugin.compiler>
        <version.plugin.surefire>2.16</version.plugin.surefire>
        <version.plugin.war>2.5</version.plugin.war>
        
        <maven.compiler.target>1.7</maven.compiler.target>
        <maven.compiler.source>1.7</maven.compiler.source>

        <wildfly.home>${env.WILDFLY_HOME}</wildfly.home>
        <wildfly.hostname>127.0.0.1</wildfly.hostname>
        <wildfly.port>9990</wildfly.port>
        <wildfly.username>wildfly</wildfly.username>
        <wildfly.password>wildfly</wildfly.password>
        
        <datasource.tracker.name>TrackerDS</datasource.tracker.name>
        <datasource.tracker.jndi>java:jboss/datasources/TrackerDS</datasource.tracker.jndi>
        <datasource.tracker.driver>mysql</datasource.tracker.driver>
        <datasource.tracker.class>com.mysql.jdbc.Driver</datasource.tracker.class>
        <datasource.tracker.url>jdbc:mysql://localhost:3306/tracker</datasource.tracker.url>
        <datasource.tracker.username>tracker</datasource.tracker.username>
        <datasource.tracker.password>tracker</datasource.tracker.password>
        <datasource.tracker.enable>true</datasource.tracker.enable>
        <datasource.tracker.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</datasource.tracker.dialect>

        <datasource.traccar.name>TraccarDS</datasource.traccar.name>
        <datasource.traccar.jndi>java:jboss/datasources/TraccarDS</datasource.traccar.jndi>
        <datasource.traccar.driver>mysql</datasource.traccar.driver>
        <datasource.traccar.class>com.mysql.jdbc.Driver</datasource.traccar.class>
        <datasource.traccar.url>jdbc:mysql://localhost:3306/traccar</datasource.traccar.url>
        <datasource.traccar.username>traccar</datasource.traccar.username>
        <datasource.traccar.password>traccar</datasource.traccar.password>
        <datasource.traccar.enable>true</datasource.traccar.enable>
        <datasource.traccar.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</datasource.traccar.dialect>
    </properties>

    <dependencies>
        <!-- Arch Java -->
        <dependency>
            <groupId>rs.pelotas</groupId>
            <artifactId>arch</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/arch-1.0-SNAPSHOT.jar</systemPath>
        </dependency>
        <!-- /Arch Java -->

        <!-- Annotation API -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.2_spec</artifactId>
            <version>1.0.0.Final</version>
            <scope>provided</scope>
        </dependency>
        <!-- /Annotation API -->
        
        <!-- EJB API -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <version>1.0.0.Final</version>
            <scope>provided</scope>
        </dependency>
        <!-- /EJB API -->
        
        <!-- JPA API -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <version>1.0.0.Final</version>
            <scope>provided</scope>
        </dependency>
        <!-- JPA 2.0 metamodel classes for typesafe criteria queries -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>5.0.3.Final</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator-annotation-processor</artifactId>
            <version>5.2.2.Final</version>
            <scope>provided</scope>
        </dependency>
        <!-- /JPA API -->

        <!-- JTA API -->
        <dependency>
            <groupId>org.jboss.spec.javax.transaction</groupId>
            <artifactId>jboss-transaction-api_1.2_spec</artifactId>
            <version>1.0.0.Final</version>
            <scope>provided</scope>
        </dependency>
        <!-- /JTA API -->

        <!-- Bean Validation API -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.2.2.Final</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- /Bean Validation API -->

        <!-- Servlet API -->
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.1_spec</artifactId>
            <version>1.0.0.Final</version>
            <scope>provided</scope>
        </dependency>
        <!-- /Servlet API -->
        
        <!-- JSF API -->
        <dependency>
            <groupId>org.jboss.spec.javax.faces</groupId>
            <artifactId>jboss-jsf-api_2.2_spec</artifactId>
            <version>2.2.12</version>
            <scope>provided</scope>
        </dependency>
        <!-- JSF API -->

        <!-- JSON API -->
        <dependency>
            <groupId>org.jboss.spec.javax.json</groupId>
            <artifactId>jboss-json-api_1.0_spec</artifactId>
            <version>1.0.0.Final</version>
            <scope>provided</scope>
        </dependency>
        <!-- /JSON API -->
        
        <!-- JAX-RS API -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>jaxrs-api</artifactId>
            <version>3.0.12.Final</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <version>3.0.13.Final</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <version>3.0.13.Final</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-servlet-initializer</artifactId>
            <version>3.0.13.Final</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-links</artifactId>
            <version>3.0.13.Final</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxb-provider</artifactId>
            <version>3.0.13.Final</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jettison-provider</artifactId>
            <version>3.0.13.Final</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.jettison</groupId>
                    <artifactId>jettison</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <version>1.3.7</version>
        </dependency>

        <!-- /JAX-RS API -->

        <!-- CDI API -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>
        <!-- /CDI API -->
        
        <!-- Concurrency API -->
        <dependency>
            <groupId>org.jboss.spec.javax.enterprise.concurrent</groupId>
            <artifactId>jboss-concurrency-api_1.0_spec</artifactId>
            <version>1.0.0.Final</version>
            <scope>provided</scope>
        </dependency>
        <!-- /Concurrency API -->
        
        <!-- Batch API -->
        <dependency>
            <groupId>org.jboss.spec.javax.batch</groupId>
            <artifactId>jboss-batch-api_1.0_spec</artifactId>
            <version>1.0.0.Final</version>
            <scope>provided</scope>
        </dependency>
        <!-- /Batch API -->
        
        <!-- JUnit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <!-- /JUnit -->
        
        <!-- Arquillian -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <version>1.1.10.Final</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <version>1.1.10.Final</version>
            <scope>test</scope>
        </dependency>
        <!-- /Arquillian -->
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <executions>
                    <execution>
                        <id>checkstyle</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <configLocation>checkstyle.xml</configLocation>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <excludes>**/org/jboss/**/*</excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <webXml>src/main/resources/config_xml/insecure.web.xml</webXml>
                </configuration>
            </plugin>

            <!-- mvn package wildfly:deploy -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>1.0.2.Final</version>
                <configuration>
                    <jbossHome>${wildfly.home}</jbossHome>
                    <hostname>${wildfly.hostname}</hostname>
                    <port>${wildfly.port}</port>
                    <username>${wildfly.username}</username>
                    <password>${wildfly.password}</password>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>setup-wildfly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.19</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <version>1.0.2.Final</version>
                        <executions>
                            <execution>
                                <id>undeploy</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>undeploy</goal>
                                </goals>
                                <configuration>
                                    <ignoreMissingDeployment>true</ignoreMissingDeployment>
                                </configuration>
                            </execution>
                            <execution>
                                <id>add-datasource-tracker</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>add-resource</goal>
                                </goals>
                                <configuration>
                                    <address>subsystem=datasources,data-source=${datasource.tracker.name}</address>
                                    <resources>
                                        <resource>
                                            <properties>
                                                <jndi-name>${datasource.tracker.jndi}</jndi-name>
                                                <connection-url>${datasource.tracker.url}</connection-url>
                                                <driver-name>${datasource.tracker.driver}</driver-name>
                                                <driver-class>${datasource.tracker.class}</driver-class>
                                                <user-name>${datasource.tracker.username}</user-name>
                                                <password>${datasource.tracker.password}</password>
                                                <enabled>${datasource.tracker.enable}</enabled>
                                            </properties>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>add-datasource-traccar</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>add-resource</goal>
                                </goals>
                                <configuration>
                                    <address>subsystem=datasources,data-source=${datasource.traccar.name}</address>
                                    <resources>
                                        <resource>
                                            <properties>
                                                <jndi-name>${datasource.traccar.jndi}</jndi-name>
                                                <connection-url>${datasource.traccar.url}</connection-url>
                                                <driver-name>${datasource.traccar.driver}</driver-name>
                                                <driver-class>${datasource.traccar.class}</driver-class>
                                                <user-name>${datasource.traccar.username}</user-name>
                                                <password>${datasource.traccar.password}</password>
                                                <enabled>${datasource.traccar.enable}</enabled>
                                            </properties>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>execute-commands</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>execute-commands</goal>
                                </goals>
                                <configuration>
                                    <execute-commands>
                                        <!--command> /subsystem=ee/service=default-bindings :write-attribute(name=datasource,value=java:jboss/datasources/TrackerDS)</command-->
                                        <scripts>
                                            <script>${project.basedir}/src/main/resources/jboss_scripts_cli/02_config_batch_datasource.cli</script>
                                            <script>${project.basedir}/src/main/resources/jboss_scripts_cli/03_config_ee_datasource.cli</script>
                                            <script>${project.basedir}/src/main/resources/jboss_scripts_cli/99_reload.cli</script>
                                        </scripts>
                                    </execute-commands>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>setup-database</id>
            <properties>
                <hibernate.hbm2ddl.auto>create</hibernate.hbm2ddl.auto>
                <hibernate.hbm2ddl.import_files>
                    /database_dump_sql/01_user.sql,
                    /database_dump_sql/02_device.sql,
                    /database_dump_sql/03_user_device.sql,
                    /database_dump_sql/04_role.sql,
                    /database_dump_sql/05_user_role.sql,
                    /database_dump_sql/06_user_meta.sql,
                    /database_dump_sql/07_device_meta.sql,
                    /database_dump_sql/08_position.sql,
                    /database_dump_sql/09_device_position.sql,
                    /database_dump_sql/99_drop_traccar.sql
                </hibernate.hbm2ddl.import_files>
            </properties>
        </profile>
        
        <profile>
            <!-- The default profile skips all tests, though you can tune 
            it to run just unit tests based on a custom pattern -->
            <!-- Seperate profiles are provided for running all tests, including 
            Arquillian tests that execute in the specified container -->
            <id>developer</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <hibernate.show_sql>true</hibernate.show_sql>
                <hibernate.format_sql>true</hibernate.format_sql>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.19</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <version>1.0.2.Final</version>
                        <executions>
                            <!--execution>
                                <id>deploy_application</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                            </execution-->
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- An optional Arquillian testing profile that executes tests in your WildFly instance -->
            <!-- This profile will start a new WildFly instance, and execute the test, shutting it down when done -->
            <!-- Run with: mvn clean test -Parq-wildfly-managed -->
            <id>arq-wildfly-managed</id>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <version>8.2.1.Final</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <!-- An optional Arquillian testing profile that executes tests in a remote WildFly instance -->
            <!-- Run with: mvn clean test -Parq-wildfly-remote -->
            <id>arq-wildfly-remote</id>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly</groupId>
                    <artifactId>wildfly-arquillian-container-remote</artifactId>
                    <version>8.2.1.Final</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
        
        <profile>
            <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
            <!-- Use this profile for any OpenShift specific customization your app will need. -->
            <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
            <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
            <id>openshift</id>
            <properties>
                <hibernate.hbm2ddl.auto>none</hibernate.hbm2ddl.auto>
                <hibernate.show_sql>false</hibernate.show_sql>
                <hibernate.format_sql>false</hibernate.format_sql>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <webXml>src/main/resources/config_xml/secure.web.xml</webXml>
                            <!--outputDirectory>deployments</outputDirectory-->
                            <!--warName>ROOT</warName-->
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
<!--
        <profile>
            <id>sonar</id>
            <properties>
                <sonar.jdbc.url>jdbc:mysql://sonar.dyndns-ip.com:3306/sonar?useUnicode=true&amp;characterEncoding=utf8</sonar.jdbc.url>
                <sonar.jdbc.username>sonar</sonar.jdbc.username>
                <sonar.jdbc.password>sonar</sonar.jdbc.password>
                <sonar.host.url>http://sonar.dyndns-ip.com:9000</sonar.host.url>
            </properties>
        </profile>
-->
    </profiles>
</project>