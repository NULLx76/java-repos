<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>cn.hp.oa</groupId>
  <artifactId>SSMMavenOA</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>SSMMavenOA Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <!-- 定义变量 -->
  <properties>
  	<spring.version>3.2.0.RELEASE</spring.version>
  </properties>
  
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
    
     <!-- Spring3.2依赖 -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-test</artifactId>
		<version>${spring.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-core</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context-support</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-tx</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aop</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-orm</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-oxm</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- 配置支持事物的事务管理器applicationContext-transaction.xml中
	org.springframework.jdbc.datasource.DataSourceTransactionManager
	 -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jdbc</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-web</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aspects</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	<!-- MyBatis依赖包 -->
	<dependency>
		<groupId>org.mybatis</groupId>
		<artifactId>mybatis</artifactId>
		<version>3.2.7</version>
	</dependency>
	
	<!-- MyBatis-Spring整合包 -->
	<dependency>
		<groupId>org.mybatis</groupId>
		<artifactId>mybatis-spring</artifactId>
		<version>1.2.2</version>
	</dependency>
	     
    <!-- JPA依赖(实体类PO使用) -->
    <dependency>
		<groupId>org.hibernate.javax.persistence</groupId>
		<artifactId>hibernate-jpa-2.1-api</artifactId>
		<version>1.0.0.Final</version>
	</dependency>
	
	<!-- 通用Mapper依赖 -->
	<dependency>
		<groupId>tk.mybatis</groupId>
		<artifactId>mapper</artifactId>
		<version>3.3.6</version>
	</dependency>
	
	<!-- MyBatis_PageHelper分页依赖 -->
    <dependency>
		<groupId>com.github.pagehelper</groupId>
		<artifactId>pagehelper</artifactId>
		<version>4.1.1</version>
	</dependency>
	
	<!-- JSTL -->
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>jstl</artifactId>
		<version>1.2</version>
	</dependency>
	
	<!-- mysql-connector -->	
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.18</version>
	</dependency> 
	
	<!-- servlet-api和jsp-api -->
	<dependency>
    	<groupId>servletapi</groupId>
    	<artifactId>servletapi</artifactId>
    	<version>2.4</version>
    	<!-- 指明只在编译中有效(因为发布过程中Tomcat等容器已经包含了该jar包，导致冲突) -->
    	<scope>provided</scope>
    </dependency>
    <dependency>
		<groupId>javax.servlet.jsp</groupId>
		<artifactId>jsp-api</artifactId>
		<version>2.2</version>
    	<scope>provided</scope>
	</dependency>
	
	<!-- dbcp数据库连接池(数据源) -->
	<dependency>
		<groupId>commons-dbcp</groupId>
		<artifactId>commons-dbcp</artifactId>
		<version>1.2.2</version>
	</dependency>
	
	<!-- 校验器 -->
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-validator</artifactId>
		<version>4.3.0.Final</version>
	</dependency>
	
	<!-- slf4j到log4j的转接包,才能看到sql语句打印(依赖了log4j，不用单独配置上述log4j) -->
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-log4j12</artifactId>
		<version>1.7.5</version>
	</dependency>
	
	<!-- fastjson -->
	<dependency>
		<groupId>com.alibaba</groupId>
		<artifactId>fastjson</artifactId>
		<version>1.2.8</version>
	</dependency>
	
	<!-- 对用户密码进行MD5加密 -->
	<dependency>
		<groupId>commons-codec</groupId>
		<artifactId>commons-codec</artifactId>
		<version>1.10</version>
	</dependency>
	
	<!-- 使用懒加载(延迟加载所需的cglib)
	太高版本的如3.2.1提示spring部分xml配置文件红叉报错，但是能正常运行 -->
	<dependency>
		<groupId>cglib</groupId>
		<artifactId>cglib</artifactId>
		<version>2.2.2</version>
	</dependency>
	
	
	
	
  </dependencies>
  <build>
    <finalName>SSMMavenOA</finalName>
    
    <plugins>
    
    	<!--
    		解决maven与eclipse中@override出现must override a superclass method错误  
    		显示指定java1.6
    		maven的核心插件complier默认只支持java1.3，我们需要配置该插件使其支持java1.6
    		（因为@Override在1.5中只适用重写父类方法，1.6中适用实现接口） 
    	 -->
    	<plugin>
    		<groupId>org.apache.maven.plugins</groupId>  
			<artifactId>maven-compiler-plugin</artifactId>  
			<version>2.1</version>  
			<configuration>  
				<source>1.6</source>  
			    <target>1.6</target>
			    <encoding>UTF-8</encoding><!-- 编译时的编码 -->  
 			</configuration>
    	</plugin>
    
    	<!-- 配置打war包的插件 -->
    	<plugin>
    		<groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-war-plugin</artifactId>
	        <version>2.2</version>
	        <configuration>
	        	<!-- 所打的war名称 -->
	        	<!-- <warName>hello</warName> -->
	        </configuration>
    	</plugin>
    	
    	<!-- 配置jetty服务器 -->
		 <plugin>
           <groupId>org.mortbay.jetty</groupId>
           <artifactId>jetty-maven-plugin</artifactId>
           <version>8.1.14.v20131031</version>
           <configuration>
               <scanIntervalSeconds>5</scanIntervalSeconds>
               <webApp>
                   <contextPath>/</contextPath>
                   <!-- 为Maven Jetty插件启用会话持久性 -->
                   <sessionHandler implementation="org.eclipse.jetty.server.session.SessionHandler">
			        <sessionManager implementation="org.eclipse.jetty.server.session.HashSessionManager">
			          <storeDirectory>${basedir}/target/sessions</storeDirectory>
			        </sessionManager>
			       </sessionHandler>
               </webApp>
               <connectors>
                    <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                        <port>8888</port>
                    </connector>
                </connectors>
            </configuration>
         </plugin>
    </plugins>    
    
  </build>
</project>
