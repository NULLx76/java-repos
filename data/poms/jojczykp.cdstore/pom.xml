<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>pl.jojczykp</groupId>
	<artifactId>cdstore</artifactId>
	<version>1.0.144</version>
	<name>cdstore</name>
	<url>https://github.com/jojczykp/cdstore</url>

	<issueManagement>
		<url>https://github.com/jojczykp/cdstore/issues</url>
		<system>GitHub Issues</system>
	</issueManagement>

	<licenses>
		<license>
			<name>GNU General Public License (GPL) version 3</name>
			<url>http://www.gnu.org/licenses/gpl-3.0.html</url>
		</license>
	</licenses>

	<scm>
		<url>https://github.com/jojczykp/cdstore</url>
		<connection>scm:git:git://github.com/jojczykp/cdstore.git</connection>
		<developerConnection>scm:git:git@github.com:jojczykp/cdstore.git</developerConnection>
	</scm>

	<developers>
		<developer>
			<email>pawel.jojczyk@gmail.com</email>
			<name>Pawe≈Ç Jojczyk</name>
			<url>https://github.com/jojczykp</url>
			<id>jojczykp</id>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<groovy.version>2.4.7</groovy.version>
		<spock.version>1.1-groovy-2.4-rc-3</spock.version>
		<aws.s3.region>us-west-2</aws.s3.region>
		<lombok.version>1.16.12</lombok.version>
	</properties>

	<repositories>
		<repository>
			<id>dynamodb-local</id>
			<name>DynamoDB Local Release Repository</name>
			<url>http://dynamodb-local.s3-website-us-west-2.amazonaws.com/release</url>
		</repository>
		<repository>
			<id>mapr</id>
			<name>Mapr releases repository</name>
			<url>http://repository.mapr.com/nexus/content/groups/mapr-public/releases</url>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.0</version>
				<configuration>
					<compilerId>groovy-eclipse-compiler</compilerId>
					<fork>true</fork>
					<compilerArguments>
						<javaAgentClass>lombok.launch.Agent</javaAgentClass>
					</compilerArguments>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-compiler</artifactId>
						<version>2.9.2-01</version>
					</dependency>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-batch</artifactId>
						<version>2.4.3-01</version>
					</dependency>
					<dependency>
						<groupId>org.projectlombok</groupId>
						<artifactId>lombok</artifactId>
						<version>${lombok.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.4.3</version>
				<configuration>
					<createDependencyReducedPom>true</createDependencyReducedPom>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>pl.jojczykp.cdstore.main.CdStoreApplication</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<parallel>all</parallel>
					<useUnlimitedThreads>true</useUnlimitedThreads>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.19.0</version>
				<configuration>
					<images>
						<image>
							<name>xjodoin/hbase:1.2.3</name>
							<alias>hbase</alias>
							<run>
								<wait>
									<tcp>
										<mode>direct</mode>
										<host>${docker.container.hbase.ip}</host>
										<ports>
											<port>2181</port>
											<port>60000</port>
											<port>60020</port>
										</ports>
									</tcp>
									<time>30000</time>
									<exec>
										<postStart>sh /migration/migrate.sh</postStart>
									</exec>
								</wait>
								<volumes>
									<bind>
										<volume>${project.basedir}/src/test/resources/hbase:/migration:ro</volume>
									</bind>
								</volumes>
								<log>
									<color>blue</color>
									<prefix>HBASE</prefix>
								</log>
							</run>
							<watch>
								<mode>none</mode>
							</watch>
						</image>
						<image>
							<name>peopleperhour/dynamodb:latest</name>
							<alias>dynamodb</alias>
							<run>
								<wait>
									<tcp>
										<mode>direct</mode>
										<host>${docker.container.dynamodb.ip}</host>
										<ports>
											<port>8000</port>
										</ports>
									</tcp>
									<time>30000</time>
									<exec>
										<postStart>sh /migration/migrate.sh</postStart>
									</exec>
								</wait>
								<volumes>
									<bind>
										<volume>${project.basedir}/src/test/resources/dynamodb:/migration:ro</volume>
									</bind>
								</volumes>
								<log>
									<color>green</color>
									<prefix>DYNAMODB</prefix>
								</log>
							</run>
							<watch>
								<mode>none</mode>
							</watch>
						</image>
						<image>
							<name>andyshinn/dnsmasq:2.76</name>
							<alias>dns</alias>
							<run>
								<entrypoint>dnsmasq -k --log-facility=-</entrypoint>
								<capAdd>NET_ADMIN</capAdd>
								<ports>
									<port>53:53/udp</port>
								</ports>
								<links>
									<!-- names of containers below will be resolvable by this dns server -->
									<link>hbase</link>
									<link>dynamodb</link>
								</links>
								<wait>
									<tcp>
										<mode>direct</mode>
										<host>${docker.container.dns.ip}</host>
										<ports>
											<port>53</port>
										</ports>
									</tcp>
									<time>30000</time>
									<exec>
										<postStart>bash /migration/migrate.sh</postStart>
									</exec>
								</wait>
								<log>
									<color>yellow</color>
									<prefix>DNS</prefix>
								</log>
							</run>
							<watch>
								<mode>none</mode>
							</watch>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>dockers-start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>dockers-stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.googlecode.maven-download-plugin</groupId>
				<artifactId>download-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<id>install-dynamodb_local</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>http://dynamodb-local.s3-website-${aws.s3.region}.amazonaws.com/dynamodb_local_latest.zip</url>
							<unpack>true</unpack>
							<outputDirectory>${project.build.directory}/dynamodb</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.bazaarvoice.maven.plugins</groupId>
				<artifactId>process-exec-maven-plugin</artifactId>
				<version>0.8</version>
				<executions>
					<execution>
						<id>start-tested-application</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<name>tested-application</name>
							<workingDir>tested-application</workingDir>
							<healthcheckUrl>http://localhost:8181/healthcheck</healthcheckUrl>
							<waitAfterLaunch>30</waitAfterLaunch>
							<arguments>
								<argument>java</argument>
								<argument>-Ddw.albums.endpoint=http://${docker.container.dynamodb.ip}:8000</argument>
								<argument>-Ddw.tracks.zookeeperQuorum=${docker.container.hbase.ip}</argument>
								<argument>-Ddw.tracks.zookeeperClientPort=2181</argument>
								<argument>-Ddw.tracks.hbaseMaster=${docker.container.hbase.ip}:60000</argument>
								<argument>-jar</argument>
								<argument>${basedir}/target/${project.artifactId}-${project.version}.jar</argument>
								<argument>server</argument>
								<argument>${project.basedir}/cfg/development.yml</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>stop-all</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop-all</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.12</version>
				<executions>
					<execution>
						<id>add-integration-test-source-as-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.basedir}/src/it/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<parallel>all</parallel>
					<useUnlimitedThreads>true</useUnlimitedThreads>
					<!-- exclude classes already present in fat jar -->
					<classpathDependencyScopeExclude>compile</classpathDependencyScopeExclude>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>external.atlassian.jgitflow</groupId>
				<artifactId>jgitflow-maven-plugin</artifactId>
				<version>1.0-m5.1</version>
				<configuration>
					<scmCommentPrefix xml:space="preserve">[RELEASE] </scmCommentPrefix>
					<enableSshAgent>true</enableSshAgent>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<pushFeatures>true</pushFeatures>
					<pushReleases>true</pushReleases>
					<pushHotfixes>true</pushHotfixes>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.jcraft</groupId>
						<artifactId>jsch</artifactId>
						<version>0.1.54</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- dropwizard -->
		<dependency>
			<groupId>io.dropwizard</groupId>
			<artifactId>dropwizard-core</artifactId>
			<version>1.0.5</version>
		</dependency>
		<!-- swagger -->
		<dependency>
			<groupId>com.smoketurner</groupId>
			<artifactId>dropwizard-swagger</artifactId>
			<version>1.0.5-4</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.code.findbugs</groupId>
					<artifactId>annotations</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet-core</artifactId>
			<version>2.26-b01</version>
		</dependency>
		<!-- dynamodb -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-dynamodb</artifactId>
			<version>1.11.78</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- hbase -->
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-shaded-client</artifactId>
			<version>1.3.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-winutils</artifactId>
			<version>2.7.1</version>
			<type>zip</type>
			<scope>runtime</scope>
		</dependency>
		<!-- test -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>DynamoDBLocal</artifactId>
			<version>1.10.5.1</version>
			<exclusions>
				<exclusion>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-server</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<version>${spock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>${groovy.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>3.2.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.5.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>1.8</version>
			<scope>test</scope>
		</dependency>
		<!-- code generation -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

</project>
