<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.14.RELEASE</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>

    <groupId>ac.simons</groupId>
    <artifactId>bootiful-databases</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>bootiful-databases</name>
    <description>Demos for the talk "Bootiful database-centric applications with jOOQ"</description>
    <url>https://github.com/michael-simons/bootiful-databases</url>
    <inceptionYear>2016</inceptionYear>
    
    <developers>
        <developer>
            <name>Michael J. Simons</name>
            <email>michael@simons.ac</email>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <flyway.version>4.2.0</flyway.version>
        <java.version>1.8</java.version>

        <!-- jOOQ is a code generator, it needs to be run before the build and 
            the application. So I cannot rely only on Spring properties. We keep them 
            for the "Master" Database inside the pom and put them in the default application 
            properties, where they can be easily overriden. To make this work, we have 
            to tell Maven to filter application.properties, see <resources /> -->
        <db.url>jdbc:postgresql://localhost:5432/${project.artifactId}</db.url>
        <db.username>${project.artifactId}</db.username>
        <db.password>${project.artifactId}</db.password>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.40.2</version>
                <configuration>
                    <images>
                        <image>
                            <name>postgres:10.22-alpine</name>
                            <run>
                                <env>
                                    <POSTGRES_USER>${project.artifactId}</POSTGRES_USER>
                                    <POSTGRES_PASSWORD>${project.artifactId}</POSTGRES_PASSWORD>
                                    <POSTGRES_DB>${project.artifactId}</POSTGRES_DB>
                                </env>
                                <ports>
                                    <port>5432:5432</port>
                                </ports>
                                <wait>
                                    <log>(?s)database system is ready to accept connections.*database system is ready to accept connections</log>
                                    <time>40000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${flyway.version}</version>
                <!-- Note that we're executing the Flyway plugin in the "generate-sources" 
                    phase -->
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>migrate</goal>
                        </goals>
                    </execution>
                </executions>
                <!-- Note that we need to prefix the db/migration path with filesystem: 
                    to prevent Flyway from looking for our migration scripts only on the classpath -->
                <configuration>
                    <url>${db.url}</url>
                    <user>${db.username}</user>
                    <password>${db.password}</password>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <!-- The jOOQ code generation plugin is also executed in the generate-sources 
                    phase, prior to compilation -->
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jdbc>
                        <driver>org.postgresql.Driver</driver>
                        <url>${db.url}</url>
                        <user>${db.username}</user>
                        <password>${db.password}</password>
                    </jdbc>
                    <generator>
                        <database>
                            <name>org.jooq.util.postgres.PostgresDatabase</name>
                            <schemaVersionProvider>SELECT :schema_name || '_' || MAX("version") FROM "schema_version"</schemaVersionProvider>
                            <includes>.*</includes>
                            <excludes>schema_version</excludes>
                            <schemata>
                                <schema>
                                    <inputSchema>public</inputSchema>
                                    <outputSchemaToDefault>true</outputSchemaToDefault>
                                </schema>
                            </schemata>
                        </database>
                        <generate>
                            <deprecated>false</deprecated>
                        </generate>
                        <target>
                            <packageName>ac.simons.bootiful_databases.db</packageName>
                            <directory>target/generated-sources/jooq</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
