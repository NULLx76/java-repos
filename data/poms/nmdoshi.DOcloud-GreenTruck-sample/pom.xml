<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.ibm.optim.oaas</groupId>
	<artifactId>greentruck</artifactId>
	<version>1.0-R1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>greentruck</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>		
	</properties>

	<dependencies>
	
	   <dependency>
	        <groupId>org.glassfish.jersey.core</groupId>
	        <artifactId>jersey-common</artifactId>
	        <version>2.20</version>
	        <scope>test</scope>
       </dependency>
    
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>1.19</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mongojack</groupId>
			<artifactId>mongojack</artifactId>
			<version>2.3.0</version>
		</dependency>

		<dependency>
			<groupId>com.ibm.optim.oaas</groupId>
			<artifactId>api_java_client</artifactId>
			<version>1.0-R1-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>1.7.5</version>
		</dependency>

		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
		</dependency>

		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<scope>provided</scope>
			<version>2.13.2</version>
		</dependency>

		<dependency>
			<groupId>com.wordnik</groupId>
			<artifactId>swagger-jaxrs_2.10</artifactId>
			<version>1.3.10</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.6</version>
		</dependency>

		<dependency>
			<groupId>com.ibm.icu</groupId>
			<artifactId>icu4j</artifactId>
			<version>53.1</version>
		</dependency>

	</dependencies>
	<build>
		<plugins>

			<!-- Ensure we use JDK 1.7 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<!-- package the WAR inside the Liberty server -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/defaultServer/apps</outputDirectory>
					<warName>${project.name}</warName>
				</configuration>
			</plugin>

			<!-- generate the local server.env to populate VCAP_SERVICES -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>create-server-env-for-local</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo>Detected a deployment config, creating a server.env file
									from VCAP_SERVICES property with local URLs</echo>
								<echo append="false" file="${project.build.directory}/server.env">
								VCAP_SERVICES={ "user-provided": [{"name": "docloud", "label":"user-provided", "credentials": { "client_id":"${docloud.apikey.clientid}", "url": "${docloud.baseurl}"}}]}
								</echo>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- Copy mongo driver to Liberty server -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.mongodb</groupId>
									<artifactId>mongo-java-driver</artifactId>
									<outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/defaultServer/lib</outputDirectory>
									<destFileName>mongo-java-driver.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Configure the Liberty server -->
			<plugin>
				<groupId>net.wasdev.wlp.maven.plugins</groupId>
				<artifactId>liberty-maven-plugin</artifactId>
				<version>1.1-SNAPSHOT</version>

				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>package-server</goal>
						</goals>
					</execution>
					
					
					<execution>
			            <id>start</id>
			            <phase>pre-integration-test</phase>
			            <goals>
			                <goal>start-server</goal>
			            </goals>
			            <configuration>
			                <serverStartTimeout>30</serverStartTimeout>                        
			            </configuration>
			        </execution>
						
			        <execution>
			            <id>stop</id>
			            <phase>post-integration-test</phase>
			            <goals>
			                <goal>stop-server</goal>
			            </goals>
			            <configuration>
			                <timeout>60000</timeout>                        
			            </configuration>
			        </execution>        
				</executions>
				

				<configuration>
					<install>
						<licenseCode>${wlp.licenseCode}</licenseCode>
					</install>

					<configFile>src/main/wlp/server.xml</configFile>
					<serverEnv>${project.build.directory}/server.env</serverEnv>
					<packageFile>${project.build.directory}/${project.name}-server.zip</packageFile>
					<include>usr</include>

					<bootstrapProperties>
						<Port>9080</Port>
					</bootstrapProperties>

					<features>
						<acceptLicense>true</acceptLicense>
						<whenFileExists>ignore</whenFileExists>
						<feature>mongodb-2.0</feature>
						<feature>ejbLite-3.1</feature>
						<feature>concurrent-1.0</feature>
						<feature>jaxrs-1.1</feature>
						<feature>json-1.0</feature>
						<feature>localConnector-1.0</feature>
						<feature>jsf-2.0</feature>						
        				<feature>websocket-1.0</feature>
					</features>
				</configuration>
			</plugin>

			<!-- Deploy to bluemix -->
			<plugin>
				<groupId>org.cloudfoundry</groupId>
				<artifactId>cf-maven-plugin</artifactId>
				<version>1.1.2</version>
				<executions>
					<execution>
						<phase>deploy</phase>
						<goals>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<server>bluemix_prod</server>
					<target>https://api.ng.bluemix.net</target>
					<url>greentruck-${cf.urlQualifier}.mybluemix.net</url>
					<appname>greentruck-${cf.urlQualifier}</appname>
					<path>${project.build.directory}/${project.name}-server.zip</path>
					<space>demo</space>
					<memory>512</memory>
					<services>
						<service>
							<name>docloud</name>
							<label>user-provided</label>
							<userProvidedCredentials>
								<url>${docloud.baseurl}</url>
								<client_id>${docloud.apikey.clientid}</client_id>
							</userProvidedCredentials>
						</service>
						<service>
							<name>mongo-greentruck</name>
							<label>mongolab</label>
							<plan>sandbox</plan>
						</service>
					</services>
				</configuration>
			</plugin>


	<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.13</version>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>install-liberty</id>

			<activation>
				<file>
					<missing>target/liberty/wlp/bin</missing>
				</file>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>net.wasdev.wlp.maven.plugins</groupId>
						<artifactId>liberty-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>create-server</goal>
									<goal>install-feature</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


	<pluginRepositories>

		<!-- Configure Sonatype OSS Maven snapshots repository -->
		<pluginRepository>
			<id>sonatype-nexus-snapshots</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>

	</pluginRepositories>

	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>

</project>
