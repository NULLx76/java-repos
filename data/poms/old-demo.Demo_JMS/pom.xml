<project 
	xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  
  	<modelVersion>4.0.0</modelVersion>

	<groupId>com.heqing.JMS</groupId>
	<artifactId>Demo_JMS</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>Demo_JMS</name>
	<url>http://maven.apache.org</url>
	
	<properties>
	  	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	  	
	  	<junit-version>4.12</junit-version>
		<log4j-version>1.2.17</log4j-version>
		<slf4j-version>1.7.19</slf4j-version>
		<aliMQ-version>1.2.1</aliMQ-version>
		<unirest-version>1.4.9</unirest-version>
		<spring.version>4.1.5.RELEASE</spring.version>
	</properties>
	
	<dependencies>
		<dependency>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-resources-plugin</artifactId>
		    <version>2.5</version>
		</dependency>
	
		<!-- 单元测试 -->
		<dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit-version}</version>
            <scope>test</scope>
        </dependency>
        
        <!-- 日志框架实现 -->
		<dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j-version}</version>
        </dependency>
        
        <!-- 日志接入的接口 -->
        <dependency>
            <groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
            <version>${slf4j-version}</version>
        </dependency>
        
        <!-- 链接slf4j-api和log4j中间的适配器 -->
        <dependency>
            <groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j-version}</version>
        </dependency>
        
        <!-- aliyun 消息队列 -->
        <dependency>
		   <groupId>com.aliyun.openservices</groupId>
		   <artifactId>ons-client</artifactId>
		   <version>${aliMQ-version}</version>
		</dependency>
		
		<!-- 轻量级Http开发库 -->
		<dependency>
			<groupId>com.mashape.unirest</groupId>
			<artifactId>unirest-java</artifactId>
			<version>${unirest-version}</version>
		</dependency>
		
		<!-- activeMQ 核心类 -->
		<dependency>
		    <groupId>org.apache.activemq</groupId>
		    <artifactId>activemq-all</artifactId>
		    <version>5.14.3</version>
		</dependency>
		
		<!-- alibaba 高效处理工具类 -->
		<dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>fastjson</artifactId>
		    <version>1.2.23</version>
		</dependency>
		
		<!-- rabbitMQ 高效处理工具类 -->
		<dependency>
		  	<groupId>com.rabbitmq</groupId>
		  	<artifactId>amqp-client</artifactId>
		  	<version>3.6.6</version>
		</dependency>
		
		<!-- spring-rabbitMQ -->
		<dependency>
	        <groupId>org.springframework.amqp</groupId>
	        <artifactId>spring-rabbit</artifactId>
	        <version>1.4.5.RELEASE</version>
	    </dependency>
		
		<!-- Spring核心包  -->
		<!-- Spring 框架基本的核心工具类  -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency> 
		
		<!-- SpringWeb下的工具包  -->
	    <dependency>  
	    	<groupId>org.springframework</groupId>  
	    	<artifactId>spring-web</artifactId>  
	    	<version>${spring.version}</version>  
		</dependency> 
	    
	    <!-- 提供对事务的支持，事务的相关处理以及实现类  -->
	    <dependency>  
	        <groupId>org.springframework</groupId>  
	        <artifactId>spring-tx</artifactId>  
	        <version>${spring.version}</version>  
	    </dependency> 
	    
	    <!-- SpringIoC(依赖注入)的基础实现,包含访问配置文件、创建和管理bean 以及进行IoC/DI操作相关的所有类  -->
		<dependency>  
	        <groupId>org.springframework</groupId>  
	        <artifactId>spring-beans</artifactId>  
	        <version>${spring.version}</version>  
	    </dependency> 
	    
	    <!-- spring提供在基础IoC功能上的扩展服务，此外还提供许多企业级服务的支持，如邮件服务、任务调度、JNDI定位、EJB集成、远程访问、缓存以及各种视图层框架的封装等  -->
		<dependency>  
	        <groupId>org.springframework</groupId>  
	        <artifactId>spring-context</artifactId>  
	        <version>${spring.version}</version>  
	    </dependency> 
		
		<!-- Spring-context的扩展支持,用于MVC方面  -->
		<dependency>  
	        <groupId>org.springframework</groupId>  
	        <artifactId>spring-context-support</artifactId>  
	        <version>${spring.version}</version>  
	    </dependency>
	    
	    <!-- Spring非核心包  -->
	    <!-- 整合SpringMVC的支持 -->
	    <dependency>  
	        <groupId>org.springframework</groupId>  
	        <artifactId>spring-webmvc</artifactId>  
	        <version>${spring.version}</version>  
	    </dependency>  

	    <!-- Spring提供对AspectJ框架的整合  -->
	    <dependency>  
			<groupId>org.springframework</groupId>  
			<artifactId>spring-aspects</artifactId>  
			<version>${spring.version}</version>  
		</dependency> 
		
		<!-- Spring提供AOP(面向切面编程)特性时所需的类和源码级元数据支持  -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency> 
	
		<!-- 为简化JMS API的使用而作的简单封装  -->
	    <dependency>  
	        <groupId>org.springframework</groupId>  
	        <artifactId>spring-jms</artifactId>  
	        <version>${spring.version}</version>  
	    </dependency> 
	    
	    <!-- 集成messaging api和消息协议提供支持  -->
		<dependency>  
			<groupId>org.springframework</groupId>  
			<artifactId>spring-messaging</artifactId>  
			<version>${spring.version}</version>  
		</dependency>
	
		<!-- 对Junit等测试框架的简单封装 -->
		<dependency>  
	        <groupId>org.springframework</groupId>  
	        <artifactId>spring-test</artifactId>  
	        <version>${spring.version}</version>  
	    </dependency> 
	</dependencies>
	
	<build>
		<finalName>Demo_JMS</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<!-- true:跳过测试 -->
					<skip>true</skip>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<path>/</path>
					<charset>UTF-8</charset>
					<port>80</port>
					<uriEncoding>UTF-8</uriEncoding>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.xml</include>
					<include>**/*.js</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
	</build>
	
	<!-- 阿里云maven仓库 -->
	<repositories>
		<repository>
			<id>public</id>
			<name>aliyun nexus</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>public</id>
			<name>aliyun nexus</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
</project>
