<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
  
	<groupId>mos.edu.server</groupId>
	<artifactId>fancinema</artifactId>
	<version>0.1-SNAPSHOT</version>
	<packaging>war</packaging>
  
	<name>FanCinemaServer</name>
  
	<properties>
	 	<java.version>1.8</java.version>
	 	<maven.compiler.version>3.5</maven.compiler.version>
	 	<maven.war.version>2.6</maven.war.version>
	 	
	 	<springframework.version>4.2.4.RELEASE</springframework.version>
	 	<springframework.data.version>1.9.2.RELEASE</springframework.data.version>
	 	<spring.hateoas.version>0.19.0.RELEASE</spring.hateoas.version>
	 	<javax.servlet-api.version>3.1.0</javax.servlet-api.version>
	 	<hibernate.version>5.0.2.Final</hibernate.version>
	 	<mysql.connector>5.1.38</mysql.connector>
	 	<dbcp2.version>2.1.1</dbcp2.version>
	 	<jackson.version>2.6.5</jackson.version>
	 	<javax.transaction.version>1.1</javax.transaction.version>
	</properties>
 
	<dependencies>
	<!-- Core -->
		<!-- Spring Framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<!-- Jackson Library -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
	<!-- Web -->
		<!-- Spring Framework Web MVC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<!-- Spring Framework HATEOAS -->
		<dependency>
			<groupId>org.springframework.hateoas</groupId>
			<artifactId>spring-hateoas</artifactId>
			<version>${spring.hateoas.version}</version>
		</dependency>
		<!-- Javax Servlet API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax.servlet-api.version}</version>
		</dependency>
	<!-- Database -->
		<!-- Spring Framework Data JPA -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${springframework.data.version}</version>
		</dependency>
		<!-- Hibernate Library -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<!-- MySQL Connector -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.connector}</version>
		</dependency>
		<!-- DBCP2 (DataBase Connection Pool 2) -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>${dbcp2.version}</version>
		</dependency>
		<!-- Javax Transaction API -->
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>${javax.transaction.version}</version>
		</dependency>
	</dependencies>
 
	<build>
		<finalName>FanCinemaServer</finalName>
	    
	   	<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven.war.version}</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
	   	</plugins>
	</build>
  
</project>
